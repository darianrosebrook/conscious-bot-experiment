{
  "timestamp": "2025-09-22T01:04:40.297Z",
  "overallSuccess": false,
  "overallScore": 36.111111111111114,
  "tierCompliance": {
    "1": 54,
    "2": 0,
    "3": 0
  },
  "gateResults": [
    {
      "gateId": "build-verification",
      "success": true,
      "score": 100,
      "results": [
        {
          "checkId": "core-build",
          "success": true,
          "duration": 1178,
          "output": "\n> @conscious-bot/core@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n> tsc\n\n"
        },
        {
          "checkId": "memory-build",
          "success": true,
          "duration": 977,
          "output": "\n> @conscious-bot/memory@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\n> tsc\n\n"
        },
        {
          "checkId": "safety-build",
          "success": true,
          "duration": 2213,
          "output": "\n> @conscious-bot/safety@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety\n> tsc\n\n"
        },
        {
          "checkId": "planning-build",
          "success": true,
          "duration": 947,
          "output": "\n> @conscious-bot/planning@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n> tsc -p tsconfig.build.json\n\n"
        },
        {
          "checkId": "cognition-build",
          "success": true,
          "duration": 1010,
          "output": "\n> @conscious-bot/cognition@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n> tsc\n\n"
        },
        {
          "checkId": "world-build",
          "success": true,
          "duration": 941,
          "output": "\n> @conscious-bot/world@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\n> tsc\n\n"
        },
        {
          "checkId": "dashboard-build",
          "success": true,
          "duration": 7859,
          "output": "\n> @conscious-bot/dashboard@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/dashboard\n> next build\n\n   ▲ Next.js 15.5.2\n\n   Creating an optimized production build ...\n ✓ Compiled successfully in 1726ms\n   Skipping linting\n   Checking validity of types ...\n   Collecting page data ...\nLoaded 1000 thoughts from persistent storage\n   Generating static pages (0/25) ...\n   Generating static pages (6/25) \r\n   Generating static pages (12/25) \r\n   Generating static pages (18/25) \r\n ✓ Generating static pages (25/25)\n   Finalizing page optimization ...\n   Collecting build traces ...\n\nRoute (app)                                 Size  First Load JS\n┌ ○ /                                    35.4 kB         149 kB\n├ ○ /_not-found                            983 B         103 kB\n├ ƒ /api/bot/status                        171 B         102 kB\n├ ƒ /api/environment-updates               171 B         102 kB\n├ ƒ /api/evaluation                        171 B         102 kB\n├ ƒ /api/events                            171 B         102 kB\n├ ƒ /api/goals                             171 B         102 kB\n├ ƒ /api/intrusive                         171 B         102 kB\n├ ƒ /api/inventory                         171 B         102 kB\n├ ƒ /api/live-stream-updates               171 B         102 kB\n├ ƒ /api/memories                          171 B         102 kB\n├ ƒ /api/memory-updates                    171 B         102 kB\n├ ƒ /api/notes                             171 B         102 kB\n├ ƒ /api/screenshots                       171 B         102 kB\n├ ƒ /api/stream                            171 B         102 kB\n├ ƒ /api/task-updates                      171 B         102 kB\n├ ƒ /api/tasks                             171 B         102 kB\n├ ƒ /api/world                             171 B         102 kB\n├ ƒ /api/ws/bot-state                      171 B         102 kB\n├ ƒ /api/ws/cognitive-stream               171 B         102 kB\n├ ƒ /api/ws/cognitive-stream/history       171 B         102 kB\n├ ƒ /api/ws/cot                            171 B         102 kB\n└ ƒ /api/ws/hud                            171 B         102 kB\n+ First Load JS shared by all             102 kB\n  ├ chunks/453b6fae-de44354c6fd60015.js  54.2 kB\n  ├ chunks/595-b56e9c4974c539ca.js       45.7 kB\n  └ other shared chunks (total)          1.86 kB\n\n\n○  (Static)   prerendered as static content\nƒ  (Dynamic)  server-rendered on demand\n\n"
        },
        {
          "checkId": "evaluation-build",
          "success": true,
          "duration": 1031,
          "output": "\n> @conscious-bot/evaluation@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation\n> tsc\n\n"
        },
        {
          "checkId": "minecraft-build",
          "success": true,
          "duration": 2407,
          "output": "\n> @conscious-bot/minecraft-interface@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/minecraft-interface\n> tsc\n\n"
        }
      ],
      "duration": 18563,
      "timestamp": "2025-09-22T01:01:18.186Z"
    },
    {
      "gateId": "type-checking",
      "success": true,
      "score": 100,
      "results": [
        {
          "checkId": "root-typecheck",
          "success": true,
          "duration": 3585,
          "output": "\n> conscious-bot@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot\n> turbo type-check\n\n• Packages in scope: @conscious-bot/cognition, @conscious-bot/core, @conscious-bot/dashboard, @conscious-bot/evaluation, @conscious-bot/mcp-server, @conscious-bot/memory, @conscious-bot/minecraft-interface, @conscious-bot/planning, @conscious-bot/safety, @conscious-bot/world\n• Running type-check in 10 packages\n• Remote caching disabled\n@conscious-bot/world:type-check: cache hit, replaying logs 93e2ef60321c6ce3\n@conscious-bot/world:type-check: \n@conscious-bot/world:type-check: > @conscious-bot/world@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\n@conscious-bot/world:type-check: > tsc --noEmit\n@conscious-bot/world:type-check: \n@conscious-bot/world:build: cache hit, replaying logs c7c266c3da530a98\n@conscious-bot/world:build: \r\n@conscious-bot/world:build: \u0004\r\n@conscious-bot/world:build: > @conscious-bot/world@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\r\n@conscious-bot/world:build: > tsc\r\n@conscious-bot/world:build: \r\n@conscious-bot/memory:type-check: cache hit, replaying logs 93a99a1832c3d48c\n@conscious-bot/memory:type-check: \n@conscious-bot/memory:type-check: > @conscious-bot/memory@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\n@conscious-bot/memory:type-check: > tsc --noEmit\n@conscious-bot/memory:type-check: \n@conscious-bot/mcp-server:build: cache hit, replaying logs 06ac302d661d0851\n@conscious-bot/mcp-server:build: \n@conscious-bot/mcp-server:build: > @conscious-bot/mcp-server@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/mcp-server\n@conscious-bot/mcp-server:build: > tsc\n@conscious-bot/mcp-server:build: \n@conscious-bot/memory:build: cache hit, replaying logs 67dff8f1a90614dc\n@conscious-bot/memory:build: \r\n@conscious-bot/memory:build: \u0004\r\n@conscious-bot/memory:build: > @conscious-bot/memory@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\r\n@conscious-bot/memory:build: > tsc\r\n@conscious-bot/memory:build: \r\n@conscious-bot/safety:build: cache hit, replaying logs 7612b98310d6f44f\n@conscious-bot/safety:build: \r\n@conscious-bot/safety:build: \u0004\r\n@conscious-bot/safety:build: > @conscious-bot/safety@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety\r\n@conscious-bot/safety:build: > tsc\r\n@conscious-bot/safety:build: \r\n@conscious-bot/planning:type-check: cache hit, replaying logs 474f185be7da41c6\n@conscious-bot/planning:type-check: \n@conscious-bot/planning:type-check: > @conscious-bot/planning@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n@conscious-bot/planning:type-check: > tsc --noEmit\n@conscious-bot/planning:type-check: \n@conscious-bot/planning:build: cache hit, replaying logs 98f51e4fbd1ed0b0\n@conscious-bot/planning:build: \r\n@conscious-bot/planning:build: \u0004\r\n@conscious-bot/planning:build: > @conscious-bot/planning@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\r\n@conscious-bot/planning:build: > tsc -p tsconfig.build.json\r\n@conscious-bot/planning:build: \r\n@conscious-bot/core:type-check: cache miss, executing 827177b3dc6d6a04\n@conscious-bot/core:build: cache hit, replaying logs 69362d2600e1d4e9\n@conscious-bot/core:build: \n@conscious-bot/core:build: > @conscious-bot/core@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n@conscious-bot/core:build: > tsc\n@conscious-bot/core:build: \n@conscious-bot/cognition:type-check: cache miss, executing db2eb55f484890b0\n@conscious-bot/cognition:build: cache hit, replaying logs 293c5790d991b78b\n@conscious-bot/cognition:build: \n@conscious-bot/cognition:build: > @conscious-bot/cognition@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n@conscious-bot/cognition:build: > tsc\n@conscious-bot/cognition:build: \n@conscious-bot/evaluation:build: cache hit, replaying logs 93ee13fc8bc5a451\n@conscious-bot/evaluation:build: \n@conscious-bot/evaluation:build: > @conscious-bot/evaluation@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation\n@conscious-bot/evaluation:build: > tsc\n@conscious-bot/evaluation:build: \n@conscious-bot/dashboard:type-check: cache miss, executing 83bd4415295f4913\n@conscious-bot/core:type-check: \n@conscious-bot/core:type-check: > @conscious-bot/core@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n@conscious-bot/core:type-check: > tsc --noEmit\n@conscious-bot/core:type-check: \n@conscious-bot/cognition:type-check: \n@conscious-bot/cognition:type-check: > @conscious-bot/cognition@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n@conscious-bot/cognition:type-check: > tsc --noEmit\n@conscious-bot/cognition:type-check: \n@conscious-bot/dashboard:type-check: \n@conscious-bot/dashboard:type-check: > @conscious-bot/dashboard@0.1.0 type-check /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/dashboard\n@conscious-bot/dashboard:type-check: > tsc --noEmit\n@conscious-bot/dashboard:type-check: \n\n Tasks:    14 successful, 14 total\nCached:    11 cached, 14 total\n  Time:    2.568s \n\n"
        }
      ],
      "duration": 3585,
      "timestamp": "2025-09-22T01:01:21.772Z"
    },
    {
      "gateId": "linting",
      "success": false,
      "score": 0,
      "results": [
        {
          "checkId": "root-lint",
          "success": false,
          "duration": 8101,
          "output": "\n> conscious-bot@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot\n> turbo lint\n\n• Packages in scope: @conscious-bot/cognition, @conscious-bot/core, @conscious-bot/dashboard, @conscious-bot/evaluation, @conscious-bot/mcp-server, @conscious-bot/memory, @conscious-bot/minecraft-interface, @conscious-bot/planning, @conscious-bot/safety, @conscious-bot/world\n• Running lint in 10 packages\n• Remote caching disabled\n@conscious-bot/world:build: cache hit, replaying logs c7c266c3da530a98\n@conscious-bot/world:build: \r\n@conscious-bot/world:build: \u0004\r\n@conscious-bot/world:build: > @conscious-bot/world@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\r\n@conscious-bot/world:build: > tsc\r\n@conscious-bot/world:build: \r\n@conscious-bot/safety:lint: cache miss, executing bc5db5a381b3e241\n@conscious-bot/world:lint: cache miss, executing 311e2d06704cd75c\n@conscious-bot/memory:lint: cache miss, executing dde5c5365df7ecad\n@conscious-bot/mcp-server:build: cache hit, replaying logs 06ac302d661d0851\n@conscious-bot/mcp-server:build: \n@conscious-bot/mcp-server:build: > @conscious-bot/mcp-server@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/mcp-server\n@conscious-bot/mcp-server:build: > tsc\n@conscious-bot/mcp-server:build: \n@conscious-bot/memory:build: cache hit, replaying logs 67dff8f1a90614dc\n@conscious-bot/memory:build: \r\n@conscious-bot/memory:build: \u0004\r\n@conscious-bot/memory:build: > @conscious-bot/memory@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\r\n@conscious-bot/memory:build: > tsc\r\n@conscious-bot/memory:build: \r\n@conscious-bot/planning:lint: cache miss, executing e1057e3bc1764d42\n@conscious-bot/safety:build: cache hit, replaying logs 7612b98310d6f44f\n@conscious-bot/safety:build: \r\n@conscious-bot/safety:build: \u0004\r\n@conscious-bot/safety:build: > @conscious-bot/safety@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety\r\n@conscious-bot/safety:build: > tsc\r\n@conscious-bot/safety:build: \r\n@conscious-bot/planning:build: cache hit, replaying logs 98f51e4fbd1ed0b0\n@conscious-bot/planning:build: \r\n@conscious-bot/planning:build: \u0004\r\n@conscious-bot/planning:build: > @conscious-bot/planning@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\r\n@conscious-bot/planning:build: > tsc -p tsconfig.build.json\r\n@conscious-bot/planning:build: \r\n@conscious-bot/core:lint: cache miss, executing 6d87e45953a0041b\n@conscious-bot/core:build: cache hit, replaying logs 69362d2600e1d4e9\n@conscious-bot/core:build: \n@conscious-bot/core:build: > @conscious-bot/core@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n@conscious-bot/core:build: > tsc\n@conscious-bot/core:build: \n@conscious-bot/cognition:lint: cache miss, executing 0c314e5bdc3bb774\n@conscious-bot/cognition:build: cache hit, replaying logs 293c5790d991b78b\n@conscious-bot/cognition:build: \n@conscious-bot/cognition:build: > @conscious-bot/cognition@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n@conscious-bot/cognition:build: > tsc\n@conscious-bot/cognition:build: \n@conscious-bot/evaluation:lint: cache miss, executing 3ed90fe9dc6d56a2\n@conscious-bot/evaluation:build: cache hit, replaying logs 93ee13fc8bc5a451\n@conscious-bot/evaluation:build: \n@conscious-bot/evaluation:build: > @conscious-bot/evaluation@0.1.0 build /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation\n@conscious-bot/evaluation:build: > tsc\n@conscious-bot/evaluation:build: \n@conscious-bot/dashboard:lint: cache miss, executing a87f06d9764ea584\n@conscious-bot/world:lint: \n@conscious-bot/world:lint: > @conscious-bot/world@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\n@conscious-bot/world:lint: > eslint src/**/*.ts\n@conscious-bot/world:lint: \n@conscious-bot/planning:lint: \n@conscious-bot/planning:lint: > @conscious-bot/planning@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n@conscious-bot/planning:lint: > eslint src/**/*.ts\n@conscious-bot/planning:lint: \n@conscious-bot/memory:lint: \n@conscious-bot/memory:lint: > @conscious-bot/memory@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\n@conscious-bot/memory:lint: > eslint src/**/*.ts\n@conscious-bot/memory:lint: \n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: > @conscious-bot/safety@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety\n@conscious-bot/safety:lint: > eslint src --ext .ts,.tsx\n@conscious-bot/safety:lint: \n@conscious-bot/core:lint: \n@conscious-bot/core:lint: > @conscious-bot/core@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n@conscious-bot/core:lint: > eslint src/**/*.ts\n@conscious-bot/core:lint: \n@conscious-bot/cognition:lint: \n@conscious-bot/cognition:lint: > @conscious-bot/cognition@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n@conscious-bot/cognition:lint: > eslint src/**/*.ts\n@conscious-bot/cognition:lint: \n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: > @conscious-bot/evaluation@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation\n@conscious-bot/evaluation:lint: > eslint src/**/*.ts\n@conscious-bot/evaluation:lint: \n@conscious-bot/dashboard:lint: \n@conscious-bot/dashboard:lint: > @conscious-bot/dashboard@0.1.0 lint /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/dashboard\n@conscious-bot/dashboard:lint: > next lint\n@conscious-bot/dashboard:lint: \n@conscious-bot/dashboard:lint: `next lint` is deprecated and will be removed in Next.js 16.\n@conscious-bot/dashboard:lint: For new projects, use create-next-app to choose your preferred linter.\n@conscious-bot/dashboard:lint: For existing projects, migrate to the ESLint CLI:\n@conscious-bot/dashboard:lint: npx @next/codemod@canary next-lint-to-eslint-cli .\n@conscious-bot/dashboard:lint: \n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/fail-safes/__tests__/fail-safes-integration.test.ts\n@conscious-bot/safety:lint:   13:3  warning  'FailureType' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/fail-safes/fail-safes-system.ts\n@conscious-bot/safety:lint:   202:5  warning  '_context' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/fail-safes/types.ts\n@conscious-bot/safety:lint:   16:3  warning  'TIMEOUT' is defined but never used                   no-unused-vars\n@conscious-bot/safety:lint:   17:3  warning  'CRASH' is defined but never used                     no-unused-vars\n@conscious-bot/safety:lint:   18:3  warning  'HANG' is defined but never used                      no-unused-vars\n@conscious-bot/safety:lint:   19:3  warning  'RESOURCE_EXHAUSTION' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   20:3  warning  'COMMUNICATION_FAILURE' is defined but never used     no-unused-vars\n@conscious-bot/safety:lint:   21:3  warning  'PERFORMANCE_DEGRADATION' is defined but never used   no-unused-vars\n@conscious-bot/safety:lint:   22:3  warning  'VALIDATION_FAILURE' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   23:3  warning  'EXTERNAL_SERVICE_FAILURE' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   27:3  warning  'HEALTHY' is defined but never used                   no-unused-vars\n@conscious-bot/safety:lint:   28:3  warning  'DEGRADED' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:   29:3  warning  'UNHEALTHY' is defined but never used                 no-unused-vars\n@conscious-bot/safety:lint:   30:3  warning  'CRITICAL' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:   31:3  warning  'UNKNOWN' is defined but never used                   no-unused-vars\n@conscious-bot/safety:lint:   35:3  warning  'SAFETY_REFLEX' is defined but never used             no-unused-vars\n@conscious-bot/safety:lint:   36:3  warning  'EMERGENCY_PROTOCOL' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   37:3  warning  'CONSTITUTIONAL' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   38:3  warning  'CRITICAL_OPERATION' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   39:3  warning  'HIGH_PRIORITY' is defined but never used             no-unused-vars\n@conscious-bot/safety:lint:   40:3  warning  'NORMAL_OPERATION' is defined but never used          no-unused-vars\n@conscious-bot/safety:lint:   41:3  warning  'LOW_PRIORITY' is defined but never used              no-unused-vars\n@conscious-bot/safety:lint:   42:3  warning  'MAINTENANCE' is defined but never used               no-unused-vars\n@conscious-bot/safety:lint:   46:3  warning  'FULL_CAPABILITY' is defined but never used           no-unused-vars\n@conscious-bot/safety:lint:   47:3  warning  'LLM_DEGRADED' is defined but never used              no-unused-vars\n@conscious-bot/safety:lint:   48:3  warning  'PLANNING_DEGRADED' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   49:3  warning  'BASIC_OPERATION' is defined but never used           no-unused-vars\n@conscious-bot/safety:lint:   50:3  warning  'SAFE_MODE' is defined but never used                 no-unused-vars\n@conscious-bot/safety:lint:   51:3  warning  'EMERGENCY_STOP' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   55:3  warning  'SYSTEM_FAILURE' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   56:3  warning  'SAFETY_VIOLATION' is defined but never used          no-unused-vars\n@conscious-bot/safety:lint:   57:3  warning  'ENVIRONMENTAL_THREAT' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   58:3  warning  'PERFORMANCE_FAILURE' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   59:3  warning  'SECURITY_INCIDENT' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   60:3  warning  'RESOURCE_EXHAUSTION' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   64:3  warning  'LOW' is defined but never used                       no-unused-vars\n@conscious-bot/safety:lint:   65:3  warning  'MEDIUM' is defined but never used                    no-unused-vars\n@conscious-bot/safety:lint:   66:3  warning  'HIGH' is defined but never used                      no-unused-vars\n@conscious-bot/safety:lint:   67:3  warning  'CRITICAL' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:   71:3  warning  'RESTART_COMPONENT' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   72:3  warning  'RESTORE_FROM_CHECKPOINT' is defined but never used   no-unused-vars\n@conscious-bot/safety:lint:   73:3  warning  'FALLBACK_TO_BACKUP' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   74:3  warning  'CLEAR_AND_REINITIALIZE' is defined but never used    no-unused-vars\n@conscious-bot/safety:lint:   75:3  warning  'ROLLBACK_CONFIGURATION' is defined but never used    no-unused-vars\n@conscious-bot/safety:lint:   76:3  warning  'HUMAN_INTERVENTION' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   80:3  warning  'MINIMAL' is defined but never used                   no-unused-vars\n@conscious-bot/safety:lint:   81:3  warning  'MODERATE' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:   82:3  warning  'STRICT' is defined but never used                    no-unused-vars\n@conscious-bot/safety:lint:   83:3  warning  'LOCKDOWN' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/fail-safes/watchdog-manager.ts\n@conscious-bot/safety:lint:    17:3   warning  'RecoveryStrategy' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   493:21  warning  Forbidden non-null assertion                  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/monitoring/__tests__/safety-monitoring-integration.test.ts\n@conscious-bot/safety:lint:   15:3  warning  'TelemetryData' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/monitoring/health-monitor.ts\n@conscious-bot/safety:lint:   457:16  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   619:21  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   620:33  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/monitoring/safety-monitoring-system.ts\n@conscious-bot/safety:lint:   348:11  warning  'telemetryStats' is assigned a value but never used  no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/monitoring/telemetry-collector.ts\n@conscious-bot/safety:lint:   100:20  warning  Forbidden non-null assertion                     @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   106:11  warning  'cutoffTime' is assigned a value but never used  no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/monitoring/types.ts\n@conscious-bot/safety:lint:   449:11  warning  'data' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   450:16  warning  'data' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   452:5   warning  'metricName' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   453:5   warning  'startTime' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   454:5   warning  'endTime' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   457:5   warning  'metricName' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   458:5   warning  'period' is defined but never used          no-unused-vars\n@conscious-bot/safety:lint:   459:5   warning  'startTime' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   460:5   warning  'endTime' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   475:17  warning  'check' is defined but never used           no-unused-vars\n@conscious-bot/safety:lint:   476:19  warning  'checkId' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   477:16  warning  'checkId' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   479:22  warning  'componentId' is defined but never used     no-unused-vars\n@conscious-bot/safety:lint:   497:20  warning  'config' is defined but never used          no-unused-vars\n@conscious-bot/safety:lint:   498:23  warning  'configId' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   499:19  warning  'metricName' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   499:39  warning  'data' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   500:14  warning  'metricName' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   500:34  warning  'historicalData' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   513:11  warning  'rule' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   514:14  warning  'ruleId' is defined but never used          no-unused-vars\n@conscious-bot/safety:lint:   517:5   warning  'ruleId' is defined but never used          no-unused-vars\n@conscious-bot/safety:lint:   518:5   warning  'context' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   520:16  warning  'alertId' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   520:33  warning  'resolvedBy' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   521:20  warning  'alertId' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   521:37  warning  'acknowledgedBy' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   523:19  warning  'startTime' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   523:38  warning  'endTime' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/privacy/__tests__/privacy-integration.test.ts\n@conscious-bot/safety:lint:   15:3  warning  'DataSensitivityLevel' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   16:3  warning  'ActionType' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:   17:3  warning  'IncidentSeverity' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/privacy/consent-manager.ts\n@conscious-bot/safety:lint:    44:5  warning  Forbidden non-null assertion                        @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:    49:5  warning  Forbidden non-null assertion                        @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   600:9  warning  'renewed' is never reassigned. Use 'const' instead  prefer-const\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/privacy/data-anonymizer.ts\n@conscious-bot/safety:lint:   212:12  warning  Forbidden non-null assertion                  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   256:9   warning  Unexpected lexical declaration in case block  no-case-declarations\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/privacy/geofence-manager.ts\n@conscious-bot/safety:lint:   119:7   warning  Forbidden non-null assertion          @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   233:5   warning  'location' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   308:54  warning  'action' is defined but never used    no-unused-vars\n@conscious-bot/safety:lint:   376:24  warning  Forbidden non-null assertion          @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   386:30  warning  Forbidden non-null assertion          @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   637:24  warning  Forbidden non-null assertion          @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/privacy/rate-limiter.ts\n@conscious-bot/safety:lint:   624:27  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint:   631:12  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety/src/privacy/types.ts\n@conscious-bot/safety:lint:    71:3  warning  'PUBLIC' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:    72:3  warning  'INTERNAL' is defined but never used                no-unused-vars\n@conscious-bot/safety:lint:    73:3  warning  'CONFIDENTIAL' is defined but never used            no-unused-vars\n@conscious-bot/safety:lint:    74:3  warning  'RESTRICTED' is defined but never used              no-unused-vars\n@conscious-bot/safety:lint:    75:3  warning  'SECRET' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:   100:3  warning  'BASIC_INTERACTION' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   101:3  warning  'BEHAVIOR_ANALYSIS' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   102:3  warning  'COMMUNICATION_LOG' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   103:3  warning  'LOCATION_TRACKING' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   104:3  warning  'SOCIAL_MODELING' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   105:3  warning  'PERFORMANCE_ANALYTICS' is defined but never used   no-unused-vars\n@conscious-bot/safety:lint:   233:3  warning  'BLOCK_PLACEMENT' is defined but never used         no-unused-vars\n@conscious-bot/safety:lint:   234:3  warning  'BLOCK_DESTRUCTION' is defined but never used       no-unused-vars\n@conscious-bot/safety:lint:   235:3  warning  'ITEM_TRANSFER' is defined but never used           no-unused-vars\n@conscious-bot/safety:lint:   236:3  warning  'INFORMATION_DISCLOSURE' is defined but never used  no-unused-vars\n@conscious-bot/safety:lint:   237:3  warning  'SOCIAL_INTERACTION' is defined but never used      no-unused-vars\n@conscious-bot/safety:lint:   238:3  warning  'KNOWLEDGE_UPDATE' is defined but never used        no-unused-vars\n@conscious-bot/safety:lint:   275:3  warning  'LOW' is defined but never used                     no-unused-vars\n@conscious-bot/safety:lint:   276:3  warning  'MEDIUM' is defined but never used                  no-unused-vars\n@conscious-bot/safety:lint:   277:3  warning  'HIGH' is defined but never used                    no-unused-vars\n@conscious-bot/safety:lint:   278:3  warning  'CRITICAL' is defined but never used                no-unused-vars\n@conscious-bot/safety:lint: \n@conscious-bot/safety:lint: ✖ 124 problems (0 errors, 124 warnings)\n@conscious-bot/safety:lint:   0 errors and 1 warning potentially fixable with the `--fix` option.\n@conscious-bot/safety:lint: \n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/__tests__/complex-reasoning-evaluation.test.ts\n@conscious-bot/evaluation:lint:   0:0  warning  File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/__tests__/hrm-memory-integration.test.ts\n@conscious-bot/evaluation:lint:   0:0  error  Parsing error: ESLint was configured to run on `<tsconfigRootDir>/src/__tests__/hrm-memory-integration.test.ts` using `parserOptions.project`: /users/darianrosebrook/desktop/projects/conscious-bot/packages/evaluation/tsconfig.json\n@conscious-bot/evaluation:lint: However, that TSConfig does not include this file. Either:\n@conscious-bot/evaluation:lint: - Change ESLint's list of included files to not include this file\n@conscious-bot/evaluation:lint: - Change that TSConfig to include this file\n@conscious-bot/evaluation:lint: - Create a new TSConfig that includes this file and include it in your parserOptions.project\n@conscious-bot/evaluation:lint: See the typescript-eslint docs for more info: https://typescript-eslint.io/linting/troubleshooting#i-get-errors-telling-me-eslint-was-configured-to-run--however-that-tsconfig-does-not--none-of-those-tsconfigs-include-this-file\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/__tests__/phase5-integration.test.ts\n@conscious-bot/evaluation:lint:   0:0  warning  File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/benchmarking/performance-benchmarker.ts\n@conscious-bot/evaluation:lint:    13:3   warning  'Scenario' is defined but never used           no-unused-vars\n@conscious-bot/evaluation:lint:    14:3   warning  'EvaluationSession' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:    16:3   warning  'AgentConfig' is defined but never used        no-unused-vars\n@conscious-bot/evaluation:lint:    17:3   warning  'MetricType' is defined but never used         no-unused-vars\n@conscious-bot/evaluation:lint:    18:3   warning  'StressTestConfig' is defined but never used   no-unused-vars\n@conscious-bot/evaluation:lint:   440:11  warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   556:9   warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   559:9   warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   567:29  warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   593:7   warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   766:5   warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   802:12  warning  Unnecessary 'else' after 'return'              no-else-return\n@conscious-bot/evaluation:lint:   836:23  warning  'results' is defined but never used            no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/curriculum/curriculum-builder.ts\n@conscious-bot/evaluation:lint:    22:3   warning  'AdaptiveCondition' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:    23:3   warning  'AdaptiveAction' is defined but never used     no-unused-vars\n@conscious-bot/evaluation:lint:   236:5   warning  'targetDifficulty' is defined but never used   no-unused-vars\n@conscious-bot/evaluation:lint:   289:5   warning  'objectives' is defined but never used         no-unused-vars\n@conscious-bot/evaluation:lint:   538:20  warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   543:33  warning  Forbidden non-null assertion                   @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   782:5   warning  'graph' is defined but never used              no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/curriculum/curriculum-manager.ts\n@conscious-bot/evaluation:lint:    13:3   warning  'CurriculumDesignResult' is defined but never used      no-unused-vars\n@conscious-bot/evaluation:lint:    17:3   warning  'RegressionTestResult' is defined but never used        no-unused-vars\n@conscious-bot/evaluation:lint:    28:3   warning  'SkillCategory' is defined but never used               no-unused-vars\n@conscious-bot/evaluation:lint:   121:13  warning  'regressionSuiteId' is assigned a value but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   266:11  warning  Forbidden non-null assertion                            @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   588:22  warning  Forbidden non-null assertion                            @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   589:22  warning  Forbidden non-null assertion                            @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/curriculum/regression-suite.ts\n@conscious-bot/evaluation:lint:   269:40  warning  'test' is defined but never used   no-unused-vars\n@conscious-bot/evaluation:lint:   596:52  warning  'c' is defined but never used      no-unused-vars\n@conscious-bot/evaluation:lint:   608:12  warning  Unnecessary 'else' after 'return'  no-else-return\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/curriculum/types.ts\n@conscious-bot/evaluation:lint:   57:3  warning  'PERCEPTION' is defined but never used   no-unused-vars\n@conscious-bot/evaluation:lint:   58:3  warning  'COGNITION' is defined but never used    no-unused-vars\n@conscious-bot/evaluation:lint:   59:3  warning  'PLANNING' is defined but never used     no-unused-vars\n@conscious-bot/evaluation:lint:   60:3  warning  'EXECUTION' is defined but never used    no-unused-vars\n@conscious-bot/evaluation:lint:   61:3  warning  'SOCIAL' is defined but never used       no-unused-vars\n@conscious-bot/evaluation:lint:   62:3  warning  'SAFETY' is defined but never used       no-unused-vars\n@conscious-bot/evaluation:lint:   63:3  warning  'MEMORY' is defined but never used       no-unused-vars\n@conscious-bot/evaluation:lint:   64:3  warning  'INTEGRATION' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   86:3  warning  'FUNCTIONAL' is defined but never used   no-unused-vars\n@conscious-bot/evaluation:lint:   87:3  warning  'PERFORMANCE' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   88:3  warning  'STRESS' is defined but never used       no-unused-vars\n@conscious-bot/evaluation:lint:   89:3  warning  'INTEGRATION' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   90:3  warning  'REGRESSION' is defined but never used   no-unused-vars\n@conscious-bot/evaluation:lint:   91:3  warning  'ABLATION' is defined but never used     no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/dashboard/evaluation-dashboard.ts\n@conscious-bot/evaluation:lint:    14:3   warning  'EvaluationSession' is defined but never used                                               no-unused-vars\n@conscious-bot/evaluation:lint:    15:3   warning  'Scenario' is defined but never used                                                        no-unused-vars\n@conscious-bot/evaluation:lint:    16:3   warning  'AgentConfig' is defined but never used                                                     no-unused-vars\n@conscious-bot/evaluation:lint:   183:9   warning  Prefer using an optional chain expression instead, as it's more concise and easier to read  @typescript-eslint/prefer-optional-chain\n@conscious-bot/evaluation:lint:   439:9   warning  Prefer using an optional chain expression instead, as it's more concise and easier to read  @typescript-eslint/prefer-optional-chain\n@conscious-bot/evaluation:lint:   442:9   warning  Prefer using an optional chain expression instead, as it's more concise and easier to read  @typescript-eslint/prefer-optional-chain\n@conscious-bot/evaluation:lint:   444:9   warning  Prefer using an optional chain expression instead, as it's more concise and easier to read  @typescript-eslint/prefer-optional-chain\n@conscious-bot/evaluation:lint:   623:21  warning  Forbidden non-null assertion                                                                @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   679:21  warning  Forbidden non-null assertion                                                                @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   769:21  warning  Forbidden non-null assertion                                                                @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   797:12  warning  Unnecessary 'else' after 'return'                                                           no-else-return\n@conscious-bot/evaluation:lint:   806:24  warning  'data' is defined but never used                                                            no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/metrics/performance-analyzer.ts\n@conscious-bot/evaluation:lint:   244:5   warning  'scenario' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   407:5   warning  'scenario' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   465:34  warning  Forbidden non-null assertion          @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/regression/regression-monitor.ts\n@conscious-bot/evaluation:lint:    14:3   warning  'EvaluationSession' is defined but never used       no-unused-vars\n@conscious-bot/evaluation:lint:    15:3   warning  'AgentConfig' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint:    16:3   warning  'Scenario' is defined but never used                no-unused-vars\n@conscious-bot/evaluation:lint:    17:3   warning  'MetricType' is defined but never used              no-unused-vars\n@conscious-bot/evaluation:lint:    24:3   warning  'INFO' is defined but never used                    no-unused-vars\n@conscious-bot/evaluation:lint:    25:3   warning  'WARNING' is defined but never used                 no-unused-vars\n@conscious-bot/evaluation:lint:    26:3   warning  'CRITICAL' is defined but never used                no-unused-vars\n@conscious-bot/evaluation:lint:    27:3   warning  'EMERGENCY' is defined but never used               no-unused-vars\n@conscious-bot/evaluation:lint:   259:21  warning  Forbidden non-null assertion                        @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   355:11  warning  'currentStdDev' is assigned a value but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   685:5   warning  'degradation' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/scenarios/complex-reasoning-scenarios.ts\n@conscious-bot/evaluation:lint:   10:20  warning  'ComplexityLevel' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint:   10:37  warning  'ReasoningDomain' is defined but never used  no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/scenarios/minedojo-scenarios.ts\n@conscious-bot/evaluation:lint:   836:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   837:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   838:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   841:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   842:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   845:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   848:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   851:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   852:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   855:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   856:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint:   857:3  warning  Forbidden non-null assertion  @typescript-eslint/no-non-null-assertion\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation/src/scenarios/scenario-manager.ts\n@conscious-bot/evaluation:lint:   548:5  warning  'scenario' is defined but never used          no-unused-vars\n@conscious-bot/evaluation:lint:   584:5  warning  'scenario' is defined but never used          no-unused-vars\n@conscious-bot/evaluation:lint:   605:5  warning  'scenario' is defined but never used          no-unused-vars\n@conscious-bot/evaluation:lint:   624:5  warning  'currentState' is defined but never used      no-unused-vars\n@conscious-bot/evaluation:lint:   625:5  warning  'scenario' is defined but never used          no-unused-vars\n@conscious-bot/evaluation:lint:   664:9  warning  Unexpected lexical declaration in case block  no-case-declarations\n@conscious-bot/evaluation:lint:   721:5  warning  'scenario' is defined but never used          no-unused-vars\n@conscious-bot/evaluation:lint:   794:5  warning  'state' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint:   819:5  warning  'plan' is defined but never used              no-unused-vars\n@conscious-bot/evaluation:lint:   820:5  warning  'state' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint:   830:5  warning  'plan' is defined but never used              no-unused-vars\n@conscious-bot/evaluation:lint:   831:5  warning  'state' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint:   841:5  warning  'action' is defined but never used            no-unused-vars\n@conscious-bot/evaluation:lint:   842:5  warning  'state' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint:   865:5  warning  'action' is defined but never used            no-unused-vars\n@conscious-bot/evaluation:lint:   866:5  warning  'state' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint:   872:5  warning  'action' is defined but never used            no-unused-vars\n@conscious-bot/evaluation:lint:   873:5  warning  'state' is defined but never used             no-unused-vars\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint: ✖ 105 problems (1 error, 104 warnings)\n@conscious-bot/evaluation:lint:   0 errors and 7 warnings potentially fixable with the `--fix` option.\n@conscious-bot/evaluation:lint: \n@conscious-bot/evaluation:lint:  ELIFECYCLE  Command failed with exit code 1.\n\n Tasks:    9 successful, 16 total\nCached:    8 cached, 16 total\n  Time:    6.775s \nFailed:    @conscious-bot/evaluation#lint\n\n ELIFECYCLE  Command failed with exit code 1.\n\nturbo 2.5.6\n\n@conscious-bot/evaluation:lint: ERROR: command finished with error: command (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation) /Users/darianrosebrook/Library/pnpm/.tools/pnpm/10.15.0/bin/pnpm run lint exited (1)\n@conscious-bot/evaluation#lint: command (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation) /Users/darianrosebrook/Library/pnpm/.tools/pnpm/10.15.0/bin/pnpm run lint exited (1)\n ERROR  run failed: command  exited (1)\n",
          "error": "turbo 2.5.6\n\n@conscious-bot/evaluation:lint: ERROR: command finished with error: command (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation) /Users/darianrosebrook/Library/pnpm/.tools/pnpm/10.15.0/bin/pnpm run lint exited (1)\n@conscious-bot/evaluation#lint: command (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/evaluation) /Users/darianrosebrook/Library/pnpm/.tools/pnpm/10.15.0/bin/pnpm run lint exited (1)\n ERROR  run failed: command  exited (1)\n"
        }
      ],
      "duration": 8101,
      "timestamp": "2025-09-22T01:01:29.873Z"
    },
    {
      "gateId": "unit-tests",
      "success": false,
      "score": 16.666666666666664,
      "results": [
        {
          "checkId": "core-unit-tests",
          "success": false,
          "duration": 34745,
          "output": "\n> @conscious-bot/core@0.1.0 test /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n> vitest run\n\n\n RUN  v3.2.4 /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core\n\nstdout | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should process signals without errors\nTODO: IMPLEMENT... enhancedNeeds [\n  {\n    id: '3c0c6493-62e5-4ffb-b92f-08ec62b3ace1',\n    type: 'nutrition',\n    intensity: 0.33749999999999997,\n    urgency: 0.33749999999999997,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891303,\n    history: [],\n    priorityScore: 0.4375,\n    opportunityCost: 0.13499999999999998,\n    feasibilityScore: 0.7,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '5cdf02d8-08ca-49b7-a659-7f20d13287f1',\n    type: 'safety',\n    intensity: 0.30000000000000004,\n    urgency: 0.30000000000000004,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891303,\n    history: [],\n    priorityScore: 0.4,\n    opportunityCost: 0.12000000000000002,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '100f8b1e-7a67-4559-a3f8-3343a4bcc692',\n    type: 'social',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891303,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.52,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '2f968e6d-192a-4b9d-827c-6dbf3aa7e3e6',\n    type: 'curiosity',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891303,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0.3\n  }\n]\n\nstdout | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should start and stop cleanly\nArbiter started with advanced components\nArbiter stopped\n\nstdout | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > integrates enhanced needs into decision routing\nTODO: IMPLEMENT... enhancedNeeds [\n  {\n    id: 'need-1',\n    type: 'social',\n    intensity: 0.8,\n    urgency: 0.9,\n    trend: 'increasing',\n    trendStrength: 0.6,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'with_players',\n      environmentalFactors: [],\n      recentEvents: [],\n      currentGoals: [],\n      availableResources: []\n    },\n    memoryInfluence: 0.5,\n    noveltyScore: 0.4,\n    commitmentBoost: 0.3,\n    timestamp: 1758502891344,\n    history: [],\n    priorityScore: 0.82,\n    opportunityCost: 0.2,\n    feasibilityScore: 0.7,\n    socialImpact: 0.6,\n    learningValue: 0.3\n  }\n]\n\nstdout | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > ignores low-priority enhanced needs\nTODO: IMPLEMENT... enhancedNeeds [\n  {\n    id: 'need-low',\n    type: 'autonomy',\n    intensity: 0.2,\n    urgency: 0.2,\n    trend: 'stable',\n    trendStrength: 0.2,\n    context: {\n      timeOfDay: 'night',\n      location: 'unknown',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [],\n      currentGoals: [],\n      availableResources: []\n    },\n    memoryInfluence: 0.1,\n    noveltyScore: 0.1,\n    commitmentBoost: 0.1,\n    timestamp: 1758502891347,\n    history: [],\n    priorityScore: 0.2,\n    opportunityCost: 0.1,\n    feasibilityScore: 0.2,\n    socialImpact: 0.1,\n    learningValue: 0.1\n  }\n]\n\nstdout | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should handle multiple concurrent signals\nTODO: IMPLEMENT... enhancedNeeds [\n  {\n    id: 'a98163db-8a03-412d-b5e0-ef0e5dbfb64b',\n    type: 'nutrition',\n    intensity: 0.33749999999999997,\n    urgency: 0.33749999999999997,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.4375,\n    opportunityCost: 0.13499999999999998,\n    feasibilityScore: 0.7,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '48bceeba-a5d6-4e6d-b24b-cb769c68ef5c',\n    type: 'safety',\n    intensity: 0.30000000000000004,\n    urgency: 0.30000000000000004,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.4,\n    opportunityCost: 0.12000000000000002,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '39693815-a475-4f49-8413-92cec3324d8d',\n    type: 'social',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.52,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '5284568d-d8da-4929-9a3e-d956d47acde6',\n    type: 'curiosity',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0.3\n  }\n]\nTODO: IMPLEMENT... enhancedNeeds [\n  {\n    id: '76d1ad36-cadb-42cb-baeb-28d176492f6d',\n    type: 'nutrition',\n    intensity: 0.33749999999999997,\n    urgency: 0.33749999999999997,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.4375,\n    opportunityCost: 0.13499999999999998,\n    feasibilityScore: 0.7,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '314d80b3-d2e6-4fb5-beed-bf0563f3502c',\n    type: 'safety',\n    intensity: 0.30000000000000004,\n    urgency: 0.30000000000000004,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.4,\n    opportunityCost: 0.12000000000000002,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: 'fb21f52e-dbbc-405c-a4ff-69e90c45fb78',\n    type: 'social',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.52,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '2ec4ba55-8ab9-47b7-b6bc-93bce99df019',\n    type: 'curiosity',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0.3\n  }\n]\n\nstdout | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should handle multiple concurrent signals\nTODO: IMPLEMENT... enhancedNeeds [\n  {\n    id: 'aa3e95a6-ff3e-4107-8a16-17ecea763780',\n    type: 'nutrition',\n    intensity: 0.33749999999999997,\n    urgency: 0.33749999999999997,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.4375,\n    opportunityCost: 0.13499999999999998,\n    feasibilityScore: 0.7,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '717ea444-4450-46ab-954e-bb3fb314a618',\n    type: 'safety',\n    intensity: 0.30000000000000004,\n    urgency: 0.30000000000000004,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.4,\n    opportunityCost: 0.12000000000000002,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '2ccb4f29-2f12-4077-a701-5ee5a2003dc0',\n    type: 'social',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.52,\n    socialImpact: 0,\n    learningValue: 0\n  },\n  {\n    id: '75d43747-b5f4-46d7-a911-6484099b1d0a',\n    type: 'curiosity',\n    intensity: 0.09,\n    urgency: 0.09,\n    trend: 'unknown',\n    trendStrength: 0,\n    context: {\n      timeOfDay: 'morning',\n      location: 'village',\n      socialContext: 'alone',\n      environmentalFactors: [],\n      recentEvents: [Array],\n      currentGoals: [],\n      availableResources: [Array],\n      environment: 'village',\n      constraints: [],\n      opportunities: [],\n      energyLevel: 0.8,\n      stressLevel: 0.2\n    },\n    memoryInfluence: 0,\n    noveltyScore: 1,\n    commitmentBoost: 0,\n    timestamp: 1758502891350,\n    history: [],\n    priorityScore: 0.19,\n    opportunityCost: 0.036,\n    feasibilityScore: 0.6,\n    socialImpact: 0,\n    learningValue: 0.3\n  }\n]\n\n ❯ src/__tests__/arbiter.test.ts (9 tests | 2 failed) 56ms\n   ✓ Arbiter Integration Tests > should initialize with default configuration 6ms\n   ✓ Arbiter Integration Tests > should process signals without errors 4ms\n   ✓ Arbiter Integration Tests > should start and stop cleanly 1ms\n   ✓ Arbiter Integration Tests > should process cognitive tasks 16ms\n   ✓ Arbiter Integration Tests > should emit events for signal processing 8ms\n   ✓ Arbiter Integration Tests > should track performance metrics 14ms\n   × Arbiter Integration Tests > integrates enhanced needs into decision routing 4ms\n     → expected \"processCognitiveTask\" to be called with arguments: [ ObjectContaining{…} ]\n\nNumber of calls: 0\n\n   × Arbiter Integration Tests > ignores low-priority enhanced needs 2ms\n     → expected undefined to be +0 // Object.is equality\n   ✓ Arbiter Integration Tests > should handle multiple concurrent signals 2ms\n ✓ src/__tests__/simple-server.test.ts (3 tests) 46ms\nstdout | src/__tests__/torch-corridor-e2e.test.ts > Torch Corridor End-to-End > should handle capability retirement for poor performance\nOption opt.failing_capability@1.0.0 retired: auto_retirement\n\n ✓ src/__tests__/server.test.ts (16 tests) 209ms\nstdout | src/__tests__/simple-connection.test.ts > Simple Connection > should handle connection events\nError: getaddrinfo ENOTFOUND test-host\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26) {\n  errno: -3008,\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'test-host'\n}\n\n ❯ src/__tests__/torch-corridor-e2e.test.ts (7 tests | 2 failed) 445ms\n   × Torch Corridor End-to-End > should register and execute torch corridor capability 66ms\n     → expected 'failure' to be 'success' // Object.is equality\n   ✓ Torch Corridor End-to-End > should detect impasse and propose new capability 81ms\n   ✓ Torch Corridor End-to-End > should register proposed capability and make it available 49ms\n   × Torch Corridor End-to-End > should promote capability after successful shadow runs 78ms\n     → expected 'failure' to be 'success' // Object.is equality\n   ✓ Torch Corridor End-to-End > should handle capability retirement for poor performance 49ms\n   ✓ Torch Corridor End-to-End > should integrate with planning system 102ms\n   ✓ Torch Corridor End-to-End > should execute simple BT-DSL sequence 19ms\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should initialize with real Mineflayer bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should initialize with real Mineflayer bot\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register real leaf implementations\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register real leaf implementations\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\n ❯ src/__tests__/real-capability-execution.test.ts (9 tests | 1 failed) 320ms\n   ✓ Real Capability Execution > should create bot and cognitive integration 129ms\n   ✓ Real Capability Execution > should handle bot spawn events 147ms\n   ✓ Real Capability Execution > should execute movement capabilities 6ms\n   ✓ Real Capability Execution > should execute sensing capabilities 7ms\n   ✓ Real Capability Execution > should track bot state changes during execution 0ms\n   × Real Capability Execution > should handle cognitive stream events 22ms\n     → expected 0 to be greater than 0\n   ✓ Real Capability Execution > should validate capability execution pipeline 0ms\n   ✓ Real Capability Execution > should handle multiple capability types 1ms\n   ✓ Real Capability Execution > should validate real execution detection 0ms\n ❯ src/__tests__/simple-movement.test.ts (8 tests | 2 failed) 455ms\n   ✓ Simple Movement > should create bot with pathfinder plugin 192ms\n   ✓ Simple Movement > should handle spawn events 201ms\n   × Simple Movement > should handle movement controls 24ms\n     → bot.setControlState is not a function\n   ✓ Simple Movement > should handle pathfinder movement 5ms\n   ✓ Simple Movement > should handle coordinate movement 1ms\n   × Simple Movement > should read world blocks 1ms\n     → bot.blockAt is not a function\n   ✓ Simple Movement > should handle world data access 1ms\n   ✓ Simple Movement > should handle bot positioning 1ms\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle connection errors\nError: This server is version 1.20.1, you are using version 1.20.4, please specify the correct version in the options.\n    at Client.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/minecraft-protocol@1.61.0/node_modules/minecraft-protocol/src/client/versionChecking.js:27:26)\n    at Client.emit (node:events:531:35)\n    at emitPacket (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/minecraft-protocol@1.61.0/node_modules/minecraft-protocol/src/client.js:85:12)\n    at FullPacketParser.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/minecraft-protocol@1.61.0/node_modules/minecraft-protocol/src/client.js:114:9)\n    at FullPacketParser.emit (node:events:519:28)\n    at addChunk (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/readable-stream@4.7.0/node_modules/readable-stream/lib/internal/streams/readable.js:323:12)\n    at readableAddChunk (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/readable-stream@4.7.0/node_modules/readable-stream/lib/internal/streams/readable.js:300:9)\n    at FullPacketParser.Readable.push (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/readable-stream@4.7.0/node_modules/readable-stream/lib/internal/streams/readable.js:246:10)\n    at FullPacketParser._transform (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/protodef@1.19.0/node_modules/protodef/src/serializer.js:89:10)\n    at FullPacketParser.Transform._write (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/readable-stream@4.7.0/node_modules/readable-stream/lib/internal/streams/transform.js:153:8)\n\nstdout | src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle connection errors\nError: read ECONNRESET\n    at TCP.onStreamRead (node:internal/stream_base_commons:216:20) {\n  errno: -54,\n  code: 'ECONNRESET',\n  syscall: 'read'\n}\n\nstdout | src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle connection errors\nError: Connection failed\n    at Timeout._onTimeout (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/version-compatibility.test.ts:110:25)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)\n\nstdout | src/__tests__/version-compatibility.test.ts\nError: connect ENOENT invalid-port\n    at PipeConnectWrap.afterConnect [as oncomplete] (node:net:1637:16) {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'connect',\n  address: 'invalid-port'\n}\n\n ❯ src/__tests__/version-compatibility.test.ts (7 tests | 3 failed) 676ms\n   ✓ Version Compatibility > should check Node.js version requirements 1ms\n   ✓ Version Compatibility > should validate Mineflayer version compatibility 0ms\n   × Version Compatibility > should handle different Minecraft versions 243ms\n     → bot.quit is not a function\n   ✓ Version Compatibility > should handle spawn timeout scenarios  324ms\n   ✓ Version Compatibility > should handle connection errors 102ms\n   × Version Compatibility > should validate bot configuration options 3ms\n     → expected 'undefined' to be 'function' // Object.is equality\n   × Version Compatibility > should handle invalid configuration gracefully 2ms\n     → expected [Function] to throw an error\nstdout | EventEmitter.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/loader.js:84:17)\nError: getaddrinfo ENOTFOUND nonexistent-host\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26) {\n  errno: -3008,\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'nonexistent-host'\n}\n\nstdout | src/__tests__/simple-connection.test.ts > Simple Connection > should handle connection errors\nError: getaddrinfo ENOTFOUND nonexistent-host\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26) {\n  errno: -3008,\n  code: 'ENOTFOUND',\n  syscall: 'getaddrinfo',\n  hostname: 'nonexistent-host'\n}\n\n ❯ src/__tests__/simple-connection.test.ts (7 tests | 1 failed) 988ms\n   ✓ Simple Connection > should create bot with default configuration 107ms\n   ✓ Simple Connection > should create bot with environment variables 74ms\n   ✓ Simple Connection > should handle connection events 250ms\n   ✓ Simple Connection > should handle spawn timeout  506ms\n   ✓ Simple Connection > should handle connection errors 44ms\n   × Simple Connection > should validate configuration options 3ms\n     → expected 'undefined' to be 'function' // Object.is equality\n   ✓ Simple Connection > should handle missing environment variables 1ms\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should initialize cognitive stream integration\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should initialize cognitive stream integration\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should initialize cognitive stream integration\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle capability registration\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle capability registration\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle capability registration\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle capability registration\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle capability registration\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should initialize cognitive stream in mock mode\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should initialize cognitive stream in mock mode\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should initialize cognitive stream in mock mode\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should initialize cognitive stream in mock mode\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n\nstdout | src/mcp-capabilities/__tests__/enhanced-registry.test.ts > EnhancedRegistry > Critical Fix #1: Store option definitions > should store option definitions on registration\nBefore option registration:\n- Leaf factory has mock_leaf: true\n- Available leaves: [ 'mock_leaf@1.0.0' ]\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should initialize cognitive stream\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should initialize cognitive stream\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should initialize cognitive stream\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle bot state updates\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle bot state updates\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle bot state updates\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n🎯 Executing planning cycle for goal: torch the mining corridor safely\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n🎯 Planning for goal: torch the mining corridor safely\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n✅ Found 3 applicable capabilities:\n   - step_forward_safely@1.0.0 (active)\n   - place_torch_if_needed@1.0.0 (active)\n   - opt.torch_corridor@1.0.0 (shadow)\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: step_forward_safely\n🔧 Executing capability: step_forward_safely with real bot actions\n🔧 Executing capability: place_torch_if_needed\n🔧 Executing capability: place_torch_if_needed with real bot actions\n🔧 Executing capability: opt.torch_corridor\n🔧 Executing capability: opt.torch_corridor with real bot actions\n✅ Executed 0/3 capabilities successfully\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/mcp-capabilities/__tests__/enhanced-registry.test.ts > EnhancedRegistry > Critical Fix #2: Immutable versioning and status state machine > should enforce legal status transitions\nOption test_option@1.0.0 promoted to active: manual\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle state update events\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle state update events\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle state update events\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n🎯 Executing planning cycle for goal: find food\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n🎯 Planning for goal: find food\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n✅ Found 1 applicable capabilities:\n   - consume_food@1.0.0 (active)\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: consume_food\n🔧 Executing capability: consume_food with real bot actions\n✅ Executed 0/1 capabilities successfully\n\nstdout | src/mcp-capabilities/__tests__/enhanced-registry.test.ts > EnhancedRegistry > Critical Fix #7: Health checks gate promotion > should require passing health check for promotion\nOption test_option@1.0.0 promoted to active: manual\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle planning execution\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle planning execution\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle planning execution\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle planning execution\n🎯 Executing planning cycle for goal: explore area\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle planning execution\n🎯 Planning for goal: explore area\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle planning execution\n⚠️ No MCP capabilities found for goal: \"explore area\"\n   Available capabilities: move_to, step_forward_safely, place_torch_if_needed, retreat_and_block, sense_hostiles, dig_block, place_block, consume_food, get_light_level, craft_recipe, opt.torch_corridor\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle goal identification from state changes\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle goal identification from state changes\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle goal identification from state changes\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle goal identification from state changes\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n🎯 Executing planning cycle for goal: get light level\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n🎯 Planning for goal: get light level\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n✅ Found 1 applicable capabilities:\n   - get_light_level@1.0.0 (active)\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: get_light_level\n🔧 Executing capability: get_light_level with real bot actions\n✅ Executed 0/1 capabilities successfully\n\nstdout | src/mcp-capabilities/__tests__/enhanced-registry.test.ts > EnhancedRegistry > Secondary Improvements > should support revocation with cleanup\nOption test_option@1.0.0 promoted to active: manual\n\nstdout | src/mcp-capabilities/__tests__/enhanced-registry.test.ts > EnhancedRegistry > Secondary Improvements > should support revocation with cleanup\nOption test_option@1.0.0 revoked: security_issue\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should create minecraft integration with real bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\n ✓ src/mcp-capabilities/__tests__/enhanced-registry.test.ts (12 tests) 300ms\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should create minecraft integration with real bot\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should create minecraft integration with real bot\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should track bot state\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should track bot state\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should track bot state\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should create minecraft integration with real bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should create minecraft integration with real bot\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should create minecraft integration with real bot\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should track active goals\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should track active goals\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should track active goals\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle leaf execution with real bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle leaf execution with real bot\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle leaf execution with real bot\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle multiple thought types\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle multiple thought types\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle multiple thought types\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\n ✓ src/__tests__/narrative-thoughts.test.ts (8 tests) 393ms\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n\nstdout | src/real-time/__tests__/real-time-integration.test.ts > Real-Time Performance Monitoring Integration > Alerting System Workflow > should evaluate thresholds and trigger alerts\n[ALERT WARNING] resources.cpuUtilization is 0.85 (threshold: > 0.8)\n[ALERT CRITICAL] quality.errorRate is 0.08 (threshold: > 0.05)\n\nstdout | src/real-time/__tests__/real-time-integration.test.ts > Real-Time Performance Monitoring Integration > Alerting System Workflow > should manage alert lifecycle\n[ALERT CRITICAL] latency.p95 is 400 (threshold: > 300)\n\n ✓ src/__tests__/simple-actions.test.ts (9 tests) 198ms\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should handle mock mode vs real bot mode\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\n ✓ src/__tests__/bot-connection.test.ts (8 tests) 210ms\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n🎯 Executing planning cycle for goal: torch the mining corridor safely\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n🎯 Planning for goal: torch the mining corridor safely\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n✅ Found 3 applicable capabilities:\n   - step_forward_safely@1.0.0 (active)\n   - place_torch_if_needed@1.0.0 (active)\n   - opt.torch_corridor@1.0.0 (shadow)\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: step_forward_safely\n🔧 Executing capability: step_forward_safely with real bot actions\n🔧 Executing capability: place_torch_if_needed\n🔧 Executing capability: place_torch_if_needed with real bot actions\n🔧 Executing capability: opt.torch_corridor\n🔧 Executing capability: opt.torch_corridor with real bot actions\n✅ Executed 0/3 capabilities successfully\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/working-bot.test.ts > Working Bot Functionality > should handle bot errors gracefully\nError: Test error\n    at Timeout._onTimeout (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/working-bot.test.ts:140:25)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)\n\n ✓ src/__tests__/working-bot.test.ts (9 tests) 337ms\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n🎯 Executing planning cycle for goal: torch corridor\n🎯 Executing planning cycle for goal: torch corridor\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🎯 Planning for goal: torch corridor\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n✅ Found 2 applicable capabilities:\n   - place_torch_if_needed@1.0.0 (active)\n   - opt.torch_corridor@1.0.0 (shadow)\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: place_torch_if_needed\n🔧 Executing capability: place_torch_if_needed with real bot actions\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🔧 Capability place_torch_if_needed execution result: success (0ms)\n🔧 Executing capability: opt.torch_corridor\n🔧 Executing capability: opt.torch_corridor with real bot actions\n\nstdout | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n🔧 Capability opt.torch_corridor execution result: failure (0.8125ms)\n✅ Executed 1/2 capabilities successfully\n\n ✓ src/__tests__/real-bot-integration.test.ts (7 tests) 647ms\nstdout | src/real-time/__tests__/real-time-integration.test.ts > Real-Time Performance Monitoring Integration > System Integration > should integrate all components in complete workflow\n[ALERT CRITICAL] quality.timeoutRate is 1 (threshold: > 0.5)\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle event streaming\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle event streaming\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle event streaming\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle event streaming\n⚠️ LLM service not available, using fallback thoughts\n\n ✓ src/real-time/__tests__/real-time-integration.test.ts (11 tests) 1005ms\n   ✓ Real-Time Performance Monitoring Integration > Performance Tracking Workflow > should detect performance anomalies  439ms\n   ✓ Real-Time Performance Monitoring Integration > System Integration > should integrate all components in complete workflow  376ms\nstdout | src/mcp-capabilities/__tests__/simple-debug.test.ts > Simple Debug Test > should work\nRegistering leaf...\nLeaf registration result: { ok: true, id: 'mock_leaf@1.0.0' }\nLeaf factory has mock_leaf: true\nAvailable leaves: [ 'mock_leaf@1.0.0' ]\nRegistering option...\nOption registration result: { ok: true, id: 'test_option@1.0.0' }\n\n ✓ src/mcp-capabilities/__tests__/simple-debug.test.ts (1 test) 123ms\n ✓ src/mcp-capabilities/__tests__/debug-bt-parser.test.ts (1 test) 120ms\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should track MCP integration status\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should track MCP integration status\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should track MCP integration status\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should track MCP integration status\n⚠️ LLM service not available, using fallback thoughts\n\n ✓ src/mcp-capabilities/__tests__/working-leaf-factory.test.ts (2 tests) 116ms\n ✓ src/mcp-capabilities/__tests__/working-leaf-factory-fixes.test.ts (18 tests) 396ms\n ✓ src/__tests__/signal-processing-properties-simple.test.ts (4 tests) 92ms\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle safety features\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle safety features\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle safety features\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle safety features\n⚠️ LLM service not available, using fallback thoughts\n\n ↓ src/__tests__/m2-integration.test.ts (1 test | 1 skipped)\nstdout | src/mcp-capabilities/__tests__/leaf-factory-debug.test.ts > LeafFactory Debug > should work with minimal setup\nRegistration result: { ok: true, id: 'simple_leaf@1.0.0' }\nFactory size: 1\nRegistry keys: [ 'simple_leaf@1.0.0' ]\nRegistry size: 1\nTesting listLeaves...\nDEBUG: listLeaves() called\nDEBUG: registry size: 1\nDEBUG: registry keys: [ 'simple_leaf@1.0.0' ]\nDEBUG: Processing key: simple_leaf@1.0.0\nDEBUG: Adding leaf: simple_leaf 1.0.0\nDEBUG: Final leaves array: [\n  {\n    name: 'simple_leaf',\n    version: '1.0.0',\n    spec: {\n      name: 'simple_leaf',\n      version: '1.0.0',\n      description: 'Simple mock leaf',\n      inputSchema: [Object],\n      outputSchema: [Object],\n      timeoutMs: 1000,\n      retries: 0,\n      permissions: [Array]\n    }\n  }\n]\nlistLeaves result: [\n  {\n    name: 'simple_leaf',\n    version: '1.0.0',\n    spec: {\n      name: 'simple_leaf',\n      version: '1.0.0',\n      description: 'Simple mock leaf',\n      inputSchema: [Object],\n      outputSchema: [Object],\n      timeoutMs: 1000,\n      retries: 0,\n      permissions: [Array]\n    }\n  }\n]\nlistLeaves length: 1\nTesting has...\nhas result: true\nTesting get...\nget result: SimpleMockLeaf {\n  spec: {\n    name: 'simple_leaf',\n    version: '1.0.0',\n    description: 'Simple mock leaf',\n    inputSchema: { type: 'object' },\n    outputSchema: { type: 'object' },\n    timeoutMs: 1000,\n    retries: 0,\n    permissions: [ 'movement', 'sense' ]\n  }\n}\nManual implementation...\nManual leaves: [\n  {\n    name: 'simple_leaf',\n    version: '1.0.0',\n    spec: {\n      name: 'simple_leaf',\n      version: '1.0.0',\n      description: 'Simple mock leaf',\n      inputSchema: [Object],\n      outputSchema: [Object],\n      timeoutMs: 1000,\n      retries: 0,\n      permissions: [Array]\n    }\n  }\n]\n\n ✓ src/mcp-capabilities/__tests__/leaf-factory-debug.test.ts (1 test) 59ms\n ✓ src/__tests__/action-execution.test.ts (6 tests) 122ms\n ✓ src/__tests__/signal-processing-properties.test.ts (4 tests) 93ms\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle multiple event types\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle multiple event types\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle multiple event types\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle multiple event types\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle state updates\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle state updates\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle state updates\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Executing planning cycle for goal: torch corridor\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Planning for goal: torch corridor\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n✅ Found 2 applicable capabilities:\n   - place_torch_if_needed@1.0.0 (active)\n   - opt.torch_corridor@1.0.0 (shadow)\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: place_torch_if_needed\n🔧 Executing capability: place_torch_if_needed with real bot actions\n🔧 Executing capability: opt.torch_corridor\n🔧 Executing capability: opt.torch_corridor with real bot actions\n✅ Executed 0/2 capabilities successfully\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Executing planning cycle for goal: explore safely\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Planning for goal: explore safely\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n✅ Found 1 applicable capabilities:\n   - step_forward_safely@1.0.0 (active)\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: step_forward_safely\n🔧 Executing capability: step_forward_safely with real bot actions\n✅ Executed 0/1 capabilities successfully\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Executing planning cycle for goal: find food\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Planning for goal: find food\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n✅ Found 1 applicable capabilities:\n   - consume_food@1.0.0 (active)\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: consume_food\n🔧 Executing capability: consume_food with real bot actions\n✅ Executed 0/1 capabilities successfully\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Executing planning cycle for goal: check light level\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n🎯 Planning for goal: check light level\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n✅ Found 1 applicable capabilities:\n   - get_light_level@1.0.0 (active)\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: get_light_level\n🔧 Executing capability: get_light_level with real bot actions\n✅ Executed 0/1 capabilities successfully\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should validate compliance with iteration two specification\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should validate compliance with iteration two specification\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should validate compliance with iteration two specification\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\n ✓ src/__tests__/cognitive-stream-validation.test.ts (11 tests) 2146ms\n   ✓ Cognitive Stream Integration Validation > should handle planning cycles with different goals  435ms\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🎯 Executing planning cycle for goal: torch the mining corridor safely\n🎯 Executing planning cycle for goal: torch the mining corridor safely\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🎯 Planning for goal: torch the mining corridor safely\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n✅ Found 3 applicable capabilities:\n   - step_forward_safely@1.0.0 (active)\n   - place_torch_if_needed@1.0.0 (active)\n   - opt.torch_corridor@1.0.0 (shadow)\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n📡 Captured planGenerated event: {\n  type: 'planning',\n  content: 'Generated plan using mcp-capabilities approach',\n  timestamp: 1758502922075,\n  metadata: {\n    approach: 'mcp-capabilities',\n    reasoning: 'Found 3 applicable MCP capabilities',\n    confidence: 0.85,\n    latency: 150\n  }\n}\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: step_forward_safely\n🔧 Executing capability: step_forward_safely with real bot actions\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🔧 Capability step_forward_safely execution result: success (0ms)\n🔧 Executing capability: place_torch_if_needed\n🔧 Executing capability: place_torch_if_needed with real bot actions\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\nMETRIC place_torch_duration=0.09483299999919836 undefined\nMETRIC place_torch_placed=0 undefined\nMETRIC place_torch_light_before=15 undefined\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🔧 Capability place_torch_if_needed execution result: success (0ms)\n🔧 Executing capability: opt.torch_corridor\n🔧 Executing capability: opt.torch_corridor with real bot actions\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🔧 Capability opt.torch_corridor execution result: failure (0.40841699999873526ms)\n✅ Executed 2/3 capabilities successfully\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n📡 Captured planExecuted event: {\n  type: 'execution',\n  content: 'Plan executed: Success',\n  timestamp: 1758502922076,\n  metadata: {\n    success: true,\n    completedSteps: 2,\n    failedSteps: 1,\n    totalDuration: 0.40841699999873526\n  }\n}\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n📊 Total events captured: 2\n📊 Events: [\n  {\n    type: 'planning',\n    content: 'Generated plan using mcp-capabilities approach',\n    timestamp: 1758502922075,\n    metadata: {\n      approach: 'mcp-capabilities',\n      reasoning: 'Found 3 applicable MCP capabilities',\n      confidence: 0.85,\n      latency: 150\n    }\n  },\n  {\n    type: 'execution',\n    content: 'Plan executed: Success',\n    timestamp: 1758502922076,\n    metadata: {\n      success: true,\n      completedSteps: 2,\n      failedSteps: 1,\n      totalDuration: 0.40841699999873526\n    }\n  }\n]\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should detect impasse and propose new capability with real bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should detect impasse and propose new capability with real bot\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should update bot state from real Mineflayer bot\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should update bot state from real Mineflayer bot\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should handle bot inventory changes\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should handle bot inventory changes\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should determine current task based on bot state\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should determine current task based on bot state\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get MCP capabilities status\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get MCP capabilities status\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n🎯 Executing planning cycle for goal: find food\n🎯 Executing planning cycle for goal: find food\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n🎯 Planning for goal: find food\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n✅ Found 1 applicable capabilities:\n   - consume_food@1.0.0 (active)\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚡ Executing plan: mcp-capabilities\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚡ Executing plan: mcp-capabilities\n🔧 Executing capability: consume_food\n🔧 Executing capability: consume_food with real bot actions\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\nMETRIC consume_food_duration=501.4223750000019 undefined\nMETRIC consume_food_items=1 undefined\nMETRIC consume_food_hunger_restored=0 undefined\nMETRIC consume_food_saturation_restored=0 undefined\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n🔧 Capability consume_food execution result: success (502ms)\n✅ Executed 1/1 capabilities successfully\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should handle bot errors gracefully\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should handle bot errors gracefully\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should handle bot errors gracefully\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should disconnect and cleanup properly\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n🔗 Initializing Minecraft Cognitive Integration...\n🧠 Initializing Cognitive Stream Integration...\n✅ Cognitive Stream Integration initialized\n🔧 Attempting to register torch corridor capability...\n✅ Minecraft Cognitive Integration initialized\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should disconnect and cleanup properly\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should disconnect and cleanup properly\n🔌 Disconnecting Minecraft Cognitive Integration...\n✅ Minecraft Cognitive Integration disconnected\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\n🔧 Initializing default MCP capabilities...\n🔧 Registering real leaf implementations...\n✅ Registered leaf: move_to@1.0.0\n✅ Registered leaf: step_forward_safely@1.0.0\n✅ Registered leaf: place_torch_if_needed@1.0.0\n✅ Registered leaf: retreat_and_block@1.0.0\n✅ Registered leaf: sense_hostiles@1.0.0\n✅ Registered leaf: dig_block@1.0.0\n✅ Registered leaf: place_block@1.0.0\n✅ Registered leaf: consume_food@1.0.0\n✅ Registered leaf: get_light_level@1.0.0\n✅ Registered leaf: craft_recipe@1.1.0\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\n🔧 Attempting to register torch corridor capability...\n\nstdout | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\n🔧 Registration result: { ok: true, id: 'opt.torch_corridor@1.0.0' }\n✅ Default capabilities initialized\n\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts (15 tests | 4 failed) 32777ms\n   ✓ Minecraft Cognitive Integration End-to-End > should initialize with real Mineflayer bot 209ms\n   ✓ Minecraft Cognitive Integration End-to-End > should register real leaf implementations 93ms\n   × Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot 30126ms\n     → expected 'failure' to be 'success' // Object.is equality\n   ✓ Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration  1025ms\n   ✓ Minecraft Cognitive Integration End-to-End > should detect impasse and propose new capability with real bot 23ms\n   ✓ Minecraft Cognitive Integration End-to-End > should update bot state from real Mineflayer bot 20ms\n   ✓ Minecraft Cognitive Integration End-to-End > should handle bot inventory changes 21ms\n   ✓ Minecraft Cognitive Integration End-to-End > should determine current task based on bot state 19ms\n   ✓ Minecraft Cognitive Integration End-to-End > should get MCP capabilities status 19ms\n   ✓ Minecraft Cognitive Integration End-to-End > should get active goals and cognitive stream  1024ms\n   ✓ Minecraft Cognitive Integration End-to-End > should handle bot errors gracefully 121ms\n   ✓ Minecraft Cognitive Integration End-to-End > should disconnect and cleanup properly 18ms\n   × Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals 18ms\n     → Cannot read properties of undefined (reading 'on')\n     → Cannot read properties of undefined (reading 'disconnect')\n   × Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals 19ms\n     → Cannot read properties of undefined (reading 'on')\n     → Cannot read properties of undefined (reading 'disconnect')\n   × Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner 19ms\n     → Cannot read properties of undefined (reading 'on')\n     → Cannot read properties of undefined (reading 'disconnect')\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\nstdout | NarrativeLLMInterface.checkAvailability (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/cognitive-stream-integration.ts:60:15)\n⚠️ LLM service not available, using fallback thoughts\n\n\n Test Files  15 failed | 18 passed | 1 skipped (34)\n      Tests  15 failed | 178 passed | 1 skipped (194)\n     Errors  18 errors\n   Start at  18:01:30\n   Duration  33.75s (transform 1.38s, setup 484ms, collect 6.15s, tests 42.33s, environment 4ms, prepare 3.13s)\n\n ELIFECYCLE  Test failed. See above for more details.\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should initialize with default configuration\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should process signals without errors\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should start and stop cleanly\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should process cognitive tasks\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should emit events for signal processing\nSignal validation failed: Error: done() callback is deprecated, use promise instead\n    at context (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1926:9)\n    at Arbiter.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/arbiter.test.ts:80:7)\n    at Arbiter.emit (node:events:519:28)\n    at SignalProcessor.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/arbiter.ts:756:12)\n    at SignalProcessor.emit (node:events:519:28)\n    at SignalProcessor.processSignal (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/signal-processor.ts:149:10)\n    at Arbiter.processSignal (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/arbiter.ts:200:28)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/arbiter.test.ts:93:13\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should emit events for signal processing\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should track performance metrics\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > integrates enhanced needs into decision routing\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > ignores low-priority enhanced needs\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should handle multiple concurrent signals\nArbiter not running\n\nstderr | src/__tests__/server.test.ts > Core Server API > Error Handling > should handle internal server errors\nGet capability failed: Error: Database error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/server.test.ts:442:52\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚠️ No bot context available for capability: step_forward_safely\n⚠️ No bot context available for capability: place_torch_if_needed\n⚠️ No bot context available for capability: opt.torch_corridor\n\nstderr | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n⚠️ No bot context available for capability: consume_food\n\nstderr | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n⚠️ No bot context available for capability: get_light_level\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n⚠️ No bot context available for capability: step_forward_safely\n⚠️ No bot context available for capability: place_torch_if_needed\n⚠️ No bot context available for capability: opt.torch_corridor\n\nstderr | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n⚠️ Capability opt.torch_corridor execution error: [object Object]\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: place_torch_if_needed\n⚠️ No bot context available for capability: opt.torch_corridor\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: step_forward_safely\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: consume_food\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: get_light_level\n\nstderr | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n⚠️ Capability opt.torch_corridor execution error: [object Object]\n\n\n⎯⎯⎯⎯⎯⎯ Failed Suites 8 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/behavioral-coherence.test.ts [ src/__tests__/behavioral-coherence.test.ts ]\n FAIL  src/__tests__/contract-testing.test.ts [ src/__tests__/contract-testing.test.ts ]\n FAIL  src/__tests__/golden-decision-tests.test.ts [ src/__tests__/golden-decision-tests.test.ts ]\n FAIL  src/__tests__/performance-regression.test.ts [ src/__tests__/performance-regression.test.ts ]\nReferenceError: EventEmitter is not defined\n ❯ Object.<anonymous> src/mcp-capabilities/capability-registry.ts:85:41\n ❯ Object.<anonymous> src/mcp-capabilities/index.ts:11:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/26]⎯\n\n FAIL  src/__tests__/mcp-capability-selection-integration.test.ts [ src/__tests__/mcp-capability-selection-integration.test.ts ]\n FAIL  src/__tests__/real-component-integration.test.ts [ src/__tests__/real-component-integration.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/mcp-capabilities-adapter.js\n ❯ Object.<anonymous> src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/26]⎯\n\n FAIL  src/__tests__/minecraft-reasoning-integration-e2e.test.ts [ src/__tests__/minecraft-reasoning-integration-e2e.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/hierarchical-planner/index.js\n ❯ Object.<anonymous> src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/26]⎯\n\n FAIL  src/mcp-capabilities/__tests__/capability-registry.test.ts [ src/mcp-capabilities/__tests__/capability-registry.test.ts ]\nReferenceError: EventEmitter is not defined\n ❯ src/mcp-capabilities/capability-registry.ts:85:41\n ❯ src/mcp-capabilities/__tests__/capability-registry.test.ts:7:1\n      5|  */\n      6| \n      7| import { CapabilityRegistry } from '../capability-registry';\n       | ^\n      8| import {\n      9|   CapabilitySpec,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/26]⎯\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 15 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/arbiter.test.ts > Arbiter Integration Tests > integrates enhanced needs into decision routing\nAssertionError: expected \"processCognitiveTask\" to be called with arguments: [ ObjectContaining{…} ]\n\nNumber of calls: 0\n\n ❯ src/__tests__/arbiter.test.ts:222:24\n    220|     await new Promise((resolve) => setImmediate(resolve));\n    221| \n    222|     expect(processSpy).toHaveBeenCalledWith(\n       |                        ^\n    223|       expect.objectContaining({\n    224|         context: expect.objectContaining({\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/26]⎯\n\n FAIL  src/__tests__/arbiter.test.ts > Arbiter Integration Tests > ignores low-priority enhanced needs\nAssertionError: expected undefined to be +0 // Object.is equality\n\n- Expected: \n0\n\n+ Received: \nundefined\n\n ❯ src/__tests__/arbiter.test.ts:287:57\n    285|     expect(rankSpy).not.toHaveBeenCalled();\n    286|     expect(processSpy).not.toHaveBeenCalled();\n    287|     expect(arbiter.getStatus().enhancedNeedTasksRouted).toBe(0);\n       |                                                         ^\n    288|   });\n    289| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/26]⎯\n\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\nAssertionError: expected 'failure' to be 'success' // Object.is equality\n\nExpected: \"success\"\nReceived: \"failure\"\n\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts:314:33\n    312|     );\n    313| \n    314|     expect(shadowResult.status).toBe('success');\n       |                                 ^\n    315|     expect(shadowResult.durationMs).toBeGreaterThan(0);\n    316|     expect(shadowResult.id).toContain('opt.torch_corridor_real_bot@1.0…\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/26]⎯\n\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\nTypeError: Cannot read properties of undefined (reading 'on')\n ❯ MinecraftCognitiveIntegration.setupEventForwarding src/minecraft-cognitive-integration.ts:217:21\n    215| \n    216|     // Forward bot events to cognitive stream\n    217|     this.config.bot.on('error', (error) => {\n       |                     ^\n    218|       this.emit('botError', { error: error.message });\n    219|     });\n ❯ new MinecraftCognitiveIntegration src/minecraft-cognitive-integration.ts:49:10\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts:521:19\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/26]⎯\n\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\nTypeError: Cannot read properties of undefined (reading 'disconnect')\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts:529:23\n    527| \n    528|   afterEach(async () => {\n    529|     await integration.disconnect();\n       |                       ^\n    530|   });\n    531| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/26]⎯\n\n FAIL  src/__tests__/real-capability-execution.test.ts > Real Capability Execution > should handle cognitive stream events\nAssertionError: expected 0 to be greater than 0\n ❯ src/__tests__/real-capability-execution.test.ts:172:36\n    170|     );\n    171| \n    172|     expect(executionEvents.length).toBeGreaterThan(0);\n       |                                    ^\n    173|   });\n    174| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/26]⎯\n\n FAIL  src/__tests__/simple-connection.test.ts > Simple Connection > should validate configuration options\nAssertionError: expected 'undefined' to be 'function' // Object.is equality\n\nExpected: \"function\"\nReceived: \"undefined\"\n\n ❯ src/__tests__/simple-connection.test.ts:153:29\n    151| \n    152|     expect(bot).toBeDefined();\n    153|     expect(typeof bot.chat).toBe('function');\n       |                             ^\n    154|     expect(typeof bot.entity).toBe('object');\n    155|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/26]⎯\n\n FAIL  src/__tests__/simple-movement.test.ts > Simple Movement > should handle movement controls\nTypeError: bot.setControlState is not a function\n ❯ src/__tests__/simple-movement.test.ts:88:9\n     86| \n     87|     // Test forward movement\n     88|     bot.setControlState('forward', true);\n       |         ^\n     89|     expect(bot.setControlState).toHaveBeenCalledWith('forward', true);\n     90| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/26]⎯\n\n FAIL  src/__tests__/simple-movement.test.ts > Simple Movement > should read world blocks\nTypeError: bot.blockAt is not a function\n ❯ src/__tests__/simple-movement.test.ts:195:23\n    193|     (bot as any).entity = mockBot.entity;\n    194| \n    195|     const block = bot.blockAt(mockBot.entity.position);\n       |                       ^\n    196|     expect(block).toBeDefined();\n    197|     expect(block.name).toBe('grass_block');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/26]⎯\n\n FAIL  src/__tests__/torch-corridor-e2e.test.ts > Torch Corridor End-to-End > should register and execute torch corridor capability\nAssertionError: expected 'failure' to be 'success' // Object.is equality\n\nExpected: \"success\"\nReceived: \"failure\"\n\n ❯ src/__tests__/torch-corridor-e2e.test.ts:242:33\n    240|     );\n    241| \n    242|     expect(shadowResult.status).toBe('success');\n       |                                 ^\n    243|     expect(shadowResult.durationMs).toBeGreaterThan(0);\n    244|     expect(shadowResult.id).toContain('opt.torch_corridor@1.0.0');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/26]⎯\n\n FAIL  src/__tests__/torch-corridor-e2e.test.ts > Torch Corridor End-to-End > should promote capability after successful shadow runs\nAssertionError: expected 'failure' to be 'success' // Object.is equality\n\nExpected: \"success\"\nReceived: \"failure\"\n\n ❯ src/__tests__/torch-corridor-e2e.test.ts:364:35\n    362|       );\n    363| \n    364|       expect(shadowResult.status).toBe('success');\n       |                                   ^\n    365|     }\n    366| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/26]⎯\n\n FAIL  src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle different Minecraft versions\nTypeError: bot.quit is not a function\n ❯ src/__tests__/version-compatibility.test.ts:55:11\n     53| \n     54|       // Clean up\n     55|       bot.quit();\n       |           ^\n     56|     }\n     57|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/26]⎯\n\n FAIL  src/__tests__/version-compatibility.test.ts > Version Compatibility > should validate bot configuration options\nAssertionError: expected 'undefined' to be 'function' // Object.is equality\n\nExpected: \"function\"\nReceived: \"undefined\"\n\n ❯ src/__tests__/version-compatibility.test.ts:128:29\n    126| \n    127|     expect(bot).toBeDefined();\n    128|     expect(typeof bot.chat).toBe('function');\n       |                             ^\n    129|     expect(typeof bot.inventory).toBe('object');\n    130|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/26]⎯\n\n FAIL  src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle invalid configuration gracefully\nAssertionError: expected [Function] to throw an error\n ❯ src/__tests__/version-compatibility.test.ts:141:44\n    139|     };\n    140| \n    141|     expect(() => createBot(invalidConfig)).toThrow();\n       |                                            ^\n    142|   });\n    143| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/26]⎯\n\n⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯\n\nVitest caught 18 unhandled errors during the test run.\nThis might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/simple-connection.test.ts:75:11\n     73|     setTimeout(() => {\n     74|       bot.emit('login');\n     75|       bot.emit('spawn');\n       |           ^\n     76|     }, 100);\n     77| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle connection events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/real-capability-execution.test.ts:84:11\n     82|     // Simulate spawn\n     83|     setTimeout(() => {\n     84|       bot.emit('spawn');\n       |           ^\n     85|     }, 100);\n     86| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/real-capability-execution.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle bot spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/simple-movement.test.ts:69:11\n     67|     // Simulate spawn\n     68|     setTimeout(() => {\n     69|       bot.emit('spawn');\n       |           ^\n     70|     }, 100);\n     71| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-movement.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle connection events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/version-compatibility.test.ts:86:11\n     84|     // Simulate spawn event\n     85|     setTimeout(() => {\n     86|       bot.emit('spawn');\n       |           ^\n     87|     }, 100);\n     88| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/version-compatibility.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout scenarios\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle connection errors\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/simple-actions.test.ts:78:11\n     76|     // Simulate spawn\n     77|     setTimeout(() => {\n     78|       bot.emit('spawn');\n       |           ^\n     79|     }, 100);\n     80| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-actions.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/working-bot.test.ts:76:11\n     74|     // Simulate spawn event\n     75|     setTimeout(() => {\n     76|       bot.emit('spawn');\n       |           ^\n     77|     }, 100);\n     78| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/working-bot.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle bot spawn event\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/bot-connection.test.ts:72:11\n     70|     // Simulate spawn\n     71|     setTimeout(() => {\n     72|       bot.emit('spawn');\n       |           ^\n     73|     }, 100);\n     74| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/bot-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle bot spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n",
          "error": "stderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should initialize with default configuration\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should process signals without errors\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should start and stop cleanly\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should process cognitive tasks\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should emit events for signal processing\nSignal validation failed: Error: done() callback is deprecated, use promise instead\n    at context (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1926:9)\n    at Arbiter.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/arbiter.test.ts:80:7)\n    at Arbiter.emit (node:events:519:28)\n    at SignalProcessor.<anonymous> (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/arbiter.ts:756:12)\n    at SignalProcessor.emit (node:events:519:28)\n    at SignalProcessor.processSignal (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/signal-processor.ts:149:10)\n    at Arbiter.processSignal (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/arbiter.ts:200:28)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/arbiter.test.ts:93:13\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should emit events for signal processing\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should track performance metrics\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > integrates enhanced needs into decision routing\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > ignores low-priority enhanced needs\nArbiter not running\n\nstderr | src/__tests__/arbiter.test.ts > Arbiter Integration Tests > should handle multiple concurrent signals\nArbiter not running\n\nstderr | src/__tests__/server.test.ts > Core Server API > Error Handling > should handle internal server errors\nGet capability failed: Error: Database error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/src/__tests__/server.test.ts:442:52\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should execute planning cycles\n⚠️ No bot context available for capability: step_forward_safely\n⚠️ No bot context available for capability: place_torch_if_needed\n⚠️ No bot context available for capability: opt.torch_corridor\n\nstderr | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle goal identification\n⚠️ No bot context available for capability: consume_food\n\nstderr | src/__tests__/narrative-thoughts.test.ts > Narrative Thoughts > should handle execution events\n⚠️ No bot context available for capability: get_light_level\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should execute planning cycles\n⚠️ No bot context available for capability: step_forward_safely\n⚠️ No bot context available for capability: place_torch_if_needed\n⚠️ No bot context available for capability: opt.torch_corridor\n\nstderr | src/__tests__/real-bot-integration.test.ts > Real Bot Integration > should validate real bot integration workflow\n⚠️ Capability opt.torch_corridor execution error: [object Object]\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: place_torch_if_needed\n⚠️ No bot context available for capability: opt.torch_corridor\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: step_forward_safely\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: consume_food\n\nstderr | src/__tests__/cognitive-stream-validation.test.ts > Cognitive Stream Integration Validation > should handle planning cycles with different goals\n⚠️ No bot context available for capability: get_light_level\n\nstderr | src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should execute planning cycle with real bot integration\n⚠️ Capability opt.torch_corridor execution error: [object Object]\n\n\n⎯⎯⎯⎯⎯⎯ Failed Suites 8 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/behavioral-coherence.test.ts [ src/__tests__/behavioral-coherence.test.ts ]\n FAIL  src/__tests__/contract-testing.test.ts [ src/__tests__/contract-testing.test.ts ]\n FAIL  src/__tests__/golden-decision-tests.test.ts [ src/__tests__/golden-decision-tests.test.ts ]\n FAIL  src/__tests__/performance-regression.test.ts [ src/__tests__/performance-regression.test.ts ]\nReferenceError: EventEmitter is not defined\n ❯ Object.<anonymous> src/mcp-capabilities/capability-registry.ts:85:41\n ❯ Object.<anonymous> src/mcp-capabilities/index.ts:11:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/26]⎯\n\n FAIL  src/__tests__/mcp-capability-selection-integration.test.ts [ src/__tests__/mcp-capability-selection-integration.test.ts ]\n FAIL  src/__tests__/real-component-integration.test.ts [ src/__tests__/real-component-integration.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/mcp-capabilities-adapter.js\n ❯ Object.<anonymous> src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/26]⎯\n\n FAIL  src/__tests__/minecraft-reasoning-integration-e2e.test.ts [ src/__tests__/minecraft-reasoning-integration-e2e.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/hierarchical-planner/index.js\n ❯ Object.<anonymous> src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/26]⎯\n\n FAIL  src/mcp-capabilities/__tests__/capability-registry.test.ts [ src/mcp-capabilities/__tests__/capability-registry.test.ts ]\nReferenceError: EventEmitter is not defined\n ❯ src/mcp-capabilities/capability-registry.ts:85:41\n ❯ src/mcp-capabilities/__tests__/capability-registry.test.ts:7:1\n      5|  */\n      6| \n      7| import { CapabilityRegistry } from '../capability-registry';\n       | ^\n      8| import {\n      9|   CapabilitySpec,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/26]⎯\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 15 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/arbiter.test.ts > Arbiter Integration Tests > integrates enhanced needs into decision routing\nAssertionError: expected \"processCognitiveTask\" to be called with arguments: [ ObjectContaining{…} ]\n\nNumber of calls: 0\n\n ❯ src/__tests__/arbiter.test.ts:222:24\n    220|     await new Promise((resolve) => setImmediate(resolve));\n    221| \n    222|     expect(processSpy).toHaveBeenCalledWith(\n       |                        ^\n    223|       expect.objectContaining({\n    224|         context: expect.objectContaining({\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/26]⎯\n\n FAIL  src/__tests__/arbiter.test.ts > Arbiter Integration Tests > ignores low-priority enhanced needs\nAssertionError: expected undefined to be +0 // Object.is equality\n\n- Expected: \n0\n\n+ Received: \nundefined\n\n ❯ src/__tests__/arbiter.test.ts:287:57\n    285|     expect(rankSpy).not.toHaveBeenCalled();\n    286|     expect(processSpy).not.toHaveBeenCalled();\n    287|     expect(arbiter.getStatus().enhancedNeedTasksRouted).toBe(0);\n       |                                                         ^\n    288|   });\n    289| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/26]⎯\n\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Minecraft Cognitive Integration End-to-End > should register and execute torch corridor capability with real bot\nAssertionError: expected 'failure' to be 'success' // Object.is equality\n\nExpected: \"success\"\nReceived: \"failure\"\n\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts:314:33\n    312|     );\n    313| \n    314|     expect(shadowResult.status).toBe('success');\n       |                                 ^\n    315|     expect(shadowResult.durationMs).toBeGreaterThan(0);\n    316|     expect(shadowResult.id).toContain('opt.torch_corridor_real_bot@1.0…\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/26]⎯\n\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\nTypeError: Cannot read properties of undefined (reading 'on')\n ❯ MinecraftCognitiveIntegration.setupEventForwarding src/minecraft-cognitive-integration.ts:217:21\n    215| \n    216|     // Forward bot events to cognitive stream\n    217|     this.config.bot.on('error', (error) => {\n       |                     ^\n    218|       this.emit('botError', { error: error.message });\n    219|     });\n ❯ new MinecraftCognitiveIntegration src/minecraft-cognitive-integration.ts:49:10\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts:521:19\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/26]⎯\n\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should process cognitive thoughts and create behavior tree signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should handle compound thoughts with multiple signals\n FAIL  src/__tests__/minecraft-cognitive-integration-e2e.test.ts > Cognitive Thought to Behavior Tree Integration > should integrate with behavior tree runner\nTypeError: Cannot read properties of undefined (reading 'disconnect')\n ❯ src/__tests__/minecraft-cognitive-integration-e2e.test.ts:529:23\n    527| \n    528|   afterEach(async () => {\n    529|     await integration.disconnect();\n       |                       ^\n    530|   });\n    531| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/26]⎯\n\n FAIL  src/__tests__/real-capability-execution.test.ts > Real Capability Execution > should handle cognitive stream events\nAssertionError: expected 0 to be greater than 0\n ❯ src/__tests__/real-capability-execution.test.ts:172:36\n    170|     );\n    171| \n    172|     expect(executionEvents.length).toBeGreaterThan(0);\n       |                                    ^\n    173|   });\n    174| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/26]⎯\n\n FAIL  src/__tests__/simple-connection.test.ts > Simple Connection > should validate configuration options\nAssertionError: expected 'undefined' to be 'function' // Object.is equality\n\nExpected: \"function\"\nReceived: \"undefined\"\n\n ❯ src/__tests__/simple-connection.test.ts:153:29\n    151| \n    152|     expect(bot).toBeDefined();\n    153|     expect(typeof bot.chat).toBe('function');\n       |                             ^\n    154|     expect(typeof bot.entity).toBe('object');\n    155|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/26]⎯\n\n FAIL  src/__tests__/simple-movement.test.ts > Simple Movement > should handle movement controls\nTypeError: bot.setControlState is not a function\n ❯ src/__tests__/simple-movement.test.ts:88:9\n     86| \n     87|     // Test forward movement\n     88|     bot.setControlState('forward', true);\n       |         ^\n     89|     expect(bot.setControlState).toHaveBeenCalledWith('forward', true);\n     90| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/26]⎯\n\n FAIL  src/__tests__/simple-movement.test.ts > Simple Movement > should read world blocks\nTypeError: bot.blockAt is not a function\n ❯ src/__tests__/simple-movement.test.ts:195:23\n    193|     (bot as any).entity = mockBot.entity;\n    194| \n    195|     const block = bot.blockAt(mockBot.entity.position);\n       |                       ^\n    196|     expect(block).toBeDefined();\n    197|     expect(block.name).toBe('grass_block');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/26]⎯\n\n FAIL  src/__tests__/torch-corridor-e2e.test.ts > Torch Corridor End-to-End > should register and execute torch corridor capability\nAssertionError: expected 'failure' to be 'success' // Object.is equality\n\nExpected: \"success\"\nReceived: \"failure\"\n\n ❯ src/__tests__/torch-corridor-e2e.test.ts:242:33\n    240|     );\n    241| \n    242|     expect(shadowResult.status).toBe('success');\n       |                                 ^\n    243|     expect(shadowResult.durationMs).toBeGreaterThan(0);\n    244|     expect(shadowResult.id).toContain('opt.torch_corridor@1.0.0');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/26]⎯\n\n FAIL  src/__tests__/torch-corridor-e2e.test.ts > Torch Corridor End-to-End > should promote capability after successful shadow runs\nAssertionError: expected 'failure' to be 'success' // Object.is equality\n\nExpected: \"success\"\nReceived: \"failure\"\n\n ❯ src/__tests__/torch-corridor-e2e.test.ts:364:35\n    362|       );\n    363| \n    364|       expect(shadowResult.status).toBe('success');\n       |                                   ^\n    365|     }\n    366| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/26]⎯\n\n FAIL  src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle different Minecraft versions\nTypeError: bot.quit is not a function\n ❯ src/__tests__/version-compatibility.test.ts:55:11\n     53| \n     54|       // Clean up\n     55|       bot.quit();\n       |           ^\n     56|     }\n     57|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/26]⎯\n\n FAIL  src/__tests__/version-compatibility.test.ts > Version Compatibility > should validate bot configuration options\nAssertionError: expected 'undefined' to be 'function' // Object.is equality\n\nExpected: \"function\"\nReceived: \"undefined\"\n\n ❯ src/__tests__/version-compatibility.test.ts:128:29\n    126| \n    127|     expect(bot).toBeDefined();\n    128|     expect(typeof bot.chat).toBe('function');\n       |                             ^\n    129|     expect(typeof bot.inventory).toBe('object');\n    130|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/26]⎯\n\n FAIL  src/__tests__/version-compatibility.test.ts > Version Compatibility > should handle invalid configuration gracefully\nAssertionError: expected [Function] to throw an error\n ❯ src/__tests__/version-compatibility.test.ts:141:44\n    139|     };\n    140| \n    141|     expect(() => createBot(invalidConfig)).toThrow();\n       |                                            ^\n    142|   });\n    143| });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/26]⎯\n\n⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯\n\nVitest caught 18 unhandled errors during the test run.\nThis might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/simple-connection.test.ts:75:11\n     73|     setTimeout(() => {\n     74|       bot.emit('login');\n     75|       bot.emit('spawn');\n       |           ^\n     76|     }, 100);\n     77| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle connection events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/real-capability-execution.test.ts:84:11\n     82|     // Simulate spawn\n     83|     setTimeout(() => {\n     84|       bot.emit('spawn');\n       |           ^\n     85|     }, 100);\n     86| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/real-capability-execution.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle bot spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/simple-movement.test.ts:69:11\n     67|     // Simulate spawn\n     68|     setTimeout(() => {\n     69|       bot.emit('spawn');\n       |           ^\n     70|     }, 100);\n     71| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-movement.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle connection events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/version-compatibility.test.ts:86:11\n     84|     // Simulate spawn event\n     85|     setTimeout(() => {\n     86|       bot.emit('spawn');\n       |           ^\n     87|     }, 100);\n     88| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/version-compatibility.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout scenarios\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn timeout\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Cannot read properties of undefined (reading 'position')\n ❯ tickPhysics ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:79:32\n ❯ Timeout.doPhysics [as _onTimeout] ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/physics.js:71:7\n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle connection errors\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/simple-actions.test.ts:78:11\n     76|     // Simulate spawn\n     77|     setTimeout(() => {\n     78|       bot.emit('spawn');\n       |           ^\n     79|     }, 100);\n     80| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/simple-actions.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/working-bot.test.ts:76:11\n     74|     // Simulate spawn event\n     75|     setTimeout(() => {\n     76|       bot.emit('spawn');\n       |           ^\n     77|     }, 100);\n     78| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/working-bot.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle bot spawn event\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n\n⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯\nTypeError: Object.defineProperty called on non-object\n ❯ EventEmitter.<anonymous> ../../node_modules/.pnpm/mineflayer@4.32.0/node_modules/mineflayer/lib/plugins/inventory.js:55:12\n ❯ EventEmitter.emit node:events:531:35\n ❯ Timeout._onTimeout src/__tests__/bot-connection.test.ts:72:11\n     70|     // Simulate spawn\n     71|     setTimeout(() => {\n     72|       bot.emit('spawn');\n       |           ^\n     73|     }, 100);\n     74| \n ❯ listOnTimeout node:internal/timers:588:17\n ❯ processTimers node:internal/timers:523:7\n\nThis error originated in \"src/__tests__/bot-connection.test.ts\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.\nThe latest test that might've caused the error is \"should handle bot spawn events\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\n\n"
        },
        {
          "checkId": "memory-unit-tests",
          "success": false,
          "duration": 1595,
          "output": "\n> @conscious-bot/memory@0.1.0 test /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\n> vitest run\n\n\n RUN  v3.2.4 /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory\n\n ✓ src/__tests__/memory-versioning.test.ts (8 tests) 3ms\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill registration > should register a new skill\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill registration > should register a new skill\n✅ Skill registered: test.skill\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill registration > should retrieve a registered skill\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill registration > should retrieve a registered skill\n✅ Skill registered: test.skill\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill registration > should return undefined for non-existent skill\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill usage tracking > should record skill usage and update metadata\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill usage tracking > should record skill usage and update metadata\n✅ Skill registered: test.skill\n📊 Skill usage recorded: test.skill (success: true, duration: 1000ms)\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill usage tracking > should calculate success rate from multiple usages\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill usage tracking > should calculate success rate from multiple usages\n✅ Skill registered: test.skill\n📊 Skill usage recorded: test.skill (success: true, duration: 1000ms)\n📊 Skill usage recorded: test.skill (success: false, duration: 500ms)\n📊 Skill usage recorded: test.skill (success: true, duration: 1500ms)\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill reuse statistics > should provide skill reuse statistics\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > skill reuse statistics > should provide skill reuse statistics\n✅ Skill registered: skill.1\n✅ Skill registered: skill.2\n📊 Skill usage recorded: skill.1 (success: true, duration: 1000ms)\n📊 Skill usage recorded: skill.1 (success: true, duration: 1200ms)\n📊 Skill usage recorded: skill.2 (success: false, duration: 800ms)\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > curriculum goals > should generate curriculum goals\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > curriculum goals > should get next curriculum goal based on completed skills\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > curriculum goals > should mark curriculum goal as completed\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > curriculum goals > should mark curriculum goal as completed\n🎯 Curriculum goal completed: stone_tools\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > default skills > should have default skills registered\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\nstdout | src/skills/__tests__/SkillRegistry.test.ts > SkillRegistry > default skills > should have skills with proper metadata\n✅ Skill registered: opt.shelter_basic\n✅ Skill registered: opt.chop_tree_safe\n✅ Skill registered: opt.ore_ladder_iron\n✅ Skill registered: opt.smelt_iron_basic\n✅ Skill registered: opt.craft_tool_tiered\n✅ Skill registered: opt.food_pipeline_starter\n✅ Skill registered: opt.torch_corridor\n✅ Skill registered: opt.bridge_gap_safe\n✅ Skill registered: opt.biome_probe\n✅ Skill registered: opt.emergency_retreat_and_block\n\n ✓ src/skills/__tests__/SkillRegistry.test.ts (11 tests) 10ms\n ✓ src/semantic/__tests__/semantic-memory-integration.test.ts (11 tests) 13ms\nstdout | src/working/__tests__/working-memory-integration.test.ts > Working Memory Integration > Integration and Edge Cases > should handle cognitive load limitations\nRemoved item wm-fact-1758502925849-oxqfwm0 to make room (importance: 0.50)\nRemoved item wm-fact-1758502925849-b5l6fv4 to make room (importance: 0.50)\nRemoved item wm-fact-1758502925849-nkjeeis to make room (importance: 0.50)\n\n ✓ src/provenance/__tests__/provenance-integration.test.ts (4 tests) 10ms\n ✓ src/working/__tests__/working-memory-integration.test.ts (22 tests) 12ms\nstdout | src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should score the complete mermaid chart flow implementation\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should complete the full cognitive architecture flow\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should handle memory-based tool selection with context awareness\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should integrate memory decay with cognitive processing\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should provide memory-enhanced reasoning with confidence scoring\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should evaluate memory system compliance with mermaid chart specifications\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should provide detailed integration quality metrics\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Memory System Performance Scoring > should score memory system performance across different scenarios\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should score memory integration across all cognitive modules\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should verify complete cognitive architecture compliance\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle Ollama responses with memory integration\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle memory recall triggering and surface to LLM thought center\n🚀 Initializing Enhanced Memory System...\n\n ❯ src/__tests__/memory-integration-scoring.test.ts (4 tests | 4 failed) 13ms\n   × Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should score the complete mermaid chart flow implementation 10ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should evaluate memory system compliance with mermaid chart specifications 1ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should provide detailed integration quality metrics 0ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Memory Integration Scoring and Verification > Memory System Performance Scoring > should score memory system performance across different scenarios 1ms\n     → Cannot read properties of undefined (reading 'searchParams')\n ❯ src/__tests__/memory-llm-integration.test.ts (8 tests | 8 failed) 13ms\n   × Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should complete the full cognitive architecture flow 8ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should handle memory-based tool selection with context awareness 2ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should integrate memory decay with cognitive processing 1ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should provide memory-enhanced reasoning with confidence scoring 1ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should score memory integration across all cognitive modules 0ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should verify complete cognitive architecture compliance 0ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle Ollama responses with memory integration 0ms\n     → Cannot read properties of undefined (reading 'searchParams')\n   × Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle memory recall triggering and surface to LLM thought center 0ms\n     → Cannot read properties of undefined (reading 'searchParams')\nstdout | src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Memory Isolation Between Seeds > should isolate memories between different seeds\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Memory Isolation Between Seeds > should maintain isolation after system restart\n🚀 Initializing Enhanced Memory System...\n\nstdout | src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Database Status and Health Checks > should provide status information including seed details\n🚀 Initializing Enhanced Memory System...\n\n ❯ src/__tests__/per-seed-isolation.test.ts (6 tests | 4 failed) 134ms\n   ✓ Per-Seed Database Isolation > Database Creation and Isolation > should create separate databases for different seeds 11ms\n   ✓ Per-Seed Database Isolation > Database Creation and Isolation > should use default database when worldSeed is 0 13ms\n   × Per-Seed Database Isolation > Memory Isolation Between Seeds > should isolate memories between different seeds 11ms\n     → \n   × Per-Seed Database Isolation > Memory Isolation Between Seeds > should maintain isolation after system restart 13ms\n     → \n   × Per-Seed Database Isolation > Database Status and Health Checks > should provide status information including seed details 20ms\n     → \n   × Per-Seed Database Isolation > Database Status and Health Checks > should handle invalid database connections gracefully 42ms\n     → getaddrinfo ENOTFOUND invalid-host\n\n Test Files  3 failed | 5 passed (8)\n      Tests  16 failed | 58 passed (74)\n   Start at  18:02:05\n   Duration  766ms (transform 838ms, setup 0ms, collect 1.76s, tests 209ms, environment 1ms, prepare 788ms)\n\n ELIFECYCLE  Test failed. See above for more details.\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 16 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should score the complete mermaid chart flow implementation\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should evaluate memory system compliance with mermaid chart specifications\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should provide detailed integration quality metrics\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Memory System Performance Scoring > should score memory system performance across different scenarios\nTypeError: Cannot read properties of undefined (reading 'searchParams')\n ❯ parse ../../node_modules/.pnpm/pg-connection-string@2.9.1/node_modules/pg-connection-string/index.js:39:30\n ❯ new ConnectionParameters ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/connection-parameters.js:56:42\n ❯ new Client ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/client.js:18:33\n ❯ BoundPool.newClient ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:233:20\n ❯ BoundPool.connect ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:227:10\n ❯ VectorDatabase.initialize src/vector-database.ts:168:36\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:25\n ❯ src/__tests__/memory-integration-scoring.test.ts:116:24\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/16]⎯\n\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should complete the full cognitive architecture flow\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should handle memory-based tool selection with context awareness\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should integrate memory decay with cognitive processing\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should provide memory-enhanced reasoning with confidence scoring\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should score memory integration across all cognitive modules\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should verify complete cognitive architecture compliance\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle Ollama responses with memory integration\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle memory recall triggering and surface to LLM thought center\nTypeError: Cannot read properties of undefined (reading 'searchParams')\n ❯ parse ../../node_modules/.pnpm/pg-connection-string@2.9.1/node_modules/pg-connection-string/index.js:39:30\n ❯ new ConnectionParameters ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/connection-parameters.js:56:42\n ❯ new Client ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/client.js:18:33\n ❯ BoundPool.newClient ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:233:20\n ❯ BoundPool.connect ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:227:10\n ❯ VectorDatabase.initialize src/vector-database.ts:168:36\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:25\n ❯ src/__tests__/memory-llm-integration.test.ts:273:24\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Memory Isolation Between Seeds > should isolate memories between different seeds\n{\n  stack: 'AggregateError: \\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\\n' +\n    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n' +\n    '    at VectorDatabase.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts:168:20)\\n' +\n    '    at EnhancedMemorySystem.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts:282:5)\\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts:186:7\\n' +\n    '    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20',\n  errors: [\n    {\n      stack: 'Error: connect ECONNREFUSED ::1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED ::1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '::1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    },\n    {\n      stack: 'Error: connect ECONNREFUSED 127.0.0.1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED 127.0.0.1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '127.0.0.1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    }\n  ],\n  code: 'ECONNREFUSED',\n  message: '',\n  constructor: 'Function<AggregateError>',\n  name: 'AggregateError',\n  toString: 'Function<toString>',\n  stacks: [\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js',\n      line: 45,\n      column: 11\n    },\n    {\n      method: 'VectorDatabase.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts',\n      line: 168,\n      column: 20\n    },\n    {\n      method: 'EnhancedMemorySystem.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts',\n      line: 282,\n      column: 5\n    },\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts',\n      line: 186,\n      column: 7\n    }\n  ]\n}\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.initialize src/vector-database.ts:168:20\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:5\n ❯ src/__tests__/per-seed-isolation.test.ts:186:7\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Memory Isolation Between Seeds > should maintain isolation after system restart\n{\n  stack: 'AggregateError: \\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\\n' +\n    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n' +\n    '    at VectorDatabase.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts:168:20)\\n' +\n    '    at EnhancedMemorySystem.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts:282:5)\\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts:269:7\\n' +\n    '    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20',\n  errors: [\n    {\n      stack: 'Error: connect ECONNREFUSED ::1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED ::1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '::1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    },\n    {\n      stack: 'Error: connect ECONNREFUSED 127.0.0.1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED 127.0.0.1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '127.0.0.1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    }\n  ],\n  code: 'ECONNREFUSED',\n  message: '',\n  constructor: 'Function<AggregateError>',\n  name: 'AggregateError',\n  toString: 'Function<toString>',\n  stacks: [\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js',\n      line: 45,\n      column: 11\n    },\n    {\n      method: 'VectorDatabase.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts',\n      line: 168,\n      column: 20\n    },\n    {\n      method: 'EnhancedMemorySystem.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts',\n      line: 282,\n      column: 5\n    },\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts',\n      line: 269,\n      column: 7\n    }\n  ]\n}\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.initialize src/vector-database.ts:168:20\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:5\n ❯ src/__tests__/per-seed-isolation.test.ts:269:7\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Database Status and Health Checks > should provide status information including seed details\n{\n  stack: 'AggregateError: \\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\\n' +\n    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n' +\n    '    at VectorDatabase.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts:168:20)\\n' +\n    '    at EnhancedMemorySystem.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts:282:5)\\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts:327:7\\n' +\n    '    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20',\n  errors: [\n    {\n      stack: 'Error: connect ECONNREFUSED ::1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED ::1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '::1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    },\n    {\n      stack: 'Error: connect ECONNREFUSED 127.0.0.1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED 127.0.0.1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '127.0.0.1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    }\n  ],\n  code: 'ECONNREFUSED',\n  message: '',\n  constructor: 'Function<AggregateError>',\n  name: 'AggregateError',\n  toString: 'Function<toString>',\n  stacks: [\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js',\n      line: 45,\n      column: 11\n    },\n    {\n      method: 'VectorDatabase.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts',\n      line: 168,\n      column: 20\n    },\n    {\n      method: 'EnhancedMemorySystem.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts',\n      line: 282,\n      column: 5\n    },\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts',\n      line: 327,\n      column: 7\n    }\n  ]\n}\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.initialize src/vector-database.ts:168:20\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:5\n ❯ src/__tests__/per-seed-isolation.test.ts:327:7\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Database Status and Health Checks > should handle invalid database connections gracefully\nError: getaddrinfo ENOTFOUND invalid-host\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.getStatus src/vector-database.ts:528:20\n    526|     storageSize?: string;\n    527|   }> {\n    528|     const client = await this.pool.connect();\n       |                    ^\n    529|     try {\n    530|       // Check connection status\n ❯ EnhancedMemorySystem.getStatus src/memory-system.ts:696:22\n ❯ src/__tests__/per-seed-isolation.test.ts:358:22\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/16]⎯\n\n",
          "error": "\n⎯⎯⎯⎯⎯⎯ Failed Tests 16 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should score the complete mermaid chart flow implementation\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should evaluate memory system compliance with mermaid chart specifications\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Complete Cognitive Architecture Scoring > should provide detailed integration quality metrics\n FAIL  src/__tests__/memory-integration-scoring.test.ts > Memory Integration Scoring and Verification > Memory System Performance Scoring > should score memory system performance across different scenarios\nTypeError: Cannot read properties of undefined (reading 'searchParams')\n ❯ parse ../../node_modules/.pnpm/pg-connection-string@2.9.1/node_modules/pg-connection-string/index.js:39:30\n ❯ new ConnectionParameters ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/connection-parameters.js:56:42\n ❯ new Client ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/client.js:18:33\n ❯ BoundPool.newClient ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:233:20\n ❯ BoundPool.connect ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:227:10\n ❯ VectorDatabase.initialize src/vector-database.ts:168:36\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:25\n ❯ src/__tests__/memory-integration-scoring.test.ts:116:24\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/16]⎯\n\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should complete the full cognitive architecture flow\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should handle memory-based tool selection with context awareness\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should integrate memory decay with cognitive processing\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Mermaid Chart Flow Verification > should provide memory-enhanced reasoning with confidence scoring\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should score memory integration across all cognitive modules\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Integration Scoring and Verification > should verify complete cognitive architecture compliance\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle Ollama responses with memory integration\n FAIL  src/__tests__/memory-llm-integration.test.ts > Complete Memory-LLM Integration Flow > Ollama Memory Integration Tests > should handle memory recall triggering and surface to LLM thought center\nTypeError: Cannot read properties of undefined (reading 'searchParams')\n ❯ parse ../../node_modules/.pnpm/pg-connection-string@2.9.1/node_modules/pg-connection-string/index.js:39:30\n ❯ new ConnectionParameters ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/connection-parameters.js:56:42\n ❯ new Client ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/client.js:18:33\n ❯ BoundPool.newClient ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:233:20\n ❯ BoundPool.connect ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:227:10\n ❯ VectorDatabase.initialize src/vector-database.ts:168:36\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:25\n ❯ src/__tests__/memory-llm-integration.test.ts:273:24\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Memory Isolation Between Seeds > should isolate memories between different seeds\n{\n  stack: 'AggregateError: \\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\\n' +\n    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n' +\n    '    at VectorDatabase.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts:168:20)\\n' +\n    '    at EnhancedMemorySystem.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts:282:5)\\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts:186:7\\n' +\n    '    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20',\n  errors: [\n    {\n      stack: 'Error: connect ECONNREFUSED ::1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED ::1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '::1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    },\n    {\n      stack: 'Error: connect ECONNREFUSED 127.0.0.1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED 127.0.0.1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '127.0.0.1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    }\n  ],\n  code: 'ECONNREFUSED',\n  message: '',\n  constructor: 'Function<AggregateError>',\n  name: 'AggregateError',\n  toString: 'Function<toString>',\n  stacks: [\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js',\n      line: 45,\n      column: 11\n    },\n    {\n      method: 'VectorDatabase.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts',\n      line: 168,\n      column: 20\n    },\n    {\n      method: 'EnhancedMemorySystem.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts',\n      line: 282,\n      column: 5\n    },\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts',\n      line: 186,\n      column: 7\n    }\n  ]\n}\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.initialize src/vector-database.ts:168:20\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:5\n ❯ src/__tests__/per-seed-isolation.test.ts:186:7\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Memory Isolation Between Seeds > should maintain isolation after system restart\n{\n  stack: 'AggregateError: \\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\\n' +\n    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n' +\n    '    at VectorDatabase.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts:168:20)\\n' +\n    '    at EnhancedMemorySystem.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts:282:5)\\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts:269:7\\n' +\n    '    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20',\n  errors: [\n    {\n      stack: 'Error: connect ECONNREFUSED ::1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED ::1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '::1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    },\n    {\n      stack: 'Error: connect ECONNREFUSED 127.0.0.1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED 127.0.0.1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '127.0.0.1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    }\n  ],\n  code: 'ECONNREFUSED',\n  message: '',\n  constructor: 'Function<AggregateError>',\n  name: 'AggregateError',\n  toString: 'Function<toString>',\n  stacks: [\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js',\n      line: 45,\n      column: 11\n    },\n    {\n      method: 'VectorDatabase.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts',\n      line: 168,\n      column: 20\n    },\n    {\n      method: 'EnhancedMemorySystem.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts',\n      line: 282,\n      column: 5\n    },\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts',\n      line: 269,\n      column: 7\n    }\n  ]\n}\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.initialize src/vector-database.ts:168:20\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:5\n ❯ src/__tests__/per-seed-isolation.test.ts:269:7\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Database Status and Health Checks > should provide status information including seed details\n{\n  stack: 'AggregateError: \\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\\n' +\n    '    at processTicksAndRejections (node:internal/process/task_queues:105:5)\\n' +\n    '    at VectorDatabase.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts:168:20)\\n' +\n    '    at EnhancedMemorySystem.initialize (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts:282:5)\\n' +\n    '    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts:327:7\\n' +\n    '    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20',\n  errors: [\n    {\n      stack: 'Error: connect ECONNREFUSED ::1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED ::1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '::1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    },\n    {\n      stack: 'Error: connect ECONNREFUSED 127.0.0.1:5432\\n' +\n        '    at createConnectionError (node:net:1678:14)\\n' +\n        '    at afterConnectMultiple (node:net:1708:16)',\n      message: 'connect ECONNREFUSED 127.0.0.1:5432',\n      errno: -61,\n      code: 'ECONNREFUSED',\n      syscall: 'connect',\n      address: '127.0.0.1',\n      port: 5432,\n      constructor: 'Function<Error>',\n      name: 'Error',\n      toString: 'Function<toString>'\n    }\n  ],\n  code: 'ECONNREFUSED',\n  message: '',\n  constructor: 'Function<AggregateError>',\n  name: 'AggregateError',\n  toString: 'Function<toString>',\n  stacks: [\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js',\n      line: 45,\n      column: 11\n    },\n    {\n      method: 'VectorDatabase.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/vector-database.ts',\n      line: 168,\n      column: 20\n    },\n    {\n      method: 'EnhancedMemorySystem.initialize',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/memory-system.ts',\n      line: 282,\n      column: 5\n    },\n    {\n      method: '',\n      file: '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/src/__tests__/per-seed-isolation.test.ts',\n      line: 327,\n      column: 7\n    }\n  ]\n}\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.initialize src/vector-database.ts:168:20\n    166|    */\n    167|   async initialize(): Promise<void> {\n    168|     const client = await this.pool.connect();\n       |                    ^\n    169|     try {\n    170|       // Enable pgvector extension\n ❯ EnhancedMemorySystem.initialize src/memory-system.ts:282:5\n ❯ src/__tests__/per-seed-isolation.test.ts:327:7\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/16]⎯\n\n FAIL  src/__tests__/per-seed-isolation.test.ts > Per-Seed Database Isolation > Database Status and Health Checks > should handle invalid database connections gracefully\nError: getaddrinfo ENOTFOUND invalid-host\n ❯ ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11\n ❯ VectorDatabase.getStatus src/vector-database.ts:528:20\n    526|     storageSize?: string;\n    527|   }> {\n    528|     const client = await this.pool.connect();\n       |                    ^\n    529|     try {\n    530|       // Check connection status\n ❯ EnhancedMemorySystem.getStatus src/memory-system.ts:696:22\n ❯ src/__tests__/per-seed-isolation.test.ts:358:22\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/16]⎯\n\n"
        },
        {
          "checkId": "planning-unit-tests",
          "success": false,
          "duration": 13427,
          "output": "\n> @conscious-bot/planning@0.1.0 test /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n> vitest run\n\n\n RUN  v3.2.4 /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should trace through the autonomous task executor logic\n🔍 Starting autonomous task executor trace...\n📋 Active tasks: 1\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should trace through the autonomous task executor logic\n🔧 MCP options available: 2\n🎯 Found gathering task: Gather Wood\n🔍 Suitable option found: gather_wood@1\n🚀 Executing MCP option: gather_wood@1\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should trace through the autonomous task executor logic\n✅ MCP execution result: { success: true, data: { itemsCollected: 1 } }\n🎉 Autonomous task executor trace completed successfully!\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n🔍 Investigating MCP execution failure...\n✅ 1. Get active tasks\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should correctly analyze successful task completion\n Task Performance Analysis for mine: {\n  taskId: 'test-task-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should execute an option successfully\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/test.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should execute an option successfully\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should execute an option successfully\nLoaded BT definition for test.option: {\n  \"id\": \"test.option\",\n  \"name\": \"test.option\",\n  \"description\": \"Test behavior tree for option testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"test_action\",\n        \"action\": \"test_action\",\n        \"description\": \"Test action node\",\n        \"args\": {\n          \"param\": \"value\"\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"option\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should execute an option successfully\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should execute an option successfully\nAction result: {\n  ok: true,\n  data: {\n    result: 'mock_success',\n    tool: 'minecraft.test_action',\n    args: { param: 'value' }\n  },\n  environmentDeltas: {}\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/test.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nLoaded BT definition for test.option: {\n  \"id\": \"test.option\",\n  \"name\": \"test.option\",\n  \"description\": \"Test behavior tree for option testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"test_action\",\n        \"action\": \"test_action\",\n        \"description\": \"Test action node\",\n        \"args\": {\n          \"param\": \"value\"\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"option\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nAction result: { ok: false, error: 'mock_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nRetrying test_action (attempt 1/1) after 1000ms\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Successful Task Execution with Cognitive Feedback > should process successful crafting task with positive feedback\n Task Performance Analysis for craft: {\n  taskId: 'craft-task-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\n ❯ src/skill-integration/__tests__/skill-composer-adapter.test.ts (11 tests | 1 failed) 12ms\n   ✓ SkillComposerAdapter > Initialization > should initialize with goal mapping 3ms\n   ✓ SkillComposerAdapter > Initialization > should set up event handlers 1ms\n   ✓ SkillComposerAdapter > Goal Conversion > should convert goal to description 1ms\n   ✓ SkillComposerAdapter > Goal Conversion > should generate description from goal type when description is empty 0ms\n   ✓ SkillComposerAdapter > Context Conversion > should convert planning context to execution context 1ms\n   × SkillComposerAdapter > Skill Composition > should handle successful skill composition 3ms\n     → expected 5 to be 'moderate' // Object.is equality\n   ✓ SkillComposerAdapter > Skill Composition > should handle composition failure gracefully 0ms\n   ✓ SkillComposerAdapter > Caching > should cache successful compositions 0ms\n   ✓ SkillComposerAdapter > Caching > should provide cache statistics 0ms\n   ✓ SkillComposerAdapter > Caching > should clear cache 0ms\n   ✓ SkillComposerAdapter > Fallback Skills > should find fallback skills when composition fails 0ms\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should correctly analyze failed task completion\n Task Performance Analysis for craft: {\n  taskId: 'test-task-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Missing required materials',\n    type: 'crafting'\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n✅ 2. Get MCP options\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should detect stuck patterns in task execution\n Task Performance Analysis for mine: {\n  taskId: 'test-task-3',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'No blocks found', type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should detect stuck patterns in task execution\n Task Performance Analysis for mine: {\n  taskId: 'test-task-3',\n  totalAttempts: 2,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'No blocks found', type: 'mining' },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should detect stuck patterns in task execution\n Task Performance Analysis for mine: {\n  taskId: 'test-task-3',\n  totalAttempts: 3,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: { success: false, error: 'No blocks found', type: 'mining' },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Successful Task Execution with Cognitive Feedback > should process successful mining task with location-based feedback\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should detect stuck patterns in task execution\n Task Performance Analysis for mine: {\n  taskId: 'test-task-3',\n  totalAttempts: 4,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: { success: false, error: 'No blocks found', type: 'mining' },\n  historyLength: 4\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Failed Task Execution with Adaptive Feedback > should process failed crafting task and suggest alternatives\n Task Performance Analysis for craft: {\n  taskId: 'craft-task-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x wooden_pickaxe',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should calculate failure rates correctly\n Task Performance Analysis for craft: {\n  taskId: 'test-task-4',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should calculate failure rates correctly\n Task Performance Analysis for craft: {\n  taskId: 'test-task-4',\n  totalAttempts: 2,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Failed Task Execution with Adaptive Feedback > should process failed mining task and suggest location changes\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No blocks were successfully mined',\n    type: 'mining'\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should calculate failure rates correctly\n Task Performance Analysis for craft: {\n  taskId: 'test-task-4',\n  totalAttempts: 3,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect stuck crafting pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'craft-task-stuck',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x wooden_pickaxe',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should calculate failure rates correctly\n Task Performance Analysis for craft: {\n  taskId: 'test-task-4',\n  totalAttempts: 4,\n  successfulAttempts: 1,\n  failureRate: '75.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 4\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect stuck crafting pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'craft-task-stuck',\n  totalAttempts: 2,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x wooden_pickaxe',\n    type: undefined\n  },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Performance Analysis > should calculate failure rates correctly\n Task Performance Analysis for craft: {\n  taskId: 'test-task-4',\n  totalAttempts: 5,\n  successfulAttempts: 1,\n  failureRate: '80.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 5\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect stuck crafting pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'craft-task-stuck',\n  totalAttempts: 3,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x wooden_pickaxe',\n    type: undefined\n  },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Alternative Task Generation > should suggest appropriate alternatives for crafting failures\n Task Performance Analysis for craft: {\n  taskId: 'test-task-5',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Missing required materials',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Alternative Task Generation > should suggest appropriate alternatives for mining failures\n Task Performance Analysis for mine: {\n  taskId: 'test-task-6',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No suitable blocks found',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect stuck crafting pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'craft-task-stuck',\n  totalAttempts: 4,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x wooden_pickaxe',\n    type: undefined\n  },\n  historyLength: 4\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Statistics > should calculate success rates after multiple attempts\n Task Performance Analysis for explore: {\n  taskId: 'test-task-8',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect mining location pattern and suggest exploration\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-stuck-1',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No blocks were successfully mined',\n    type: 'mining'\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Statistics > should calculate success rates after multiple attempts\n Task Performance Analysis for explore: {\n  taskId: 'test-task-8',\n  totalAttempts: 2,\n  successfulAttempts: 1,\n  failureRate: '50.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Obstacle encountered', type: undefined },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Statistics > should calculate success rates after multiple attempts\n Task Performance Analysis for explore: {\n  taskId: 'test-task-8',\n  totalAttempts: 3,\n  successfulAttempts: 2,\n  failureRate: '33.3%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should recommend abandoning tasks with high failure rates\n Task Performance Analysis for craft: {\n  taskId: 'test-task-9',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect mining location pattern and suggest exploration\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-stuck-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No blocks were successfully mined',\n    type: 'mining'\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should recommend abandoning tasks with high failure rates\n Task Performance Analysis for craft: {\n  taskId: 'test-task-9',\n  totalAttempts: 2,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should recommend abandoning tasks with high failure rates\n Task Performance Analysis for craft: {\n  taskId: 'test-task-9',\n  totalAttempts: 3,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect mining location pattern and suggest exploration\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-stuck-3',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No blocks were successfully mined',\n    type: 'mining'\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should recommend abandoning tasks with high failure rates\n Task Performance Analysis for craft: {\n  taskId: 'test-task-9',\n  totalAttempts: 4,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 3,\n  isStuck: true,\n  currentResult: { success: false, error: 'Missing materials', type: undefined },\n  historyLength: 4\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect mining location pattern and suggest exploration\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-stuck-4',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No blocks were successfully mined',\n    type: 'mining'\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should not recommend abandoning tasks with good success rates\n Task Performance Analysis for move: {\n  taskId: 'test-task-10',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should not recommend abandoning tasks with good success rates\n Task Performance Analysis for move: {\n  taskId: 'test-task-10',\n  totalAttempts: 2,\n  successfulAttempts: 2,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Stuck Pattern Detection with Minecraft Context > should detect mining location pattern and suggest exploration\n Task Performance Analysis for mine: {\n  taskId: 'mine-task-stuck-4',\n  totalAttempts: 2,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'No blocks were successfully mined',\n    type: 'mining'\n  },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should not recommend abandoning tasks with good success rates\n Task Performance Analysis for move: {\n  taskId: 'test-task-10',\n  totalAttempts: 3,\n  successfulAttempts: 2,\n  failureRate: '33.3%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Obstacle', type: undefined },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Task Abandonment Logic > should not recommend abandoning tasks with good success rates\n Task Performance Analysis for move: {\n  taskId: 'test-task-10',\n  totalAttempts: 4,\n  successfulAttempts: 3,\n  failureRate: '25.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 4\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Cognitive Insights > should generate insights for task types\n Task Performance Analysis for mine: {\n  taskId: 'test-task-11',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should analyze crafting performance based on material availability\n Task Performance Analysis for craft: {\n  taskId: 'craft-analysis-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Cognitive Insights > should generate insights for task types\n Task Performance Analysis for mine: {\n  taskId: 'test-task-11',\n  totalAttempts: 2,\n  successfulAttempts: 2,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should analyze crafting performance based on material availability\n Task Performance Analysis for craft: {\n  taskId: 'craft-analysis-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Insufficient materials', type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Cognitive Insights > should generate insights for task types\n Task Performance Analysis for mine: {\n  taskId: 'test-task-11',\n  totalAttempts: 3,\n  successfulAttempts: 2,\n  failureRate: '33.3%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'No blocks found', type: undefined },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should analyze crafting performance based on material availability\n Task Performance Analysis for craft: {\n  taskId: 'craft-analysis-3',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 2,\n  successfulAttempts: 1,\n  failureRate: '50.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 2\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should provide cognitive insights based on minecraft task patterns\n Task Performance Analysis for mine: {\n  taskId: 'mine-insight-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 3,\n  successfulAttempts: 2,\n  failureRate: '33.3%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 3\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should provide cognitive insights based on minecraft task patterns\n Task Performance Analysis for mine: {\n  taskId: 'mine-insight-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'No block found', type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 4,\n  successfulAttempts: 2,\n  failureRate: '50.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 4\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should provide cognitive insights based on minecraft task patterns\n Task Performance Analysis for mine: {\n  taskId: 'mine-insight-3',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 5,\n  successfulAttempts: 3,\n  failureRate: '40.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 5\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should provide cognitive insights based on minecraft task patterns\n Task Performance Analysis for mine: {\n  taskId: 'mine-insight-4',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 6,\n  successfulAttempts: 3,\n  failureRate: '50.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 6\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 7,\n  successfulAttempts: 4,\n  failureRate: '42.9%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 7\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Task Performance Analysis with Minecraft Data > should provide cognitive insights based on minecraft task patterns\n Task Performance Analysis for mine: {\n  taskId: 'mine-insight-5',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'No block found', type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 8,\n  successfulAttempts: 4,\n  failureRate: '50.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 8\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 9,\n  successfulAttempts: 5,\n  failureRate: '44.4%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 9\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 10,\n  successfulAttempts: 5,\n  failureRate: '50.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 10\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 10,\n  successfulAttempts: 5,\n  failureRate: '50.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 10\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 10,\n  successfulAttempts: 5,\n  failureRate: '50.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 10\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 10,\n  successfulAttempts: 5,\n  failureRate: '50.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 10\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 10,\n  successfulAttempts: 5,\n  failureRate: '50.0%',\n  recentFailures: 2,\n  isStuck: false,\n  currentResult: { success: false, error: 'Error', type: undefined },\n  historyLength: 10\n}\n\nstdout | src/__tests__/cognitive-integration.test.ts > CognitiveIntegration > Memory Management > should limit history size to prevent memory leaks\n Task Performance Analysis for explore: {\n  taskId: 'test-task-12',\n  totalAttempts: 10,\n  successfulAttempts: 5,\n  failureRate: '50.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 10\n}\n\nstdout | src/__tests__/cognitive-minecraft-integration.test.ts > Cognitive-Minecraft Integration Tests > Memory Integration with Minecraft Context > should store minecraft task results in memory for future reference\n Task Performance Analysis for craft: {\n  taskId: 'memory-test-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\n ✓ src/__tests__/cognitive-integration.test.ts (14 tests) 134ms\n ✓ src/__tests__/cognitive-minecraft-integration.test.ts (9 tests) 100ms\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n✅ 3. Find suitable option\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Complete Task Execution Flow > should execute successful crafting workflow with cognitive feedback\n Task Performance Analysis for craft: {\n  taskId: 'e2e-craft-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n✅ 4. Execute MCP option\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Complete Task Execution Flow > should handle failed crafting with adaptive cognitive response\n Task Performance Analysis for craft: {\n  taskId: 'e2e-craft-fail-1',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Insufficient materials', type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Complete Task Execution Flow > should execute mining workflow with position-based feedback\n Task Performance Analysis for mine: {\n  taskId: 'e2e-mine-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: 'mining' },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should detect stuck pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'stuck-task-1',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x diamond_pickaxe',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should detect stuck pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'stuck-task-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x diamond_pickaxe',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should detect stuck pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'stuck-task-3',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x diamond_pickaxe',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should detect stuck pattern and suggest task abandonment\n Task Performance Analysis for craft: {\n  taskId: 'stuck-task-4',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: {\n    success: false,\n    error: 'Insufficient materials to craft 1x diamond_pickaxe',\n    type: undefined\n  },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should provide performance-based recommendations\n Task Performance Analysis for craft: {\n  taskId: 'perf-task-1',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should provide performance-based recommendations\n Task Performance Analysis for craft: {\n  taskId: 'perf-task-2',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Insufficient materials', type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should provide performance-based recommendations\n Task Performance Analysis for craft: {\n  taskId: 'perf-task-3',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should provide performance-based recommendations\n Task Performance Analysis for craft: {\n  taskId: 'perf-task-4',\n  totalAttempts: 1,\n  successfulAttempts: 0,\n  failureRate: '100.0%',\n  recentFailures: 1,\n  isStuck: false,\n  currentResult: { success: false, error: 'Insufficient materials', type: undefined },\n  historyLength: 1\n}\n\nstdout | src/__tests__/end-to-end-integration.test.ts > End-to-End Integration Tests > Cognitive Adaptation Scenarios > should provide performance-based recommendations\n Task Performance Analysis for craft: {\n  taskId: 'perf-task-5',\n  totalAttempts: 1,\n  successfulAttempts: 1,\n  failureRate: '0.0%',\n  recentFailures: 0,\n  isStuck: false,\n  currentResult: { success: true, error: undefined, type: undefined },\n  historyLength: 1\n}\n\n ✓ src/__tests__/end-to-end-integration.test.ts (7 tests) 71ms\n ✓ src/__tests__/planning-integration.test.ts (13 tests) 20ms\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n✅ 5. Update task progress\n\n ✓ src/behavior-trees/__tests__/skill-definitions.test.ts (26 tests) 14ms\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Real-Time Adaptation > executes plan with safety reflex override\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Real-Time Adaptation > executes plan with repair when action fails\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Real-Time Adaptation > executes plan with repair when action fails\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Real-Time Adaptation > executes plan with repair when action fails\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Real-Time Adaptation > handles execution errors gracefully\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Metrics and Monitoring > tracks comprehensive execution metrics\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Metrics and Monitoring > tracks comprehensive execution metrics\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Metrics and Monitoring > tracks plan repair vs replan ratio\n🌍 Context building: Using default values - no real world analysis available\n\nstdout | src/__tests__/enhanced-reactive-executor.test.ts > Enhanced Reactive Executor > Metrics and Monitoring > tracks plan repair vs replan ratio\n🌍 Context building: Using default values - no real world analysis available\n\n ✓ src/__tests__/enhanced-reactive-executor.test.ts (17 tests) 12ms\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n📊 System Status:\n  - Active tasks: 1\n  - MCP options: 2\n\nstdout | src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\n  - Bot connected: undefined\n  - MCP integration available: true\n\n ❯ src/__tests__/real-autonomous-executor.test.ts (2 tests | 1 failed) 519ms\n   ✓ Real Autonomous Executor Tests > should trace through the autonomous task executor logic 2ms\n   × Real Autonomous Executor Tests > should identify why MCP options are not being executed 515ms\n     → expected undefined to be true // Object.is equality\n ❯ src/__tests__/integrated-planning-system.test.ts (13 tests | 3 failed) 122ms\n   ✓ Integrated Planning System > End-to-End Planning Pipeline > should execute complete planning pipeline for survival scenario 41ms\n   ✓ Integrated Planning System > End-to-End Planning Pipeline > should handle creative task routing to appropriate planner 6ms\n   × Integrated Planning System > End-to-End Planning Pipeline > should handle emergency scenarios with fast reactive planning 11ms\n     → Planning pipeline failed: TypeError: state.getHealth is not a function\n   ✓ Integrated Planning System > End-to-End Planning Pipeline > should demonstrate collaborative planning approach 4ms\n   ✓ Integrated Planning System > Planning Approach Integration > should demonstrate HRM and HTN working together 6ms\n   × Integrated Planning System > Planning Approach Integration > should adapt planning strategy based on context 25ms\n     → Planning pipeline failed: TypeError: state.getHealth is not a function\n   ✓ Integrated Planning System > Performance Metrics and Monitoring > should track performance metrics across planning sessions 16ms\n   ✓ Integrated Planning System > Performance Metrics and Monitoring > should maintain planning history 6ms\n   ✓ Integrated Planning System > Event System Integration > should emit planning events during pipeline execution 2ms\n   ✓ Integrated Planning System > Event System Integration > should handle planning errors gracefully 3ms\n   ✓ Integrated Planning System > Plan Execution Integration > should prepare plans for execution 2ms\n   ✓ Integration with Planning Documentation > should align with planning module architecture 0ms\n   × Integration with Planning Documentation > should support the documented performance targets 1ms\n     → Planning pipeline failed: TypeError: state.getHealth is not a function\n ✓ src/__tests__/minecraft-http-integration.test.ts (10 tests) 13ms\n ✓ src/__tests__/autonomous-task-execution.test.ts (13 tests) 10ms\n ✓ src/__tests__/enhanced-goal-formulation.test.ts (17 tests) 8ms\n ❯ src/__tests__/iteration_seven.spec.ts (5 tests | 5 failed) 4ms\n   × Iteration Seven - Requirement and Progress Logic > resolves gathering requirement with quantity from title 2ms\n     → (0 , resolveRequirement) is not a function\n   × Iteration Seven - Requirement and Progress Logic > progress for collect is proportional to items matching patterns 0ms\n     → (0 , resolveRequirement) is not a function\n   × Iteration Seven - Requirement and Progress Logic > crafting requirement returns complete when output present 0ms\n     → (0 , resolveRequirement) is not a function\n   × Iteration Seven - Requirement and Progress Logic > crafting requirement estimates progress via proxy materials 0ms\n     → (0 , resolveRequirement) is not a function\n   × Iteration Seven - Requirement and Progress Logic > requirement snapshot reflects have/needed 0ms\n     → (0 , resolveRequirement) is not a function\n ❯ src/__tests__/server-autonomous-startup.test.ts (7 tests | 1 failed) 18ms\n   ✓ Server Autonomous Startup Tests > Server Startup and Autonomous Execution > should trigger autonomous task execution on startup 7ms\n   ✓ Server Autonomous Startup Tests > Server Startup and Autonomous Execution > should schedule regular autonomous task execution 0ms\n   ✓ Server Autonomous Startup Tests > Server Startup and Autonomous Execution > should handle startup when minecraft interface is not available 0ms\n   × Server Autonomous Startup Tests > Autonomous Task Types and Variety > should generate a variety of autonomous tasks over time 7ms\n     → expected 30002 to be 30000 // Object.is equality\n   ✓ Server Autonomous Startup Tests > Autonomous Task Types and Variety > should prioritize different task types based on context 1ms\n   ✓ Server Autonomous Startup Tests > Task Execution Monitoring > should monitor task execution success and failure rates 0ms\n   ✓ Server Autonomous Startup Tests > Task Execution Monitoring > should adapt task selection based on execution history 0ms\n ✓ src/__tests__/task-validation-integration.test.ts (11 tests) 10ms\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nAction result: { ok: false, error: 'mock_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nRetrying test.option (attempt 1/2) after 1000ms\n\n ✓ src/__tests__/task-validation.test.ts (28 tests) 4ms\n ✓ src/__tests__/planning-validation.test.ts (8 tests) 56ms\n ✓ src/__tests__/planning-system-validation.test.ts (4 tests) 6ms\nstdout | src/__tests__/mcp-execution-debug.test.ts > MCP Execution Debug Tests > MCP Option Finding Logic > should find suitable MCP options for gathering tasks\n✅ Found suitable MCP option: {\n  id: 'gather_wood@1@1.0.0',\n  name: 'gather_wood@1',\n  status: 'active',\n  permissions: [ 'dig', 'sense' ]\n}\n\nstdout | src/__tests__/mcp-execution-debug.test.ts > MCP Execution Debug Tests > MCP Option Finding Logic > should execute MCP option when found\n✅ MCP option executed successfully: { success: true, data: { itemsCollected: 1 } }\n\nstdout | src/__tests__/mcp-execution-debug.test.ts > MCP Execution Debug Tests > Task Type to MCP Option Mapping > should map gathering tasks to correct MCP options\n✅ gathering -> gather_wood@1\n✅ gather -> gather_wood@1\n✅ mine -> gather_wood@1\n✅ mining -> gather_wood@1\n\nstdout | src/__tests__/mcp-execution-debug.test.ts > MCP Execution Debug Tests > Autonomous Task Executor Flow > should complete the full flow from task to MCP execution\n✅ Full autonomous task executor flow completed:\n  - Task found: Gather Wood\n  - MCP option found: gather_wood@1\n  - MCP execution result: { success: true, data: { itemsCollected: 1 } }\n\n ✓ src/__tests__/mcp-execution-debug.test.ts (4 tests) 5ms\n ❯ src/__tests__/m2-planning-integration.test.ts (4 tests | 3 failed) 11ms\n   × M2 Planning Integration > Goal Generation Flow > should generate goals from homeostasis state 5ms\n     → goalManager.createFromNeeds is not a function\n   ✓ M2 Planning Integration > Goal Generation Flow > should handle default homeostasis gracefully 0ms\n   × M2 Planning Integration > Goal Generation Flow > should manage goal queue and selection 0ms\n     → goalManager.createFromNeeds is not a function\n   × M2 Planning Integration > Goal Generation Flow > should handle edge cases gracefully 3ms\n     → expected [Function] to not throw an error but 'TypeError: goalManager.createFromNeed…' was thrown\n ✓ src/behavior-trees/__tests__/debug.test.ts (1 test) 2ms\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nAction result: { ok: false, error: 'mock_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nRetrying test_action (attempt 1/1) after 1000ms\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nAction result: { ok: false, error: 'mock_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nRetrying test.option (attempt 2/2) after 2000ms\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nAction result: { ok: false, error: 'mock_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nRetrying test_action (attempt 1/1) after 1000ms\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should handle tool execution failures\nAction result: { ok: false, error: 'mock_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should emit events during execution\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/test.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should emit events during execution\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should emit events during execution\nLoaded BT definition for test.option: {\n  \"id\": \"test.option\",\n  \"name\": \"test.option\",\n  \"description\": \"Test behavior tree for option testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"test_action\",\n        \"action\": \"test_action\",\n        \"description\": \"Test action node\",\n        \"args\": {\n          \"param\": \"value\"\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"option\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should emit events during execution\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > runOption > should emit events during execution\nAction result: {\n  ok: true,\n  data: {\n    result: 'mock_success',\n    tool: 'minecraft.test_action',\n    args: { param: 'value' }\n  },\n  environmentDeltas: {}\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > cancel > should cancel an active run\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/test.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > cancel > should cancel an active run\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > cancel > should cancel an active run\nLoaded BT definition for test.option: {\n  \"id\": \"test.option\",\n  \"name\": \"test.option\",\n  \"description\": \"Test behavior tree for option testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"test_action\",\n        \"action\": \"test_action\",\n        \"description\": \"Test action node\",\n        \"args\": {\n          \"param\": \"value\"\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"option\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getActiveRuns > should return active runs\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/test.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getActiveRuns > should return active runs\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getActiveRuns > should return active runs\nLoaded BT definition for test.option: {\n  \"id\": \"test.option\",\n  \"name\": \"test.option\",\n  \"description\": \"Test behavior tree for option testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"test_action\",\n        \"action\": \"test_action\",\n        \"description\": \"Test action node\",\n        \"args\": {\n          \"param\": \"value\"\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"option\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getActiveRuns > should return active runs\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getActiveRuns > should return active runs\nAction result: {\n  ok: true,\n  data: {\n    result: 'mock_success',\n    tool: 'minecraft.test_action',\n    args: { param: 'value' }\n  },\n  environmentDeltas: {}\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getRunTelemetry > should return telemetry for a completed run\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/test.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getRunTelemetry > should return telemetry for a completed run\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getRunTelemetry > should return telemetry for a completed run\nLoaded BT definition for test.option: {\n  \"id\": \"test.option\",\n  \"name\": \"test.option\",\n  \"description\": \"Test behavior tree for option testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"test_action\",\n        \"action\": \"test_action\",\n        \"description\": \"Test action node\",\n        \"args\": {\n          \"param\": \"value\"\n        }\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"option\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getRunTelemetry > should return telemetry for a completed run\nExecuting action: test_action with args: { param: 'value' }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > getRunTelemetry > should return telemetry for a completed run\nAction result: {\n  ok: true,\n  data: {\n    result: 'mock_success',\n    tool: 'minecraft.test_action',\n    args: { param: 'value' }\n  },\n  environmentDeltas: {}\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/slow.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nLoaded BT definition for slow.option: {\n  \"id\": \"slow.option\",\n  \"name\": \"slow.option\",\n  \"description\": \"Slow behavior tree for timeout testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"slow_action\",\n        \"action\": \"slow_action\",\n        \"description\": \"Slow action that takes time to complete\",\n        \"args\": {},\n        \"timeout\": 3000\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"slow\",\n      \"timeout\"\n    ],\n    \"timeout\": 3000,\n    \"retries\": 1,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nExecuting action: slow_action with args: {}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nAction result: { ok: true, data: { result: 'slow_success' }, environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nLoading BT definition from: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/behavior-trees/definitions/retry.option.json\nCurrent working directory: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nFile exists check: YES\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nLoaded BT definition for retry.option: {\n  \"id\": \"retry.option\",\n  \"name\": \"retry.option\",\n  \"description\": \"Retry behavior tree for retry mechanism testing\",\n  \"root\": {\n    \"type\": \"sequence\",\n    \"children\": [\n      {\n        \"type\": \"action\",\n        \"name\": \"retry_action\",\n        \"action\": \"retry_action\",\n        \"description\": \"Action that may fail and need retrying\",\n        \"args\": {},\n        \"retries\": 2,\n        \"retryDelay\": 100\n      }\n    ]\n  },\n  \"metadata\": {\n    \"version\": \"1.0.0\",\n    \"author\": \"@darianrosebrook\",\n    \"created\": \"2025-01-01\",\n    \"tags\": [\n      \"test\",\n      \"retry\",\n      \"failure\"\n    ],\n    \"timeout\": 5000,\n    \"retries\": 2,\n    \"priority\": \"low\",\n    \"interruptible\": true\n  }\n}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nExecuting action: retry_action with args: {}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nAction result: { ok: false, error: 'temporary_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nRetrying retry_action (attempt 1/2) after 1000ms\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nExecuting action: retry_action with args: {}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nAction result: { ok: false, error: 'temporary_failure', environmentDeltas: {} }\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nRetrying retry_action (attempt 2/2) after 2000ms\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nExecuting action: retry_action with args: {}\n\nstdout | src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect retry options\nAction result: {\n  ok: true,\n  data: { result: 'eventual_success' },\n  environmentDeltas: {}\n}\n\n ❯ src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts (11 tests | 1 failed) 12153ms\n   ✓ BehaviorTreeRunner > runOption > should execute an option successfully 4ms\n   ✓ BehaviorTreeRunner > runOption > should handle tool execution failures  6031ms\n   ✓ BehaviorTreeRunner > runOption > should emit events during execution 1ms\n   ✓ BehaviorTreeRunner > cancel > should cancel an active run  3003ms\n   ✓ BehaviorTreeRunner > cancel > should return false for non-existent run 0ms\n   ✓ BehaviorTreeRunner > getActiveRuns > should return empty array when no runs are active 0ms\n   ✓ BehaviorTreeRunner > getActiveRuns > should return active runs 1ms\n   ✓ BehaviorTreeRunner > getRunTelemetry > should return telemetry for a completed run 1ms\n   ✓ BehaviorTreeRunner > getRunTelemetry > should return null for non-existent run 0ms\n   × BehaviorTreeRunner > execution options > should respect timeout options 106ms\n     → expected true to be false // Object.is equality\n   ✓ BehaviorTreeRunner > execution options > should respect retry options  3004ms\n\n Test Files  12 failed | 15 passed (27)\n      Tests  15 failed | 220 passed (235)\n   Start at  18:02:06\n   Duration  12.61s (transform 1.36s, setup 0ms, collect 2.56s, tests 13.30s, environment 3ms, prepare 3.86s)\n\n ELIFECYCLE  Test failed. See above for more details.\n\n6:02:07 PM [vite] (ssr) warning: Duplicate key \"mcpRegistry\" in object literal\n383 |          dynamicFlow: mockDynamicFlow,\n384 |          // Ensure MCP registry is properly set for confidence calculation\n385 |          mcpRegistry: mockRegistry,\n    |          ^\n386 |        };\n387 |  \n\n  Plugin: vite:esbuild\n  File: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/__tests__/mcp-capabilities-integration.test.ts\nstderr | src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > End-to-End Planning Pipeline > should handle emergency scenarios with fast reactive planning\nPlanning pipeline error details: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:194:22\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nError stack: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:194:22\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > Planning Approach Integration > should adapt planning strategy based on context\nPlanning pipeline error details: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:294:24\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nError stack: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:294:24\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/__tests__/integrated-planning-system.test.ts > Integration with Planning Documentation > should support the documented performance targets\nPlanning pipeline error details: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:495:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nError stack: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:495:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/__tests__/minecraft-http-integration.test.ts > Minecraft HTTP Integration Tests > Error Handling > should handle network errors\nError executing task in Minecraft: Error: Network error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:335:39\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/__tests__/minecraft-http-integration.test.ts > Minecraft HTTP Integration Tests > Error Handling > should handle invalid JSON responses\nError executing task in Minecraft: Error: Invalid JSON\n    at Object.json (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:349:36)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:45:30\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at executeTaskInMinecraft (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:33:16)\n\nstderr | src/__tests__/minecraft-http-integration.test.ts > Minecraft HTTP Integration Tests > Error Handling > should handle unknown task types\nError executing task in Minecraft: Error: Unknown task type: unknown_task\n    at executeTaskInMinecraft (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:157:15)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:368:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\n\n⎯⎯⎯⎯⎯⎯ Failed Suites 5 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/modular-server.test.ts [ src/__tests__/modular-server.test.ts ]\nError: Cannot find module './modules/server-config' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/modular-server.test.ts'\n ❯ src/__tests__/modular-server.test.ts:10:1\n      8| \n      9| import { describe, it, expect, beforeEach, afterEach } from 'vitest';\n     10| import { ServerConfiguration } from './modules/server-config';\n       | ^\n     11| import { MCPIntegration } from './modules/mcp-integration';\n     12| import {\n\nCaused by: Error: Failed to load url ./modules/server-config (resolved id: ./modules/server-config) in /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/modular-server.test.ts. Does the file exist?\n ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.3_@types+node@20.19.11_jiti@1.21.7_tsx@4.20.5_yaml@2.8.1/node_modules/vite/dist/node/chunks/dep-Bj7gA1-0.js:26300:33\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/20]⎯\n\n FAIL  src/hierarchical-planner/__tests__/hrm-integration.test.ts [ src/hierarchical-planner/__tests__/hrm-integration.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/hierarchical-planner/index.js\n ❯ Object.<anonymous> ../core/src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/20]⎯\n\n FAIL  src/skill-integration/__tests__/basic-integration.test.ts [ src/skill-integration/__tests__/basic-integration.test.ts ]\n FAIL  src/skill-integration/__tests__/skill-integration.test.ts [ src/skill-integration/__tests__/skill-integration.test.ts ]\nError: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n ❯ ../memory/src/memory-system.ts:10:1\n\nCaused by: Error: Failed to load url ./vector-database (resolved id: ./vector-database) in /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/index.js. Does the file exist?\n ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.3_@types+node@20.19.11_jiti@1.21.7_tsx@4.20.5_yaml@2.8.1/node_modules/vite/dist/node/chunks/dep-Bj7gA1-0.js:26300:33\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/20]⎯\n\n FAIL  src/skill-integration/__tests__/mcp-capabilities-integration.test.ts [ src/skill-integration/__tests__/mcp-capabilities-integration.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/mcp-capabilities-adapter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/hybrid-skill-planner.js\n ❯ Object.<anonymous> ../core/src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/20]⎯\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 15 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > End-to-End Planning Pipeline > should handle emergency scenarios with fast reactive planning\nError: Planning pipeline failed: TypeError: state.getHealth is not a function\n ❯ IntegratedPlanningCoordinator.planAndExecute src/integrated-planning-coordinator.ts:259:13\n    257|       );\n    258|       this.emit('planningError', error);\n    259|       throw new Error(`Planning pipeline failed: ${error}`);\n       |             ^\n    260|     }\n    261|   }\n ❯ src/__tests__/integrated-planning-system.test.ts:194:22\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/20]⎯\n\n FAIL  src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > Planning Approach Integration > should adapt planning strategy based on context\nError: Planning pipeline failed: TypeError: state.getHealth is not a function\n ❯ IntegratedPlanningCoordinator.planAndExecute src/integrated-planning-coordinator.ts:259:13\n    257|       );\n    258|       this.emit('planningError', error);\n    259|       throw new Error(`Planning pipeline failed: ${error}`);\n       |             ^\n    260|     }\n    261|   }\n ❯ src/__tests__/integrated-planning-system.test.ts:294:24\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/20]⎯\n\n FAIL  src/__tests__/integrated-planning-system.test.ts > Integration with Planning Documentation > should support the documented performance targets\nError: Planning pipeline failed: TypeError: state.getHealth is not a function\n ❯ IntegratedPlanningCoordinator.planAndExecute src/integrated-planning-coordinator.ts:259:13\n    257|       );\n    258|       this.emit('planningError', error);\n    259|       throw new Error(`Planning pipeline failed: ${error}`);\n       |             ^\n    260|     }\n    261|   }\n ❯ src/__tests__/integrated-planning-system.test.ts:495:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > resolves gathering requirement with quantity from title\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:18:17\n     16| \n     17|   it('resolves gathering requirement with quantity from title', () => {\n     18|     const req = resolveRequirement({ type: 'gathering', title: 'Gather…\n       |                 ^\n     19|     expect(req).toBeTruthy();\n     20|     expect(req && req.kind).toBe('collect');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > progress for collect is proportional to items matching patterns\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:25:17\n     23| \n     24|   it('progress for collect is proportional to items matching patterns'…\n     25|     const req = resolveRequirement({ type: 'gathering', title: 'Gather…\n       |                 ^\n     26|     const invSnap = inv(['oak_log', 1], ['birch_log', 1]);\n     27|     const p = req ? computeProgressFromInventory(invSnap, req) : 0;\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > crafting requirement returns complete when output present\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:32:17\n     30| \n     31|   it('crafting requirement returns complete when output present', () =…\n     32|     const req = resolveRequirement({ type: 'crafting', title: 'Craft W…\n       |                 ^\n     33|     const invSnap = inv(['wooden_pickaxe', 1]);\n     34|     const p = req ? computeProgressFromInventory(invSnap, req) : 0;\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > crafting requirement estimates progress via proxy materials\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:39:17\n     37| \n     38|   it('crafting requirement estimates progress via proxy materials', ()…\n     39|     const req = resolveRequirement({ type: 'crafting', title: 'Craft W…\n       |                 ^\n     40|     const invSnap = inv(['oak_log', 2]);\n     41|     const p = req ? computeProgressFromInventory(invSnap, req) : 0;\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > requirement snapshot reflects have/needed\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:48:17\n     46| \n     47|   it('requirement snapshot reflects have/needed', () => {\n     48|     const req = resolveRequirement({ type: 'gathering', title: 'Gather…\n       |                 ^\n     49|     const snap = req ? computeRequirementSnapshot(inv(['oak_log', 2]),…\n     50|     expect(snap).toBeTruthy();\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/20]⎯\n\n FAIL  src/__tests__/m2-planning-integration.test.ts > M2 Planning Integration > Goal Generation Flow > should generate goals from homeostasis state\nTypeError: goalManager.createFromNeeds is not a function\n ❯ src/__tests__/m2-planning-integration.test.ts:61:32\n     59| \n     60|       // Create goal from needs\n     61|       const goal = goalManager.createFromNeeds(needs);\n       |                                ^\n     62|       expect(goal).toBeDefined();\n     63|       expect(goal?.type).toBe(GoalType.SURVIVAL);\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/20]⎯\n\n FAIL  src/__tests__/m2-planning-integration.test.ts > M2 Planning Integration > Goal Generation Flow > should manage goal queue and selection\nTypeError: goalManager.createFromNeeds is not a function\n ❯ src/__tests__/m2-planning-integration.test.ts:90:33\n     88| \n     89|       // Create multiple goals\n     90|       const goal1 = goalManager.createFromNeeds(needs);\n       |                                 ^\n     91|       const goal2 = goalManager.createFromNeeds(needs);\n     92| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/20]⎯\n\n FAIL  src/__tests__/m2-planning-integration.test.ts > M2 Planning Integration > Goal Generation Flow > should handle edge cases gracefully\nAssertionError: expected [Function] to not throw an error but 'TypeError: goalManager.createFromNeed…' was thrown\n\n- Expected: \nundefined\n\n+ Received: \n\"TypeError: goalManager.createFromNeeds is not a function\"\n\n ❯ src/__tests__/m2-planning-integration.test.ts:107:57\n    105|       // Test null/undefined guards\n    106|       expect(() => generateNeeds(undefined)).not.toThrow();\n    107|       expect(() => goalManager.createFromNeeds([])).not.toThrow();\n       |                                                         ^\n    108| \n    109|       // Test empty inputs\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/20]⎯\n\n FAIL  src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\nAssertionError: expected undefined to be true // Object.is equality\n\n- Expected: \ntrue\n\n+ Received: \nundefined\n\n ❯ src/__tests__/real-autonomous-executor.test.ts:199:44\n    197|     expect(activeTasks.length).toBeGreaterThan(0);\n    198|     expect(mcpOptions.length).toBeGreaterThan(0);\n    199|     expect(await mockCheckBotConnection()).toBe(true);\n       |                                            ^\n    200|     expect(mcpIntegration).toBeDefined();\n    201| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/20]⎯\n\n FAIL  src/__tests__/server-autonomous-startup.test.ts > Server Autonomous Startup Tests > Autonomous Task Types and Variety > should generate a variety of autonomous tasks over time\nAssertionError: expected 30002 to be 30000 // Object.is equality\n\n- Expected\n+ Received\n\n- 30000\n+ 30002\n\n ❯ src/__tests__/server-autonomous-startup.test.ts:214:26\n    212|         const timeDiff =\n    213|           generatedTasks[i].createdAt - generatedTasks[i - 1].createdA…\n    214|         expect(timeDiff).toBe(30000); // 30 seconds\n       |                          ^\n    215|       }\n    216|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/20]⎯\n\n FAIL  src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nAssertionError: expected true to be false // Object.is equality\n\n- Expected\n+ Received\n\n- false\n+ true\n\n ❯ src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts:175:30\n    173|       );\n    174| \n    175|       expect(result.success).toBe(false);\n       |                              ^\n    176|       expect(result.status).toBe(BTNodeStatus.FAILURE);\n    177|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/20]⎯\n\n FAIL  src/skill-integration/__tests__/skill-composer-adapter.test.ts > SkillComposerAdapter > Skill Composition > should handle successful skill composition\nAssertionError: expected 5 to be 'moderate' // Object.is equality\n\n- Expected: \n\"moderate\"\n\n+ Received: \n5\n\n ❯ src/skill-integration/__tests__/skill-composer-adapter.test.ts:248:33\n    246|       expect(result.composedSkill!.name).toBe('Composed: test goal');\n    247|       expect(result.estimatedSuccess).toBe(0.8);\n    248|       expect(result.complexity).toBe('moderate');\n       |                                 ^\n    249|     });\n    250| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/20]⎯\n\n",
          "error": "6:02:07 PM [vite] (ssr) warning: Duplicate key \"mcpRegistry\" in object literal\n383 |          dynamicFlow: mockDynamicFlow,\n384 |          // Ensure MCP registry is properly set for confidence calculation\n385 |          mcpRegistry: mockRegistry,\n    |          ^\n386 |        };\n387 |  \n\n  Plugin: vite:esbuild\n  File: /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/__tests__/mcp-capabilities-integration.test.ts\nstderr | src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > End-to-End Planning Pipeline > should handle emergency scenarios with fast reactive planning\nPlanning pipeline error details: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:194:22\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nError stack: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:194:22\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > Planning Approach Integration > should adapt planning strategy based on context\nPlanning pipeline error details: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:294:24\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nError stack: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:294:24\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/__tests__/integrated-planning-system.test.ts > Integration with Planning Documentation > should support the documented performance targets\nPlanning pipeline error details: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:495:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nError stack: TypeError: state.getHealth is not a function\n    at EnhancedGOAPPlanner.getStateKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:703:21)\n    at EnhancedGOAPPlanner.getCacheKey (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:707:44)\n    at EnhancedGOAPPlanner.planTo (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/reactive-executor/enhanced-goap-planner.ts:191:27)\n    at IntegratedPlanningCoordinator.generateGOAPPlan (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:579:45)\n    at IntegratedPlanningCoordinator.performPlanGeneration (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:504:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at IntegratedPlanningCoordinator.planAndExecute (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/integrated-planning-coordinator.ts:201:30)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/integrated-planning-system.test.ts:495:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/__tests__/minecraft-http-integration.test.ts > Minecraft HTTP Integration Tests > Error Handling > should handle network errors\nError executing task in Minecraft: Error: Network error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:335:39\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/__tests__/minecraft-http-integration.test.ts > Minecraft HTTP Integration Tests > Error Handling > should handle invalid JSON responses\nError executing task in Minecraft: Error: Invalid JSON\n    at Object.json (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:349:36)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:45:30\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at executeTaskInMinecraft (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:33:16)\n\nstderr | src/__tests__/minecraft-http-integration.test.ts > Minecraft HTTP Integration Tests > Error Handling > should handle unknown task types\nError executing task in Minecraft: Error: Unknown task type: unknown_task\n    at executeTaskInMinecraft (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:157:15)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/minecraft-http-integration.test.ts:368:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\n\n⎯⎯⎯⎯⎯⎯ Failed Suites 5 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/modular-server.test.ts [ src/__tests__/modular-server.test.ts ]\nError: Cannot find module './modules/server-config' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/modular-server.test.ts'\n ❯ src/__tests__/modular-server.test.ts:10:1\n      8| \n      9| import { describe, it, expect, beforeEach, afterEach } from 'vitest';\n     10| import { ServerConfiguration } from './modules/server-config';\n       | ^\n     11| import { MCPIntegration } from './modules/mcp-integration';\n     12| import {\n\nCaused by: Error: Failed to load url ./modules/server-config (resolved id: ./modules/server-config) in /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/__tests__/modular-server.test.ts. Does the file exist?\n ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.3_@types+node@20.19.11_jiti@1.21.7_tsx@4.20.5_yaml@2.8.1/node_modules/vite/dist/node/chunks/dep-Bj7gA1-0.js:26300:33\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/20]⎯\n\n FAIL  src/hierarchical-planner/__tests__/hrm-integration.test.ts [ src/hierarchical-planner/__tests__/hrm-integration.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/hierarchical-planner/index.js\n ❯ Object.<anonymous> ../core/src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/20]⎯\n\n FAIL  src/skill-integration/__tests__/basic-integration.test.ts [ src/skill-integration/__tests__/basic-integration.test.ts ]\n FAIL  src/skill-integration/__tests__/skill-integration.test.ts [ src/skill-integration/__tests__/skill-integration.test.ts ]\nError: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n ❯ ../memory/src/memory-system.ts:10:1\n\nCaused by: Error: Failed to load url ./vector-database (resolved id: ./vector-database) in /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/index.js. Does the file exist?\n ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.3_@types+node@20.19.11_jiti@1.21.7_tsx@4.20.5_yaml@2.8.1/node_modules/vite/dist/node/chunks/dep-Bj7gA1-0.js:26300:33\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/20]⎯\n\n FAIL  src/skill-integration/__tests__/mcp-capabilities-integration.test.ts [ src/skill-integration/__tests__/mcp-capabilities-integration.test.ts ]\nError: Cannot find module './goal-template-manager'\nRequire stack:\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/arbiter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/core/dist/index.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/mcp-capabilities-adapter.js\n- /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/planning/src/skill-integration/hybrid-skill-planner.js\n ❯ Object.<anonymous> ../core/src/arbiter.ts:20:1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/20]⎯\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 15 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > End-to-End Planning Pipeline > should handle emergency scenarios with fast reactive planning\nError: Planning pipeline failed: TypeError: state.getHealth is not a function\n ❯ IntegratedPlanningCoordinator.planAndExecute src/integrated-planning-coordinator.ts:259:13\n    257|       );\n    258|       this.emit('planningError', error);\n    259|       throw new Error(`Planning pipeline failed: ${error}`);\n       |             ^\n    260|     }\n    261|   }\n ❯ src/__tests__/integrated-planning-system.test.ts:194:22\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/20]⎯\n\n FAIL  src/__tests__/integrated-planning-system.test.ts > Integrated Planning System > Planning Approach Integration > should adapt planning strategy based on context\nError: Planning pipeline failed: TypeError: state.getHealth is not a function\n ❯ IntegratedPlanningCoordinator.planAndExecute src/integrated-planning-coordinator.ts:259:13\n    257|       );\n    258|       this.emit('planningError', error);\n    259|       throw new Error(`Planning pipeline failed: ${error}`);\n       |             ^\n    260|     }\n    261|   }\n ❯ src/__tests__/integrated-planning-system.test.ts:294:24\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/20]⎯\n\n FAIL  src/__tests__/integrated-planning-system.test.ts > Integration with Planning Documentation > should support the documented performance targets\nError: Planning pipeline failed: TypeError: state.getHealth is not a function\n ❯ IntegratedPlanningCoordinator.planAndExecute src/integrated-planning-coordinator.ts:259:13\n    257|       );\n    258|       this.emit('planningError', error);\n    259|       throw new Error(`Planning pipeline failed: ${error}`);\n       |             ^\n    260|     }\n    261|   }\n ❯ src/__tests__/integrated-planning-system.test.ts:495:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > resolves gathering requirement with quantity from title\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:18:17\n     16| \n     17|   it('resolves gathering requirement with quantity from title', () => {\n     18|     const req = resolveRequirement({ type: 'gathering', title: 'Gather…\n       |                 ^\n     19|     expect(req).toBeTruthy();\n     20|     expect(req && req.kind).toBe('collect');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > progress for collect is proportional to items matching patterns\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:25:17\n     23| \n     24|   it('progress for collect is proportional to items matching patterns'…\n     25|     const req = resolveRequirement({ type: 'gathering', title: 'Gather…\n       |                 ^\n     26|     const invSnap = inv(['oak_log', 1], ['birch_log', 1]);\n     27|     const p = req ? computeProgressFromInventory(invSnap, req) : 0;\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > crafting requirement returns complete when output present\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:32:17\n     30| \n     31|   it('crafting requirement returns complete when output present', () =…\n     32|     const req = resolveRequirement({ type: 'crafting', title: 'Craft W…\n       |                 ^\n     33|     const invSnap = inv(['wooden_pickaxe', 1]);\n     34|     const p = req ? computeProgressFromInventory(invSnap, req) : 0;\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > crafting requirement estimates progress via proxy materials\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:39:17\n     37| \n     38|   it('crafting requirement estimates progress via proxy materials', ()…\n     39|     const req = resolveRequirement({ type: 'crafting', title: 'Craft W…\n       |                 ^\n     40|     const invSnap = inv(['oak_log', 2]);\n     41|     const p = req ? computeProgressFromInventory(invSnap, req) : 0;\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/20]⎯\n\n FAIL  src/__tests__/iteration_seven.spec.ts > Iteration Seven - Requirement and Progress Logic > requirement snapshot reflects have/needed\nTypeError: (0 , resolveRequirement) is not a function\n ❯ src/__tests__/iteration_seven.spec.ts:48:17\n     46| \n     47|   it('requirement snapshot reflects have/needed', () => {\n     48|     const req = resolveRequirement({ type: 'gathering', title: 'Gather…\n       |                 ^\n     49|     const snap = req ? computeRequirementSnapshot(inv(['oak_log', 2]),…\n     50|     expect(snap).toBeTruthy();\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/20]⎯\n\n FAIL  src/__tests__/m2-planning-integration.test.ts > M2 Planning Integration > Goal Generation Flow > should generate goals from homeostasis state\nTypeError: goalManager.createFromNeeds is not a function\n ❯ src/__tests__/m2-planning-integration.test.ts:61:32\n     59| \n     60|       // Create goal from needs\n     61|       const goal = goalManager.createFromNeeds(needs);\n       |                                ^\n     62|       expect(goal).toBeDefined();\n     63|       expect(goal?.type).toBe(GoalType.SURVIVAL);\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/20]⎯\n\n FAIL  src/__tests__/m2-planning-integration.test.ts > M2 Planning Integration > Goal Generation Flow > should manage goal queue and selection\nTypeError: goalManager.createFromNeeds is not a function\n ❯ src/__tests__/m2-planning-integration.test.ts:90:33\n     88| \n     89|       // Create multiple goals\n     90|       const goal1 = goalManager.createFromNeeds(needs);\n       |                                 ^\n     91|       const goal2 = goalManager.createFromNeeds(needs);\n     92| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/20]⎯\n\n FAIL  src/__tests__/m2-planning-integration.test.ts > M2 Planning Integration > Goal Generation Flow > should handle edge cases gracefully\nAssertionError: expected [Function] to not throw an error but 'TypeError: goalManager.createFromNeed…' was thrown\n\n- Expected: \nundefined\n\n+ Received: \n\"TypeError: goalManager.createFromNeeds is not a function\"\n\n ❯ src/__tests__/m2-planning-integration.test.ts:107:57\n    105|       // Test null/undefined guards\n    106|       expect(() => generateNeeds(undefined)).not.toThrow();\n    107|       expect(() => goalManager.createFromNeeds([])).not.toThrow();\n       |                                                         ^\n    108| \n    109|       // Test empty inputs\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/20]⎯\n\n FAIL  src/__tests__/real-autonomous-executor.test.ts > Real Autonomous Executor Tests > should identify why MCP options are not being executed\nAssertionError: expected undefined to be true // Object.is equality\n\n- Expected: \ntrue\n\n+ Received: \nundefined\n\n ❯ src/__tests__/real-autonomous-executor.test.ts:199:44\n    197|     expect(activeTasks.length).toBeGreaterThan(0);\n    198|     expect(mcpOptions.length).toBeGreaterThan(0);\n    199|     expect(await mockCheckBotConnection()).toBe(true);\n       |                                            ^\n    200|     expect(mcpIntegration).toBeDefined();\n    201| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/20]⎯\n\n FAIL  src/__tests__/server-autonomous-startup.test.ts > Server Autonomous Startup Tests > Autonomous Task Types and Variety > should generate a variety of autonomous tasks over time\nAssertionError: expected 30002 to be 30000 // Object.is equality\n\n- Expected\n+ Received\n\n- 30000\n+ 30002\n\n ❯ src/__tests__/server-autonomous-startup.test.ts:214:26\n    212|         const timeDiff =\n    213|           generatedTasks[i].createdAt - generatedTasks[i - 1].createdA…\n    214|         expect(timeDiff).toBe(30000); // 30 seconds\n       |                          ^\n    215|       }\n    216|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/20]⎯\n\n FAIL  src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts > BehaviorTreeRunner > execution options > should respect timeout options\nAssertionError: expected true to be false // Object.is equality\n\n- Expected\n+ Received\n\n- false\n+ true\n\n ❯ src/behavior-trees/__tests__/BehaviorTreeRunner.test.ts:175:30\n    173|       );\n    174| \n    175|       expect(result.success).toBe(false);\n       |                              ^\n    176|       expect(result.status).toBe(BTNodeStatus.FAILURE);\n    177|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/20]⎯\n\n FAIL  src/skill-integration/__tests__/skill-composer-adapter.test.ts > SkillComposerAdapter > Skill Composition > should handle successful skill composition\nAssertionError: expected 5 to be 'moderate' // Object.is equality\n\n- Expected: \n\"moderate\"\n\n+ Received: \n5\n\n ❯ src/skill-integration/__tests__/skill-composer-adapter.test.ts:248:33\n    246|       expect(result.composedSkill!.name).toBe('Composed: test goal');\n    247|       expect(result.estimatedSuccess).toBe(0.8);\n    248|       expect(result.complexity).toBe('moderate');\n       |                                 ^\n    249|     });\n    250| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/20]⎯\n\n"
        },
        {
          "checkId": "cognition-unit-tests",
          "success": false,
          "duration": 102410,
          "output": "\n> @conscious-bot/cognition@0.1.0 test /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n> vitest run\n\n\n RUN  v3.2.4 /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition\n\nstdout | src/__tests__/chat-integration.test.ts > Chat Integration Tests\n🔍 Checking server availability...\n\nstdout | src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Initialization > should initialize with memory system integration\n✅ Memory system initialized for LLM integration\n\nstdout | src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Initialization > should initialize with memory system integration\n✅ Memory system initialized for LLM integration\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete cognitive architecture flow with memory integration\n✅ Memory system initialized for LLM integration\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete cognitive architecture flow with memory integration\n🔌 LLM interface closed\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle memory retrieval failure gracefully\n🔌 LLM interface closed\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should create default identity with core components\nStarted new story: Emergence of Consciousness\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should follow the complete sensorimotor → memory → LLM → planning flow\n🔌 LLM interface closed\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete HRM integration flow\n🔌 LLM interface closed\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should reinforce personality traits based on evidence\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should reinforce personality traits based on evidence\nReinforced trait 'Curious': 0.80 -> 0.90\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should update value consistency based on behavior alignment\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should update value consistency based on behavior alignment\nUpdated value 'Safety First' consistency: 0.90 -> 0.95\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should develop capabilities through experience\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should develop capabilities through experience\nDeveloped capability 'Mining': 0.00 -> 0.30\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should process identity impacts from experiences\nStarted new story: Emergence of Consciousness\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle Ollama connection failures gracefully\n🔌 LLM interface closed\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle partial memory system failures\n🔌 LLM interface closed\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should degrade gracefully when all systems fail\n🔌 LLM interface closed\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should process identity impacts from experiences\nUpdated value 'Safety First' consistency: 0.90 -> 0.95\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should add learned values through experience\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should add learned values through experience\nAdded new learned value: Environmental Stewardship\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should generate meaningful identity summary\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should generate meaningful identity summary\nDeveloped capability 'Building': 0.00 -> 0.60\nReinforced trait 'Helpful': 0.60 -> 0.80\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should initialize with foundation story\nStarted new story: Emergence of Consciousness\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should optimize memory retrieval for performance\n🔌 LLM interface closed\n\nstdout | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should cache memory operations for efficiency\n🔌 LLM interface closed\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should integrate experiences into narrative context\nStarted new story: Emergence of Consciousness\n\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts (9 tests | 7 failed) 20ms\n   × Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete cognitive architecture flow with memory integration 10ms\n     → expected \"spy\" to be called with arguments: [ { …(4) } ]\n\nReceived: \n\n  1st spy call:\n\n  [\n    {\n-     \"context\": {\n-       \"emotionalState\": \"focused\",\n-       \"location\": {\n-         \"biome\": \"mountains\",\n-         \"x\": 100,\n-         \"y\": 64,\n-         \"z\": 200,\n-       },\n-       \"taskType\": \"resource_gathering\",\n-     },\n-     \"limit\": 5,\n+     \"limit\": 10,\n      \"query\": \"What tool should I use for mining iron ore in the mountains?\",\n-     \"type\": [\n-       \"episodic\",\n-       \"semantic\",\n-       \"procedural\",\n-     ],\n    },\n  ]\n\n\nNumber of calls: 1\n\n   × Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle memory retrieval failure gracefully 2ms\n     → Cannot set properties of undefined (setting 'searchMemories')\n   × Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should follow the complete sensorimotor → memory → LLM → planning flow 2ms\n     → Cannot set properties of undefined (setting 'searchMemories')\n   × Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete HRM integration flow 1ms\n     → Cannot set properties of undefined (setting 'searchMemories')\n   ✓ Memory-LLM Integration Flow > Error Handling and Resilience > should handle Ollama connection failures gracefully 1ms\n   × Memory-LLM Integration Flow > Error Handling and Resilience > should handle partial memory system failures 1ms\n     → Cannot set properties of undefined (setting 'searchMemories')\n   × Memory-LLM Integration Flow > Error Handling and Resilience > should degrade gracefully when all systems fail 0ms\n     → Cannot set properties of undefined (setting 'searchMemories')\n   × Memory-LLM Integration Flow > Performance and Optimization > should optimize memory retrieval for performance 0ms\n     → Cannot set properties of undefined (setting 'searchMemories')\n   ✓ Memory-LLM Integration Flow > Performance and Optimization > should cache memory operations for efficiency 1ms\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nRetrying LLM generation (attempt 1/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nRetrying LLM generation (attempt 2/3)\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should start new chapters and stories\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should start new chapters and stories\nStarted new chapter: First Adventures\nEnded story: Emergence of Consciousness (significance: 0.56)\nStarted new story: The Great Quest\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should generate meaningful narrative summaries\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should track narrative themes and patterns\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should track narrative themes and patterns\nEnded story: Emergence of Consciousness (significance: 0.56)\nStarted new story: Learning Journey\nStarted new story: Social Connections\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should provide meaningful statistics\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should provide meaningful statistics\nStarted new chapter: Exploration\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Integrated Self-Model Functionality > should maintain coherent self-understanding across identity and narrative\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Integrated Self-Model Functionality > should maintain coherent self-understanding across identity and narrative\nDeveloped capability 'Advanced Building': 0.00 -> 0.40\nReinforced trait 'Persistent': 0.70 -> 0.85\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Integrated Self-Model Functionality > should handle value conflicts and resolutions in narrative context\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Integrated Self-Model Functionality > should handle value conflicts and resolutions in narrative context\nUpdated value 'Safety First' consistency: 0.90 -> 0.95\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Error Handling and Edge Cases > should handle invalid inputs gracefully\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Error Handling and Edge Cases > should handle invalid inputs gracefully\nStarted new chapter: \n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Error Handling and Edge Cases > should validate identity state\nStarted new story: Emergence of Consciousness\n\nstdout | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Error Handling and Edge Cases > should maintain narrative coherence under stress\nStarted new story: Emergence of Consciousness\n\n ✓ src/self-model/__tests__/self-model-integration.test.ts (18 tests) 25ms\nstdout | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Advanced Identity Analyzer > should track identity evolution over time\nMock LLM handling evolution prompt\n\nstdout | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Advanced Identity Analyzer > should track identity evolution over time\nAnalysis history length: 3\nMock LLM handling evolution prompt\n\nstdout | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Contract System > should update commitment progress\nUpdated commitment 'Build Advanced Shelter': 0.00 -> 0.40\n\nstdout | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Contract System > should fulfill promises with evidence\nFulfilled promise 'Share Resources' with quality: 0.90\nFulfilled promise 'Share Resources' with quality: 0.80\nFulfilled promise 'Share Resources' with quality: 0.95\n\nstdout | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Contract System > should evaluate commitment progress and integrity\nUpdated commitment 'Practice Building Daily': 0.00 -> 0.30\nUpdated commitment 'Practice Building Daily': 0.30 -> 0.60\n\nstdout | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Contract System > should assess integrity scores\nUpdated commitment 'Daily Learning': 0.00 -> 1.00\nFulfilled promise 'Help Friend' with quality: 0.90\nFulfilled promise 'Help Friend' with quality: 0.80\n\n ✓ src/social-cognition/__tests__/social-cognition.test.ts (18 tests) 12ms\n ✓ src/self-model/__tests__/advanced-self-model.test.ts (29 tests) 30ms\n ❯ src/cognitive-core/__tests__/complete-architecture-integration.test.ts (2 tests | 2 skipped) 65ms\n   ↓ Complete Cognitive Architecture Integration > Mermaid Chart Flow Simulation > should simulate the complete cognitive architecture flow\n   ↓ Complete Cognitive Architecture Integration > Mermaid Chart Flow Simulation > should handle complex multi-domain scenarios\nstdout | src/cognitive-core/__tests__/memory-aware-llm.test.ts\n✅ Memory system initialized for LLM integration\n\nstdout | src/cognitive-core/__tests__/memory-aware-llm.test.ts\n✅ Memory system initialized for LLM integration\n\nstdout | MemoryAwareLLMInterface.initializeMemorySystem (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/memory-aware-llm.ts:192:15)\n✅ Memory system initialized for LLM integration\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts (19 tests | 12 failed) 90ms\n   ✓ MemoryAwareLLMInterface > Initialization > should initialize with memory system integration 5ms\n   ✓ MemoryAwareLLMInterface > Initialization > should handle memory system initialization failure gracefully 50ms\n   × MemoryAwareLLMInterface > Memory Retrieval > should retrieve relevant memories for a query 9ms\n     → expected [] to have a length of 2 but got +0\n   ✓ MemoryAwareLLMInterface > Memory Retrieval > should handle memory retrieval failure gracefully 1ms\n   ✓ MemoryAwareLLMInterface > Prompt Enhancement > should enhance prompt with relevant memories 1ms\n   × MemoryAwareLLMInterface > Prompt Enhancement > should not enhance prompt when memories are disabled 2ms\n     → expected 'You have access to the following rele…' to be 'What should I do?' // Object.is equality\n   × MemoryAwareLLMInterface > Memory Storage > should store conversation as episodic memory 1ms\n     → expected [] to have a length of 1 but got +0\n   × MemoryAwareLLMInterface > Memory Storage > should handle memory storage failure gracefully 1ms\n     → expected [] to have a length of 1 but got +0\n   × MemoryAwareLLMInterface > Cognitive Pattern Recording > should record cognitive processing patterns 1ms\n     → expected \"spy\" to be called with arguments: [ 'decision', …(4) ]\n\nNumber of calls: 0\n\n   × MemoryAwareLLMInterface > Memory-Enhanced Response Generation > should generate memory-enhanced response with all components 2ms\n     → expected [] to have a length of 1 but got +0\n   × MemoryAwareLLMInterface > Memory-Enhanced Response Generation > should handle memory integration failures gracefully 6ms\n     → expected [] to have a length of 1 but got +0\n   × MemoryAwareLLMInterface > Memory Recommendations > should generate memory consolidation recommendations 3ms\n     → expected [] to deep equally contain ObjectContaining{…}\n   × MemoryAwareLLMInterface > Cognitive Insights > should analyze cognitive insights from interactions 2ms\n     → expected {} to match object { …(4) }\n   × MemoryAwareLLMInterface > Helper Methods > should correctly estimate task complexity 1ms\n     → expected 'medium' to be 'simple' // Object.is equality\n   ✓ MemoryAwareLLMInterface > Helper Methods > should analyze reasoning approach 0ms\n   ✓ MemoryAwareLLMInterface > Helper Methods > should assess response quality 0ms\n   ✓ MemoryAwareLLMInterface > Helper Methods > should detect cognitive biases 1ms\n   × MemoryAwareLLMInterface > Integration Flow Tests > should follow the complete mermaid chart flow 1ms\n     → expected [] to have a length of 2 but got +0\n   × MemoryAwareLLMInterface > Integration Flow Tests > should handle the full integration with behavior tree patterns 1ms\n     → expected \"spy\" to be called with arguments: [ 'decision', …(4) ]\n\nNumber of calls: 0\n\nstdout | src/__tests__/chat-integration.test.ts > Chat Integration Tests\n📊 Server Status: { cognition: false, minecraft: false, dashboard: true }\n\nstdout | src/__tests__/chat-integration.test.ts > Chat Integration Tests\n📦 Final inventory state: { items: [], armor: [], tools: [] }\n📊 Inventory changed during tests: false\n✅ Chat integration tests completed successfully\n🎯 Bot is responding using its own reasoning and tools\n🧠 No hardcoded responses detected - consciousness evaluation criteria met\n\n ❯ src/__tests__/chat-integration.test.ts (19 tests | 19 skipped) 301ms\n   ↓ Chat Integration Tests > System Integration Validation > should have all required services running\n   ↓ Chat Integration Tests > System Integration Validation > should be able to fetch inventory data\n   ↓ Chat Integration Tests > Natural Response Validation > should respond to inventory queries using its own reasoning\n   ↓ Chat Integration Tests > Natural Response Validation > should handle inventory queries about different items\n   ↓ Chat Integration Tests > Natural Response Validation > should handle tool-related queries\n   ↓ Chat Integration Tests > Natural Response Validation > should handle complex inventory queries\n   ↓ Chat Integration Tests > Reasoning Quality Assessment > should demonstrate contextual reasoning for general questions\n   ↓ Chat Integration Tests > Reasoning Quality Assessment > should handle greetings with appropriate reasoning\n   ↓ Chat Integration Tests > Reasoning Quality Assessment > should provide thoughtful responses to complex questions\n   ↓ Chat Integration Tests > Error Handling and Edge Cases > should handle empty messages gracefully\n   ↓ Chat Integration Tests > Error Handling and Edge Cases > should handle very long messages\n   ↓ Chat Integration Tests > Error Handling and Edge Cases > should handle special characters in messages\n   ↓ Chat Integration Tests > Response Consistency and Metadata > should provide responses for the same question\n   ↓ Chat Integration Tests > Response Consistency and Metadata > should include appropriate metadata in responses\n   ↓ Chat Integration Tests > Response Consistency and Metadata > should include timestamp in responses\n   ↓ Chat Integration Tests > System Integration and State Management > should maintain inventory consistency during tests\n   ↓ Chat Integration Tests > System Integration and State Management > should handle concurrent chat requests\n   ↓ Chat Integration Tests > Consciousness Evaluation Criteria > should demonstrate autonomous reasoning without hardcoded responses\n   ↓ Chat Integration Tests > Consciousness Evaluation Criteria > should show evidence of contextual awareness\n ✓ src/__tests__/intrusive-thought-processor.test.ts (7 tests) 22ms\n ✓ src/intrusion-interface/__tests__/intrusion-interface.test.ts (16 tests) 13ms\n ✓ src/constitutional-filter/__tests__/constitutional-filter-integration.test.ts (14 tests) 11ms\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nRetrying LLM generation (attempt 3/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nTrying fallback model: qwen3:4b\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nRetrying LLM generation (attempt 1/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nRetrying LLM generation (attempt 2/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nRetrying LLM generation (attempt 3/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nTrying fallback model: qwen3:4b\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nRetrying LLM generation (attempt 1/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nRetrying LLM generation (attempt 2/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nRetrying LLM generation (attempt 3/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nTrying fallback model: qwen3:4b\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nRetrying LLM generation (attempt 1/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nRetrying LLM generation (attempt 2/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nRetrying LLM generation (attempt 3/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nTrying fallback model: qwen3:4b\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nRetrying LLM generation (attempt 1/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nRetrying LLM generation (attempt 2/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nRetrying LLM generation (attempt 3/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nTrying fallback model: qwen3:4b\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nRetrying LLM generation (attempt 1/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nRetrying LLM generation (attempt 2/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nRetrying LLM generation (attempt 3/3)\n\nstdout | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nTrying fallback model: qwen3:4b\n\n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts (6 tests | 4 failed) 100473ms\n   × ReActArbiter > reason > should execute a ReAct reasoning step 14400ms\n     → Unknown tool: ** chat\n   × ReActArbiter > reason > should validate tool selection 17031ms\n     → Unknown tool: **\n   × ReActArbiter > reason > should include tool arguments 22068ms\n     → ReAct step must select exactly one tool\n   ✓ ReActArbiter > reflect > should generate reflection on success  15773ms\n   × ReActArbiter > reflect > should generate reflection on failure 15528ms\n     → expected undefined to be defined\n   ✓ ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation  15670ms\n\n Test Files  6 failed | 6 passed (12)\n      Tests  23 failed | 113 passed | 21 skipped (157)\n   Start at  18:02:20\n   Duration  101.06s (transform 1.04s, setup 0ms, collect 1.64s, tests 101.06s, environment 1ms, prepare 1.20s)\n\n ELIFECYCLE  Test failed. See above for more details.\n\nstderr | src/__tests__/chat-integration.test.ts > Chat Integration Tests\nHealth check failed for http://localhost:3005: TypeError: fetch failed\n    at node:internal/deps/undici/undici:13510:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at checkServerHealth (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:44:18)\n    at async Promise.all (index 1)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:172:7 {\n  [cause]: AggregateError: \n      at internalConnectMultiple (node:net:1134:18)\n      at afterConnectMultiple (node:net:1715:7) {\n    code: 'ECONNREFUSED',\n    [errors]: [ [Error], [Error] ]\n  }\n}\n\nstderr | src/__tests__/chat-integration.test.ts > Chat Integration Tests\nHealth check failed for http://localhost:3003: TypeError: fetch failed\n    at node:internal/deps/undici/undici:13510:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at checkServerHealth (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:32:18)\n    at async Promise.all (index 0)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:172:7 {\n  [cause]: AggregateError: \n      at internalConnectMultiple (node:net:1134:18)\n      at afterConnectMultiple (node:net:1715:7) {\n    code: 'ECONNREFUSED',\n    [errors]: [ [Error], [Error] ]\n  }\n}\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Initialization > should handle memory system initialization failure gracefully\n⚠️ Could not initialize memory system: Connection failed\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle memory retrieval failure gracefully\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should follow the complete sensorimotor → memory → LLM → planning flow\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete HRM integration flow\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle Ollama connection failures gracefully\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle partial memory system failures\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should degrade gracefully when all systems fail\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should process identity impacts from experiences\nPersonality trait 'through' not found\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should optimize memory retrieval for performance\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should cache memory operations for efficiency\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should track narrative themes and patterns\nStory 'Emergence of Consciousness' already ended\n\nstderr | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Error Handling and Edge Cases > should handle invalid inputs gracefully\nPersonality trait '' not found\nCore value 'invalid-id' not found\nStory 'invalid-id' not found\n\nstderr | src/social-cognition/__tests__/social-cognition.test.ts > Social Cognition Module > Theory of Mind Engine > should infer mental states from observations\nFailed to parse mental state inference: SyntaxError: No number after minus sign in JSON at position 1 (line 1 column 2)\n    at JSON.parse (<anonymous>)\n    at TheoryOfMindEngine.parseMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:619:27)\n    at TheoryOfMindEngine.performMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:549:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TheoryOfMindEngine.inferMentalState (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:235:25)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/__tests__/social-cognition.test.ts:306:27\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/social-cognition/__tests__/social-cognition.test.ts > Social Cognition Module > Theory of Mind Engine > should predict agent intentions\nFailed to parse mental state inference: SyntaxError: No number after minus sign in JSON at position 1 (line 1 column 2)\n    at JSON.parse (<anonymous>)\n    at TheoryOfMindEngine.parseMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:619:27)\n    at TheoryOfMindEngine.performMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:549:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TheoryOfMindEngine.inferMentalState (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:235:25)\n    at TheoryOfMindEngine.predictIntentions (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:273:25)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/__tests__/social-cognition.test.ts:354:27\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/social-cognition/__tests__/social-cognition.test.ts > Social Cognition Module > Integration Features > should integrate components for comprehensive social analysis\nFailed to parse mental state inference: SyntaxError: No number after minus sign in JSON at position 1 (line 1 column 2)\n    at JSON.parse (<anonymous>)\n    at TheoryOfMindEngine.parseMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:619:27)\n    at TheoryOfMindEngine.performMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:549:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TheoryOfMindEngine.inferMentalState (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:235:25)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/__tests__/social-cognition.test.ts:611:27\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Initialization > should handle memory system initialization failure gracefully\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n\nstderr | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Integration and Error Handling > should handle invalid inputs gracefully\nCommitment 'invalid-id' not found\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n\nstderr | src/__tests__/chat-integration.test.ts > Chat Integration Tests\nFailed to get inventory: TypeError: fetch failed\n    at node:internal/deps/undici/undici:13510:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at getCurrentInventory (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:69:22)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:566:28 {\n  [cause]: AggregateError: \n      at internalConnectMultiple (node:net:1134:18)\n      at afterConnectMultiple (node:net:1715:7) {\n    code: 'ECONNREFUSED',\n    [errors]: [ [Error], [Error] ]\n  }\n}\n\nstderr | src/intrusion-interface/__tests__/intrusion-interface.test.ts > Intrusion Interface > Error Handling > should handle LLM errors gracefully\nError assessing risk: Error: LLM Error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/intrusion-interface/__tests__/intrusion-interface.test.ts:417:32\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/intrusion-interface/__tests__/intrusion-interface.test.ts > Intrusion Interface > Error Handling > should handle constitutional filter errors\nError checking compliance: Error: Constitutional Error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/intrusion-interface/__tests__/intrusion-interface.test.ts:442:31\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nFailed to parse args: SyntaxError: Unexpected token '*', \"** {\"message\"\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at ReActArbiter.parseReActResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:334:23)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:166:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nReAct reasoning failed: Error: Unknown tool: ** chat\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nReAct reasoning failed: Error: Unknown tool: **\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nReAct reasoning failed: Error: ReAct step must select exactly one tool\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:170:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\n\n⎯⎯⎯⎯⎯⎯ Failed Suites 3 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/chat-integration.test.ts > Chat Integration Tests\nError: Required servers are not running. Please start all services with `pnpm dev` before running tests.\n ❯ src/__tests__/chat-integration.test.ts:187:13\n    185| \n    186|     if (!cognitionHealth || !minecraftHealth) {\n    187|       throw new Error(\n       |             ^\n    188|         'Required servers are not running. Please start all services w…\n    189|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/27]⎯\n\n FAIL  src/cognitive-core/__tests__/complete-architecture-integration.test.ts > Complete Cognitive Architecture Integration\nError: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n ❯ ../memory/src/memory-system.ts:10:1\n\nCaused by: Error: Failed to load url ./vector-database (resolved id: ./vector-database) in /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/index.js. Does the file exist?\n ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.3_@types+node@20.19.11_jiti@1.21.7_tsx@4.20.5_yaml@2.8.1/node_modules/vite/dist/node/chunks/dep-Bj7gA1-0.js:26300:33\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/27]⎯\n\n FAIL  src/cognitive-core/__tests__/complete-architecture-integration.test.ts > Complete Cognitive Architecture Integration\nTypeError: Cannot read properties of undefined (reading 'close')\n ❯ src/cognitive-core/__tests__/complete-architecture-integration.test.ts:53:26\n     51| \n     52|   afterAll(async () => {\n     53|     await memoryAwareLLM.close();\n       |                          ^\n     54|     vi.clearAllMocks();\n     55|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/27]⎯\n\n FAIL  src/cognitive-core/__tests__/ollama-memory-integration.test.ts [ src/cognitive-core/__tests__/ollama-memory-integration.test.ts ]\nTypeError: describe.skipUnless is not a function\n ❯ src/cognitive-core/__tests__/ollama-memory-integration.test.ts:21:10\n     19|   process.env.OLLAMA_AVAILABLE === 'true' || process.env.CI !== 'true';\n     20| \n     21| describe.skipUnless(OLLAMA_AVAILABLE)(\n       |          ^\n     22|   'Ollama Memory Integration (Live)',\n     23|   () => {\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/27]⎯\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 23 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Retrieval > should retrieve relevant memories for a query\nAssertionError: expected [] to have a length of 2 but got +0\n\n- Expected\n+ Received\n\n- 2\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:107:24\n    105|       );\n    106| \n    107|       expect(memories).toHaveLength(2);\n       |                        ^\n    108|       expect(memories[0]).toMatchObject({\n    109|         id: '1',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Prompt Enhancement > should not enhance prompt when memories are disabled\nAssertionError: expected 'You have access to the following rele…' to be 'What should I do?' // Object.is equality\n\n- Expected\n+ Received\n\n+ You have access to the following relevant memories and experiences:\n+\n+ [Memory: EPISODIC] Previous experience\n+\n+ Please use these memories to inform your response to the following query:\n+\n  What should I do?\n+\n+ If the memories are relevant, incorporate them naturally into your reasoning. If they are not relevant, you can disregard them.\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:178:30\n    176|       );\n    177| \n    178|       expect(enhancedPrompt).toBe('What should I do?');\n       |                              ^\n    179|     });\n    180|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Storage > should store conversation as episodic memory\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:209:26\n    207|       );\n    208| \n    209|       expect(operations).toHaveLength(1);\n       |                          ^\n    210|       expect(operations[0]).toMatchObject({\n    211|         type: 'store',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Storage > should handle memory storage failure gracefully\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:240:26\n    238|       );\n    239| \n    240|       expect(operations).toHaveLength(1);\n       |                          ^\n    241|       expect(operations[0]).toMatchObject({\n    242|         type: 'store',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Cognitive Pattern Recording > should record cognitive processing patterns\nAssertionError: expected \"spy\" to be called with arguments: [ 'decision', …(4) ]\n\nNumber of calls: 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:273:55\n    271|       );\n    272| \n    273|       expect(mockMemorySystem.recordCognitivePattern).toHaveBeenCalled…\n       |                                                       ^\n    274|         'decision',\n    275|         expect.objectContaining({\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory-Enhanced Response Generation > should generate memory-enhanced response with all components\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:355:35\n    353|       });\n    354| \n    355|       expect(result.memoriesUsed).toHaveLength(1);\n       |                                   ^\n    356|       expect(result.memoryOperations).toHaveLength(1);\n    357|       expect(result.confidence).toBeGreaterThanOrEqual(0.8); // Should…\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory-Enhanced Response Generation > should handle memory integration failures gracefully\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:395:39\n    393|       expect(result.text).toBe('Fallback response');\n    394|       expect(result.memoriesUsed).toEqual([]);\n    395|       expect(result.memoryOperations).toHaveLength(1);\n       |                                       ^\n    396|       expect(result.memoryOperations[0].success).toBe(false);\n    397|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Recommendations > should generate memory consolidation recommendations\nAssertionError: expected [] to deep equally contain ObjectContaining{…}\n\n- Expected: \nObjectContaining {\n  \"action\": \"consolidate\",\n  \"priority\": 0.7,\n  \"reason\": StringContaining \"6 related memories\",\n}\n\n+ Received: \n[]\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:468:31\n    466|       });\n    467| \n    468|       expect(recommendations).toContainEqual(\n       |                               ^\n    469|         expect.objectContaining({\n    470|           action: 'consolidate',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Cognitive Insights > should analyze cognitive insights from interactions\nAssertionError: expected {} to match object { …(4) }\n\n- Expected\n+ Received\n\n- {\n-   \"confidenceFactors\": ArrayContaining [\n-     \"evidence_based\",\n-   ],\n-   \"decisionQuality\": Any<Number>,\n-   \"learningOpportunities\": ArrayContaining [\n-     \"knowledge_acquisition\",\n-   ],\n-   \"thoughtPatterns\": ArrayContaining [\n-     \"logical_reasoning\",\n-   ],\n- }\n+ {}\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:505:24\n    503|       );\n    504| \n    505|       expect(insights).toMatchObject({\n       |                        ^\n    506|         thoughtPatterns: expect.arrayContaining(['logical_reasoning']),\n    507|         decisionQuality: expect.any(Number),\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Helper Methods > should correctly estimate task complexity\nAssertionError: expected 'medium' to be 'simple' // Object.is equality\n\nExpected: \"simple\"\nReceived: \"medium\"\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:520:76\n    518|   describe('Helper Methods', () => {\n    519|     it('should correctly estimate task complexity', () => {\n    520|       expect(memoryAwareLLM['estimateTaskComplexity']('Simple question…\n       |                                                                            ^\n    521|         'simple'\n    522|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Integration Flow Tests > should follow the complete mermaid chart flow\nAssertionError: expected [] to have a length of 2 but got +0\n\n- Expected\n+ Received\n\n- 2\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:662:35\n    660| \n    661|       // Verify the complete flow\n    662|       expect(result.memoriesUsed).toHaveLength(2);\n       |                                   ^\n    663|       expect(result.memoriesUsed[0]).toMatchObject({\n    664|         type: 'episodic',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Integration Flow Tests > should handle the full integration with behavior tree patterns\nAssertionError: expected \"spy\" to be called with arguments: [ 'decision', …(4) ]\n\nNumber of calls: 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:739:55\n    737| \n    738|       // Verify behavior tree pattern was recorded\n    739|       expect(mockMemorySystem.recordCognitivePattern).toHaveBeenCalled…\n       |                                                       ^\n    740|         'decision',\n    741|         expect.objectContaining({\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete cognitive architecture flow with memory integration\nAssertionError: expected \"spy\" to be called with arguments: [ { …(4) } ]\n\nReceived: \n\n  1st spy call:\n\n  [\n    {\n-     \"context\": {\n-       \"emotionalState\": \"focused\",\n-       \"location\": {\n-         \"biome\": \"mountains\",\n-         \"x\": 100,\n-         \"y\": 64,\n-         \"z\": 200,\n-       },\n-       \"taskType\": \"resource_gathering\",\n-     },\n-     \"limit\": 5,\n+     \"limit\": 10,\n      \"query\": \"What tool should I use for mining iron ore in the mountains?\",\n-     \"type\": [\n-       \"episodic\",\n-       \"semantic\",\n-       \"procedural\",\n-     ],\n    },\n  ]\n\n\nNumber of calls: 1\n\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:170:47\n    168|       // Step 6: Verify the complete flow worked correctly\n    169|       // A. Memory retrieval was triggered\n    170|       expect(mockMemorySystem.searchMemories).toHaveBeenCalledWith({\n       |                                               ^\n    171|         query: 'What tool should I use for mining iron ore in the moun…\n    172|         type: ['episodic', 'semantic', 'procedural'],\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle memory retrieval failure gracefully\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:245:24\n    243|     it('should handle memory retrieval failure gracefully', async () =…\n    244|       // Mock memory system failure\n    245|       mockMemorySystem.searchMemories = vi\n       |                        ^\n    246|         .fn()\n    247|         .mockRejectedValue(new Error('Memory system unavailable'));\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should follow the complete sensorimotor → memory → LLM → planning flow\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:325:24\n    323|       ];\n    324| \n    325|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    326|         results: mockRelevantMemories,\n    327|         total: 2,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete HRM integration flow\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:489:24\n    487|       ];\n    488| \n    489|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    490|         results: mockHierarchicalMemories,\n    491|         total: 3,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle partial memory system failures\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:627:24\n    625|     it('should handle partial memory system failures', async () => {\n    626|       // Mock partial failures\n    627|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    628|         results: [],\n    629|         total: 0,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should degrade gracefully when all systems fail\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:670:24\n    668|     it('should degrade gracefully when all systems fail', async () => {\n    669|       // Mock complete system failure\n    670|       mockMemorySystem.searchMemories = vi\n       |                        ^\n    671|         .fn()\n    672|         .mockRejectedValue(new Error('Memory system completely unavail…\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should optimize memory retrieval for performance\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:720:24\n    718|       }));\n    719| \n    720|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    721|         results: mockMemories,\n    722|         total: 10,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nError: Unknown tool: ** chat\n ❯ ReActArbiter.reason src/react-arbiter/ReActArbiter.ts:175:15\n    173|       // Validate tool exists in registry\n    174|       if (!this.toolRegistry.has(step.selectedTool)) {\n    175|         throw new Error(`Unknown tool: ${step.selectedTool}`);\n       |               ^\n    176|       }\n    177| \n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nError: Unknown tool: **\n ❯ ReActArbiter.reason src/react-arbiter/ReActArbiter.ts:175:15\n    173|       // Validate tool exists in registry\n    174|       if (!this.toolRegistry.has(step.selectedTool)) {\n    175|         throw new Error(`Unknown tool: ${step.selectedTool}`);\n       |               ^\n    176|       }\n    177| \n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nError: ReAct step must select exactly one tool\n ❯ ReActArbiter.reason src/react-arbiter/ReActArbiter.ts:170:15\n    168|       // Validate that we have at most one tool call\n    169|       if (!step.selectedTool) {\n    170|         throw new Error('ReAct step must select exactly one tool');\n       |               ^\n    171|       }\n    172| \n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nAssertionError: expected undefined to be defined\n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:141:34\n    139|       expect(reflection).toBeDefined();\n    140|       expect(reflection.situation).toBeDefined();\n    141|       expect(reflection.failure).toBeDefined();\n       |                                  ^\n    142|       expect(reflection.lesson).toBeDefined();\n    143|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/27]⎯\n\n",
          "error": "stderr | src/__tests__/chat-integration.test.ts > Chat Integration Tests\nHealth check failed for http://localhost:3005: TypeError: fetch failed\n    at node:internal/deps/undici/undici:13510:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at checkServerHealth (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:44:18)\n    at async Promise.all (index 1)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:172:7 {\n  [cause]: AggregateError: \n      at internalConnectMultiple (node:net:1134:18)\n      at afterConnectMultiple (node:net:1715:7) {\n    code: 'ECONNREFUSED',\n    [errors]: [ [Error], [Error] ]\n  }\n}\n\nstderr | src/__tests__/chat-integration.test.ts > Chat Integration Tests\nHealth check failed for http://localhost:3003: TypeError: fetch failed\n    at node:internal/deps/undici/undici:13510:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at checkServerHealth (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:32:18)\n    at async Promise.all (index 0)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:172:7 {\n  [cause]: AggregateError: \n      at internalConnectMultiple (node:net:1134:18)\n      at afterConnectMultiple (node:net:1715:7) {\n    code: 'ECONNREFUSED',\n    [errors]: [ [Error], [Error] ]\n  }\n}\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Initialization > should handle memory system initialization failure gracefully\n⚠️ Could not initialize memory system: Connection failed\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle memory retrieval failure gracefully\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should follow the complete sensorimotor → memory → LLM → planning flow\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete HRM integration flow\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle Ollama connection failures gracefully\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle partial memory system failures\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should degrade gracefully when all systems fail\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Identity Tracking > should process identity impacts from experiences\nPersonality trait 'through' not found\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should optimize memory retrieval for performance\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should cache memory operations for efficiency\n⚠️ Could not initialize memory system: Cannot read properties of undefined (reading 'initialize')\n⚠️ LLM will operate without memory integration\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Narrative Management > should track narrative themes and patterns\nStory 'Emergence of Consciousness' already ended\n\nstderr | src/self-model/__tests__/self-model-integration.test.ts > Self-Model Integration > Error Handling and Edge Cases > should handle invalid inputs gracefully\nPersonality trait '' not found\nCore value 'invalid-id' not found\nStory 'invalid-id' not found\n\nstderr | src/social-cognition/__tests__/social-cognition.test.ts > Social Cognition Module > Theory of Mind Engine > should infer mental states from observations\nFailed to parse mental state inference: SyntaxError: No number after minus sign in JSON at position 1 (line 1 column 2)\n    at JSON.parse (<anonymous>)\n    at TheoryOfMindEngine.parseMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:619:27)\n    at TheoryOfMindEngine.performMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:549:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TheoryOfMindEngine.inferMentalState (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:235:25)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/__tests__/social-cognition.test.ts:306:27\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/social-cognition/__tests__/social-cognition.test.ts > Social Cognition Module > Theory of Mind Engine > should predict agent intentions\nFailed to parse mental state inference: SyntaxError: No number after minus sign in JSON at position 1 (line 1 column 2)\n    at JSON.parse (<anonymous>)\n    at TheoryOfMindEngine.parseMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:619:27)\n    at TheoryOfMindEngine.performMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:549:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TheoryOfMindEngine.inferMentalState (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:235:25)\n    at TheoryOfMindEngine.predictIntentions (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:273:25)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/__tests__/social-cognition.test.ts:354:27\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/social-cognition/__tests__/social-cognition.test.ts > Social Cognition Module > Integration Features > should integrate components for comprehensive social analysis\nFailed to parse mental state inference: SyntaxError: No number after minus sign in JSON at position 1 (line 1 column 2)\n    at JSON.parse (<anonymous>)\n    at TheoryOfMindEngine.parseMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:619:27)\n    at TheoryOfMindEngine.performMentalStateInference (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:549:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at TheoryOfMindEngine.inferMentalState (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/theory-of-mind-engine.ts:235:25)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/social-cognition/__tests__/social-cognition.test.ts:611:27\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Initialization > should handle memory system initialization failure gracefully\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n\nstderr | src/self-model/__tests__/advanced-self-model.test.ts > Advanced Self-Model Components > Integration and Error Handling > should handle invalid inputs gracefully\nCommitment 'invalid-id' not found\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n\nstderr | src/cognitive-core/__tests__/memory-aware-llm.test.ts\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n⚠️ Could not initialize memory system: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n⚠️ LLM will operate without memory integration\n\nstderr | src/__tests__/chat-integration.test.ts > Chat Integration Tests\nFailed to get inventory: TypeError: fetch failed\n    at node:internal/deps/undici/undici:13510:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at getCurrentInventory (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:69:22)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/__tests__/chat-integration.test.ts:566:28 {\n  [cause]: AggregateError: \n      at internalConnectMultiple (node:net:1134:18)\n      at afterConnectMultiple (node:net:1715:7) {\n    code: 'ECONNREFUSED',\n    [errors]: [ [Error], [Error] ]\n  }\n}\n\nstderr | src/intrusion-interface/__tests__/intrusion-interface.test.ts > Intrusion Interface > Error Handling > should handle LLM errors gracefully\nError assessing risk: Error: LLM Error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/intrusion-interface/__tests__/intrusion-interface.test.ts:417:32\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/intrusion-interface/__tests__/intrusion-interface.test.ts > Intrusion Interface > Error Handling > should handle constitutional filter errors\nError checking compliance: Error: Constitutional Error\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/intrusion-interface/__tests__/intrusion-interface.test.ts:442:31\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nFailed to parse args: SyntaxError: Unexpected token '*', \"** {\"message\"\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at ReActArbiter.parseReActResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:334:23)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:166:25)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\nReAct reasoning failed: Error: Unknown tool: ** chat\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nReAct reasoning failed: Error: Unknown tool: **\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:175:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:161:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nReAct reasoning failed: Error: ReAct step must select exactly one tool\n    at ReActArbiter.reason (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:170:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on success\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:118:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:135:26\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM generation failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:75:24)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM retry attempt 1 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM retry attempt 2 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\nstderr | src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > getRelevantReflexionHints > should return relevant hints for a situation\nLLM retry attempt 3 failed: Error: Ollama API error: 404 Not Found\n    at LLMInterface.callOllama (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:382:15)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at LLMInterface.generateResponse (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/cognitive-core/llm-interface.ts:116:28)\n    at ReActArbiter.callLLM (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:265:24)\n    at ReActArbiter.reflect (/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/ReActArbiter.ts:197:24)\n    at /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/cognition/src/react-arbiter/__tests__/ReActArbiter.test.ts:152:7\n    at file:///Users/darianrosebrook/Desktop/Projects/conscious-bot/node_modules/.pnpm/@vitest+runner@3.2.4/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20\n\n\n⎯⎯⎯⎯⎯⎯ Failed Suites 3 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/chat-integration.test.ts > Chat Integration Tests\nError: Required servers are not running. Please start all services with `pnpm dev` before running tests.\n ❯ src/__tests__/chat-integration.test.ts:187:13\n    185| \n    186|     if (!cognitionHealth || !minecraftHealth) {\n    187|       throw new Error(\n       |             ^\n    188|         'Required servers are not running. Please start all services w…\n    189|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/27]⎯\n\n FAIL  src/cognitive-core/__tests__/complete-architecture-integration.test.ts > Complete Cognitive Architecture Integration\nError: Cannot find module './vector-database' imported from '/Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/memory-system.js'\n ❯ ../memory/src/memory-system.ts:10:1\n\nCaused by: Error: Failed to load url ./vector-database (resolved id: ./vector-database) in /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/memory/dist/index.js. Does the file exist?\n ❯ loadAndTransform ../../node_modules/.pnpm/vite@7.1.3_@types+node@20.19.11_jiti@1.21.7_tsx@4.20.5_yaml@2.8.1/node_modules/vite/dist/node/chunks/dep-Bj7gA1-0.js:26300:33\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/27]⎯\n\n FAIL  src/cognitive-core/__tests__/complete-architecture-integration.test.ts > Complete Cognitive Architecture Integration\nTypeError: Cannot read properties of undefined (reading 'close')\n ❯ src/cognitive-core/__tests__/complete-architecture-integration.test.ts:53:26\n     51| \n     52|   afterAll(async () => {\n     53|     await memoryAwareLLM.close();\n       |                          ^\n     54|     vi.clearAllMocks();\n     55|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/27]⎯\n\n FAIL  src/cognitive-core/__tests__/ollama-memory-integration.test.ts [ src/cognitive-core/__tests__/ollama-memory-integration.test.ts ]\nTypeError: describe.skipUnless is not a function\n ❯ src/cognitive-core/__tests__/ollama-memory-integration.test.ts:21:10\n     19|   process.env.OLLAMA_AVAILABLE === 'true' || process.env.CI !== 'true';\n     20| \n     21| describe.skipUnless(OLLAMA_AVAILABLE)(\n       |          ^\n     22|   'Ollama Memory Integration (Live)',\n     23|   () => {\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/27]⎯\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 23 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Retrieval > should retrieve relevant memories for a query\nAssertionError: expected [] to have a length of 2 but got +0\n\n- Expected\n+ Received\n\n- 2\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:107:24\n    105|       );\n    106| \n    107|       expect(memories).toHaveLength(2);\n       |                        ^\n    108|       expect(memories[0]).toMatchObject({\n    109|         id: '1',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Prompt Enhancement > should not enhance prompt when memories are disabled\nAssertionError: expected 'You have access to the following rele…' to be 'What should I do?' // Object.is equality\n\n- Expected\n+ Received\n\n+ You have access to the following relevant memories and experiences:\n+\n+ [Memory: EPISODIC] Previous experience\n+\n+ Please use these memories to inform your response to the following query:\n+\n  What should I do?\n+\n+ If the memories are relevant, incorporate them naturally into your reasoning. If they are not relevant, you can disregard them.\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:178:30\n    176|       );\n    177| \n    178|       expect(enhancedPrompt).toBe('What should I do?');\n       |                              ^\n    179|     });\n    180|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Storage > should store conversation as episodic memory\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:209:26\n    207|       );\n    208| \n    209|       expect(operations).toHaveLength(1);\n       |                          ^\n    210|       expect(operations[0]).toMatchObject({\n    211|         type: 'store',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Storage > should handle memory storage failure gracefully\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:240:26\n    238|       );\n    239| \n    240|       expect(operations).toHaveLength(1);\n       |                          ^\n    241|       expect(operations[0]).toMatchObject({\n    242|         type: 'store',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Cognitive Pattern Recording > should record cognitive processing patterns\nAssertionError: expected \"spy\" to be called with arguments: [ 'decision', …(4) ]\n\nNumber of calls: 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:273:55\n    271|       );\n    272| \n    273|       expect(mockMemorySystem.recordCognitivePattern).toHaveBeenCalled…\n       |                                                       ^\n    274|         'decision',\n    275|         expect.objectContaining({\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory-Enhanced Response Generation > should generate memory-enhanced response with all components\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:355:35\n    353|       });\n    354| \n    355|       expect(result.memoriesUsed).toHaveLength(1);\n       |                                   ^\n    356|       expect(result.memoryOperations).toHaveLength(1);\n    357|       expect(result.confidence).toBeGreaterThanOrEqual(0.8); // Should…\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory-Enhanced Response Generation > should handle memory integration failures gracefully\nAssertionError: expected [] to have a length of 1 but got +0\n\n- Expected\n+ Received\n\n- 1\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:395:39\n    393|       expect(result.text).toBe('Fallback response');\n    394|       expect(result.memoriesUsed).toEqual([]);\n    395|       expect(result.memoryOperations).toHaveLength(1);\n       |                                       ^\n    396|       expect(result.memoryOperations[0].success).toBe(false);\n    397|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Memory Recommendations > should generate memory consolidation recommendations\nAssertionError: expected [] to deep equally contain ObjectContaining{…}\n\n- Expected: \nObjectContaining {\n  \"action\": \"consolidate\",\n  \"priority\": 0.7,\n  \"reason\": StringContaining \"6 related memories\",\n}\n\n+ Received: \n[]\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:468:31\n    466|       });\n    467| \n    468|       expect(recommendations).toContainEqual(\n       |                               ^\n    469|         expect.objectContaining({\n    470|           action: 'consolidate',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Cognitive Insights > should analyze cognitive insights from interactions\nAssertionError: expected {} to match object { …(4) }\n\n- Expected\n+ Received\n\n- {\n-   \"confidenceFactors\": ArrayContaining [\n-     \"evidence_based\",\n-   ],\n-   \"decisionQuality\": Any<Number>,\n-   \"learningOpportunities\": ArrayContaining [\n-     \"knowledge_acquisition\",\n-   ],\n-   \"thoughtPatterns\": ArrayContaining [\n-     \"logical_reasoning\",\n-   ],\n- }\n+ {}\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:505:24\n    503|       );\n    504| \n    505|       expect(insights).toMatchObject({\n       |                        ^\n    506|         thoughtPatterns: expect.arrayContaining(['logical_reasoning']),\n    507|         decisionQuality: expect.any(Number),\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Helper Methods > should correctly estimate task complexity\nAssertionError: expected 'medium' to be 'simple' // Object.is equality\n\nExpected: \"simple\"\nReceived: \"medium\"\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:520:76\n    518|   describe('Helper Methods', () => {\n    519|     it('should correctly estimate task complexity', () => {\n    520|       expect(memoryAwareLLM['estimateTaskComplexity']('Simple question…\n       |                                                                            ^\n    521|         'simple'\n    522|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Integration Flow Tests > should follow the complete mermaid chart flow\nAssertionError: expected [] to have a length of 2 but got +0\n\n- Expected\n+ Received\n\n- 2\n+ 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:662:35\n    660| \n    661|       // Verify the complete flow\n    662|       expect(result.memoriesUsed).toHaveLength(2);\n       |                                   ^\n    663|       expect(result.memoriesUsed[0]).toMatchObject({\n    664|         type: 'episodic',\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-aware-llm.test.ts > MemoryAwareLLMInterface > Integration Flow Tests > should handle the full integration with behavior tree patterns\nAssertionError: expected \"spy\" to be called with arguments: [ 'decision', …(4) ]\n\nNumber of calls: 0\n\n ❯ src/cognitive-core/__tests__/memory-aware-llm.test.ts:739:55\n    737| \n    738|       // Verify behavior tree pattern was recorded\n    739|       expect(mockMemorySystem.recordCognitivePattern).toHaveBeenCalled…\n       |                                                       ^\n    740|         'decision',\n    741|         expect.objectContaining({\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete cognitive architecture flow with memory integration\nAssertionError: expected \"spy\" to be called with arguments: [ { …(4) } ]\n\nReceived: \n\n  1st spy call:\n\n  [\n    {\n-     \"context\": {\n-       \"emotionalState\": \"focused\",\n-       \"location\": {\n-         \"biome\": \"mountains\",\n-         \"x\": 100,\n-         \"y\": 64,\n-         \"z\": 200,\n-       },\n-       \"taskType\": \"resource_gathering\",\n-     },\n-     \"limit\": 5,\n+     \"limit\": 10,\n      \"query\": \"What tool should I use for mining iron ore in the mountains?\",\n-     \"type\": [\n-       \"episodic\",\n-       \"semantic\",\n-       \"procedural\",\n-     ],\n    },\n  ]\n\n\nNumber of calls: 1\n\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:170:47\n    168|       // Step 6: Verify the complete flow worked correctly\n    169|       // A. Memory retrieval was triggered\n    170|       expect(mockMemorySystem.searchMemories).toHaveBeenCalledWith({\n       |                                               ^\n    171|         query: 'What tool should I use for mining iron ore in the moun…\n    172|         type: ['episodic', 'semantic', 'procedural'],\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle memory retrieval failure gracefully\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:245:24\n    243|     it('should handle memory retrieval failure gracefully', async () =…\n    244|       // Mock memory system failure\n    245|       mockMemorySystem.searchMemories = vi\n       |                        ^\n    246|         .fn()\n    247|         .mockRejectedValue(new Error('Memory system unavailable'));\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should follow the complete sensorimotor → memory → LLM → planning flow\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:325:24\n    323|       ];\n    324| \n    325|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    326|         results: mockRelevantMemories,\n    327|         total: 2,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Complete Mermaid Chart Flow > should handle the complete HRM integration flow\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:489:24\n    487|       ];\n    488| \n    489|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    490|         results: mockHierarchicalMemories,\n    491|         total: 3,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should handle partial memory system failures\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:627:24\n    625|     it('should handle partial memory system failures', async () => {\n    626|       // Mock partial failures\n    627|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    628|         results: [],\n    629|         total: 0,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Error Handling and Resilience > should degrade gracefully when all systems fail\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:670:24\n    668|     it('should degrade gracefully when all systems fail', async () => {\n    669|       // Mock complete system failure\n    670|       mockMemorySystem.searchMemories = vi\n       |                        ^\n    671|         .fn()\n    672|         .mockRejectedValue(new Error('Memory system completely unavail…\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/27]⎯\n\n FAIL  src/cognitive-core/__tests__/memory-llm-integration.test.ts > Memory-LLM Integration Flow > Performance and Optimization > should optimize memory retrieval for performance\nTypeError: Cannot set properties of undefined (setting 'searchMemories')\n ❯ src/cognitive-core/__tests__/memory-llm-integration.test.ts:720:24\n    718|       }));\n    719| \n    720|       mockMemorySystem.searchMemories = vi.fn().mockResolvedValue({\n       |                        ^\n    721|         results: mockMemories,\n    722|         total: 10,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should execute a ReAct reasoning step\nError: Unknown tool: ** chat\n ❯ ReActArbiter.reason src/react-arbiter/ReActArbiter.ts:175:15\n    173|       // Validate tool exists in registry\n    174|       if (!this.toolRegistry.has(step.selectedTool)) {\n    175|         throw new Error(`Unknown tool: ${step.selectedTool}`);\n       |               ^\n    176|       }\n    177| \n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:72:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should validate tool selection\nError: Unknown tool: **\n ❯ ReActArbiter.reason src/react-arbiter/ReActArbiter.ts:175:15\n    173|       // Validate tool exists in registry\n    174|       if (!this.toolRegistry.has(step.selectedTool)) {\n    175|         throw new Error(`Unknown tool: ${step.selectedTool}`);\n       |               ^\n    176|       }\n    177| \n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:81:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reason > should include tool arguments\nError: ReAct step must select exactly one tool\n ❯ ReActArbiter.reason src/react-arbiter/ReActArbiter.ts:170:15\n    168|       // Validate that we have at most one tool call\n    169|       if (!step.selectedTool) {\n    170|         throw new Error('ReAct step must select exactly one tool');\n       |               ^\n    171|       }\n    172| \n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:100:20\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/27]⎯\n\n FAIL  src/react-arbiter/__tests__/ReActArbiter.test.ts > ReActArbiter > reflect > should generate reflection on failure\nAssertionError: expected undefined to be defined\n ❯ src/react-arbiter/__tests__/ReActArbiter.test.ts:141:34\n    139|       expect(reflection).toBeDefined();\n    140|       expect(reflection.situation).toBeDefined();\n    141|       expect(reflection.failure).toBeDefined();\n       |                                  ^\n    142|       expect(reflection.lesson).toBeDefined();\n    143|     });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/27]⎯\n\n"
        },
        {
          "checkId": "world-unit-tests",
          "success": false,
          "duration": 32050,
          "output": "\n> @conscious-bot/world@0.1.0 test /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\n> vitest run\n\n\n RUN  v3.2.4 /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/world\n\n ❯ src/place-graph/__tests__/place-graph-integration.test.ts (10 tests | 1 failed) 40ms\n   ✓ Place Graph Integration > Place Graph Core > should add and retrieve places 6ms\n   ✓ Place Graph Integration > Place Graph Core > should create hierarchical place relationships 2ms\n   ✓ Place Graph Integration > Place Graph Core > should connect places with edges 1ms\n   ✓ Place Graph Integration > Place Memory > should add and retrieve memories for places 1ms\n   ✓ Place Graph Integration > Place Memory > should recall memories by tag 12ms\n   ✓ Place Graph Integration > Place Memory > should generate place summaries with memories 0ms\n   × Place Graph Integration > Spatial Navigator > should find paths between places 15ms\n     → Target cannot be null or undefined.\n   ✓ Place Graph Integration > Spatial Navigator > should find nearest place by function 1ms\n   ✓ Place Graph Integration > Place Discovery > should discover new places and connect them 1ms\n   ✓ Place Graph Integration > Place Discovery > should update existing places when rediscovered 1ms\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle simple_straight_line correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\n ❯ src/__tests__/world-contract-testing.test.ts (20 tests | 6 failed) 104ms\n   × World Module Contract Testing > Raycast Engine Contract Validation > should satisfy castRay input/output contract 35ms\n     → expected { …(3) } to have property \"blockType\"\n   × World Module Contract Testing > Raycast Engine Contract Validation > should satisfy castCone input/output contract 5ms\n     → expected { …(3) } to have property \"blockType\"\n   ✓ World Module Contract Testing > Raycast Engine Contract Validation > should handle updateWorld contract correctly 3ms\n   ✓ World Module Contract Testing > Raycast Engine Contract Validation > should respect distance constraints 1ms\n   ✓ World Module Contract Testing > Navigation System Contract Validation > should satisfy planPath input/output contract 8ms\n   ✓ World Module Contract Testing > Navigation System Contract Validation > should handle invalid path requests gracefully 2ms\n   ✓ World Module Contract Testing > Navigation System Contract Validation > should respect urgency contract parameter 16ms\n   × World Module Contract Testing > Perception System Contract Validation > should satisfy processVisualField input/output contract 2ms\n     → expected 0 to be greater than or equal to 0.3\n   ✓ World Module Contract Testing > Perception System Contract Validation > should handle different field of view configurations 2ms\n   ✓ World Module Contract Testing > Perception System Contract Validation > should handle different quality levels 1ms\n   × World Module Contract Testing > Sensorimotor System Contract Validation > should satisfy executeAction input/output contract 2ms\n     → expected { actionId: 'test-move-action', …(4) } to have property \"feedback\"\n   ✓ World Module Contract Testing > Sensorimotor System Contract Validation > should support all contracted action types 3ms\n   × World Module Contract Testing > Sensorimotor System Contract Validation > should handle unsupported actions gracefully 1ms\n     → expected { …(5) } to have property \"feedback\"\n   ✓ World Module Contract Testing > Sensorimotor System Contract Validation > should respect timeout constraints 1ms\n   ✓ World Module Contract Testing > Inter-Module Contract Integration > should integrate raycast engine with perception system 0ms\n   × World Module Contract Testing > Inter-Module Contract Integration > should integrate navigation with sensorimotor execution 4ms\n     → expected false to be true // Object.is equality\n   ✓ World Module Contract Testing > Inter-Module Contract Integration > should handle cross-module event communication 1ms\n   ✓ World Module Contract Testing > External Interface Contracts > should integrate with Core module arbiter 2ms\n   ✓ World Module Contract Testing > External Interface Contracts > should integrate with MCP capabilities interface 11ms\n   ✓ World Module Contract Testing > External Interface Contracts > should track performance metrics with Core module 4ms\n ❯ src/__tests__/embodied-consciousness-tests.test.ts (11 tests | 6 failed) 150ms\n   ✓ Embodied Consciousness Tests > Visible-Only Sensing Discipline > should only perceive objects within line of sight 11ms\n   ✓ Embodied Consciousness Tests > Visible-Only Sensing Discipline > should respect visual field boundaries 1ms\n   ✓ Embodied Consciousness Tests > Visible-Only Sensing Discipline > should handle occlusion correctly 2ms\n   × Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should maintain spatial continuity during movement 41ms\n     → expected false to be true // Object.is equality\n   × Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should respect physical reachability constraints 3ms\n     → expected false to be true // Object.is equality\n   ✓ Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should maintain coherent spatial memory 2ms\n   ✓ Embodied Consciousness Tests > Temporal Consistency and Learning > should maintain perceptual consistency across time 69ms\n   × Embodied Consciousness Tests > Temporal Consistency and Learning > should adapt to environmental changes appropriately 2ms\n     → expected 0 to be greater than 0\n   × Embodied Consciousness Tests > Temporal Consistency and Learning > should demonstrate learning through exploration 6ms\n     → expected 0 to be greater than 0\n   × Embodied Consciousness Tests > Integrated Consciousness Assessment > should demonstrate coherent embodied consciousness 3ms\n     → Cannot read properties of undefined (reading 'length')\n   × Embodied Consciousness Tests > Integrated Consciousness Assessment > should maintain embodied constraints under stress 9ms\n     → Cannot read properties of undefined (reading 'length')\n ✓ src/sensorimotor/__tests__/sensorimotor-integration.test.ts (28 tests) 564ms\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle diagonal_movement correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Comprehensive Performance Report > generate performance baseline report\n\n=== World Module Performance Report ===\nBenchmarks: 0/4 passed\n\nDetailed Results:\nraycast_single:\n  Status: FAIL\n  Avg Latency: 0.01ms\n  P95 Latency: 0.01ms\n  Memory: 36.10KB\n  Throughput: 30000.00 ops/sec\n  Issues: Memory increase 36968 bytes exceeds limit 4096 bytes\n\nraycast_cone_64rays:\n  Status: FAIL\n  Avg Latency: 0.13ms\n  P95 Latency: 0.71ms\n  Memory: 1419.34KB\n  Throughput: 7500.00 ops/sec\n  Issues: Memory increase 1453408 bytes exceeds limit 32768 bytes\n\nraycast_grid_16x16:\n  Status: FAIL\n  Avg Latency: 2.47ms\n  P95 Latency: 20.09ms\n  Memory: 6715.64KB\n  Throughput: 405.41 ops/sec\n  Issues: P95 latency 20.09ms exceeds limit 15ms, Memory increase 6876816 bytes exceeds limit 65536 bytes\n\npathfind_short_distance:\n  Status: FAIL\n  Avg Latency: 4.92ms\n  P95 Latency: 22.47ms\n  Memory: 3358.16KB\n  Throughput: 202.70 ops/sec\n  Issues: P95 latency 22.47ms exceeds limit 10ms, Memory increase 3438760 bytes exceeds limit 16384 bytes\n\n\n ❯ src/__tests__/world-performance-regression.test.ts (13 tests | 8 failed) 836ms\n   × World Module Performance Regression Tests > Raycast Performance > single ray performance meets requirements 20ms\n     → expected false to be true // Object.is equality\n   ✓ World Module Performance Regression Tests > Raycast Performance > cone casting performance meets requirements 11ms\n   × World Module Performance Regression Tests > Raycast Performance > grid casting performance meets requirements 28ms\n     → expected false to be true // Object.is equality\n   × World Module Performance Regression Tests > Navigation Performance > short distance pathfinding performance 40ms\n     → expected false to be true // Object.is equality\n   × World Module Performance Regression Tests > Navigation Performance > medium distance pathfinding performance 33ms\n     → expected false to be true // Object.is equality\n   ✓ World Module Performance Regression Tests > Navigation Performance > long distance pathfinding performance 13ms\n   × World Module Performance Regression Tests > Perception Performance > basic visual field processing performance 5ms\n     → expected false to be true // Object.is equality\n   ✓ World Module Performance Regression Tests > Perception Performance > complex scene processing performance 1ms\n   × World Module Performance Regression Tests > Action Execution Performance > simple action execution performance 4ms\n     → expected false to be true // Object.is equality\n   × World Module Performance Regression Tests > Action Execution Performance > complex action sequence performance 1ms\n     → expected false to be true // Object.is equality\n   ✓ World Module Performance Regression Tests > Memory Usage Regression > sustained operation memory usage 49ms\n   ✓ World Module Performance Regression Tests > Memory Usage Regression > memory leak detection in repeated operations  322ms\n   × World Module Performance Regression Tests > Comprehensive Performance Report > generate performance baseline report 297ms\n     → expected 0 to be greater than 0.8\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle vertical_navigation correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle lava_avoidance correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\n ✓ src/__tests__/visible-sensing-integration.test.ts (25 tests) 1577ms\n   ✓ Visible-Only Sensing Integration > Resource Discovery and Tracking > should emit resource discovery events  1001ms\n ✓ src/__tests__/perception-golden-tests.test.ts (14 tests | 4 skipped) 15ms\n ✓ src/__tests__/ray-casting-properties.test.ts (8 tests) 142ms\n ❯ src/navigation/__tests__/navigation-integration.test.ts (34 tests | 1 failed) 2966ms\n   ✓ Navigation System Integration > Configuration and Initialization > should validate and accept valid configuration 5ms\n   ✓ Navigation System Integration > Configuration and Initialization > should reject invalid configuration 1ms\n   ✓ Navigation System Integration > Configuration and Initialization > should initialize with proper component integration 0ms\n   ✓ Navigation System Integration > Configuration and Initialization > should provide initial metrics 1ms\n   ✓ Navigation System Integration > Graph Building and World Representation > should build navigation graph for world region 149ms\n   ✓ Navigation System Integration > Graph Building and World Representation > should handle world region with obstacles 17ms\n   × Navigation System Integration > Path Planning > should plan basic path from start to goal 425ms\n     → expected false to be true // Object.is equality\n   ✓ Navigation System Integration > Path Planning > should validate path planning requests  457ms\n   ✓ Navigation System Integration > Path Planning > should handle unreachable goals gracefully 265ms\n   ✓ Navigation System Integration > Path Planning > should respect planning timeout  588ms\n   ✓ Navigation System Integration > Path Planning > should emit path-planned events 84ms\n   ✓ Navigation System Integration > Dynamic Replanning > should handle world changes with replanning 191ms\n   ✓ Navigation System Integration > Dynamic Replanning > should ignore non-navigation changes 155ms\n   ✓ Navigation System Integration > Dynamic Replanning > should handle hazard changes 150ms\n   ✓ Navigation System Integration > Dynamic Replanning > should emit path-updated events 149ms\n   ✓ Navigation System Integration > Movement Execution > should provide next navigation step 14ms\n   ✓ Navigation System Integration > Movement Execution > should detect goal reached 14ms\n   ✓ Navigation System Integration > Movement Execution > should handle obstacle detection during movement 13ms\n   ✓ Navigation System Integration > Movement Execution > should emit navigation-step events 16ms\n   ✓ Navigation System Integration > Environmental Hazards and Cost Calculation > should incorporate hazards into pathfinding 89ms\n   ✓ Navigation System Integration > Environmental Hazards and Cost Calculation > should handle different hazard types 44ms\n   ✓ Navigation System Integration > Performance and Metrics > should track navigation metrics 21ms\n   ✓ Navigation System Integration > Performance and Metrics > should provide comprehensive statistics 0ms\n   ✓ Navigation System Integration > Performance and Metrics > should emit performance warnings 101ms\n   ✓ Navigation System Integration > Performance and Metrics > should handle navigation status tracking 14ms\n   ✓ Individual Navigation Components > NavigationGraph > should build graph from world region 1ms\n   ✓ Individual Navigation Components > NavigationGraph > should find neighbors for nodes 0ms\n   ✓ Individual Navigation Components > NavigationGraph > should project world positions to graph nodes 1ms\n   ✓ Individual Navigation Components > NavigationGraph > should provide graph statistics 0ms\n   ✓ Individual Navigation Components > DynamicCostCalculator > should calculate basic movement costs 0ms\n   ✓ Individual Navigation Components > DynamicCostCalculator > should apply hazard penalties 0ms\n   ✓ Individual Navigation Components > DynamicCostCalculator > should calculate lighting costs 0ms\n   ✓ Individual Navigation Components > DynamicCostCalculator > should track hazard statistics 0ms\n   ✓ Individual Navigation Components > DynamicCostCalculator > should provide cost analysis 1ms\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle mob_avoidance_night correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle mob_avoidance_night correctly\nHazard path planning failed: No path found within computation limits\nStart position: { x: 0, y: 64, z: 0 }\nGoal position: { x: 15, y: 64, z: 15 }\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle water_crossing correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Dynamic Replanning Scenarios > should handle blocked_path_replan correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Dynamic Replanning Scenarios > should handle hazard_appears correctly\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Performance Consistency > repeated identical requests produce consistent results\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\nstdout | src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Performance Consistency > pathfinding scales appropriately with distance\nGraph built with: 2883 nodes and 55084 edges\nStart node exists: true\nGoal node exists: true\n\n ❯ src/__tests__/navigation-golden-tests.test.ts (10 tests | 8 failed) 8159ms\n   × Navigation Golden Tests > Basic Pathfinding Scenarios > should handle simple_straight_line correctly 248ms\n     → expected 20 to be close to 10, received difference is 10, but expected 0.05\n   × Navigation Golden Tests > Basic Pathfinding Scenarios > should handle diagonal_movement correctly 682ms\n     → expected 20 to be close to 14.14, received difference is 5.859999999999999, but expected 0.05\n   × Navigation Golden Tests > Basic Pathfinding Scenarios > should handle vertical_navigation correctly 171ms\n     → expected 6 to be close to 12, received difference is 6, but expected 0.05\n   × Navigation Golden Tests > Hazard Avoidance Scenarios > should handle lava_avoidance correctly 2015ms\n     → expected 952 to be less than 100\n   × Navigation Golden Tests > Hazard Avoidance Scenarios > should handle mob_avoidance_night correctly 1294ms\n     → expected false to be true // Object.is equality\n   × Navigation Golden Tests > Hazard Avoidance Scenarios > should handle water_crossing correctly 1017ms\n     → expected 774 to be less than 75\n   × Navigation Golden Tests > Dynamic Replanning Scenarios > should handle blocked_path_replan correctly 1887ms\n     → expected 802 to be less than 50\n   × Navigation Golden Tests > Dynamic Replanning Scenarios > should handle hazard_appears correctly 310ms\n     → expected 30 to be greater than 30\n   ✓ Navigation Golden Tests > Performance Consistency > repeated identical requests produce consistent results 103ms\n   ✓ Navigation Golden Tests > Performance Consistency > pathfinding scales appropriately with distance  432ms\n ❯ src/perception/__tests__/perception-integration.test.ts (28 tests | 1 failed) 30353ms\n   ✓ Perception Integration System > Configuration and Initialization > should validate and accept valid configuration 7ms\n   ✓ Perception Integration System > Configuration and Initialization > should validate agent state 1ms\n   ✓ Perception Integration System > Configuration and Initialization > should reject invalid configuration 1ms\n   ✓ Perception Integration System > Configuration and Initialization > should initialize with proper component integration 1ms\n   ✓ Perception Integration System > Perception Updates > should perform complete perception update 45ms\n   ✓ Perception Integration System > Perception Updates > should handle multiple perception updates 31ms\n   ✓ Perception Integration System > Perception Updates > should track performance metrics 21ms\n   ✓ Perception Integration System > Perception Updates > should emit perception events 6ms\n   ✓ Perception Integration System > Spatial Awareness Queries > should query perceptual awareness of area 1ms\n   ✓ Perception Integration System > Spatial Awareness Queries > should filter objects by confidence threshold 0ms\n   ✓ Perception Integration System > Spatial Awareness Queries > should provide exploration recommendations 1ms\n   ✓ Perception Integration System > Object Tracking and Recognition > should track objects across updates 10ms\n   ✓ Perception Integration System > Object Tracking and Recognition > should filter tracked objects 0ms\n   ✓ Perception Integration System > Object Tracking and Recognition > should identify perception gaps 2ms\n   ✓ Perception Integration System > Performance and Resource Management > should respect performance limits 12ms\n   × Perception Integration System > Performance and Resource Management > should emit performance warnings 30005ms\n     → Test timed out in 30000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n   ✓ Perception Integration System > Performance and Resource Management > should provide memory usage estimates 0ms\n   ✓ Perception Integration System > Event System > should emit object discovery events 100ms\n   ✓ Perception Integration System > Event System > should emit object loss events 52ms\n   ✓ Perception Integration System > Event System > should emit attention shift events 53ms\n   ✓ Individual Component Tests > VisualFieldManager > should update visual field correctly 1ms\n   ✓ Individual Component Tests > VisualFieldManager > should calculate visual acuity correctly 1ms\n   ✓ Individual Component Tests > VisualFieldManager > should handle visual attention management 0ms\n   ✓ Individual Component Tests > ObjectRecognition > should calculate recognition confidence 0ms\n   ✓ Individual Component Tests > ObjectRecognition > should provide recognition statistics 0ms\n   ✓ Individual Component Tests > ConfidenceTracker > should record new observations 0ms\n   ✓ Individual Component Tests > ConfidenceTracker > should provide confidence statistics 0ms\n   ✓ Individual Component Tests > ConfidenceTracker > should prune stale observations 0ms\n\n Test Files  7 failed | 4 passed (11)\n      Tests  31 failed | 166 passed | 4 skipped (201)\n   Start at  18:04:02\n   Duration  31.07s (transform 1.44s, setup 0ms, collect 4.34s, tests 44.91s, environment 3ms, prepare 2.10s)\n\n ELIFECYCLE  Test failed. See above for more details.\n\n\n⎯⎯⎯⎯⎯⎯ Failed Tests 31 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should maintain spatial continuity during movement\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:667:34\n    665| \n    666|       const pathResult = await navigationSystem.planPath(pathRequest);\n    667|       expect(pathResult.success).toBe(true);\n       |                                  ^\n    668| \n    669|       // Validate spatial continuity\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should respect physical reachability constraints\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:778:36\n    776|             }\n    777|           } else {\n    778|             expect(result.success).toBe(true);\n       |                                    ^\n    779|           }\n    780|         } catch (error) {\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Temporal Consistency and Learning > should adapt to environmental changes appropriately\nAssertionError: expected 0 to be greater than 0\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:916:52\n    914| \n    915|       // Should detect the new object\n    916|       expect(updatedResult.detectedObjects.length).toBeGreaterThan(\n       |                                                    ^\n    917|         initialObjectCount\n    918|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Temporal Consistency and Learning > should demonstrate learning through exploration\nAssertionError: expected 0 to be greater than 0\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:983:9\n    981|       expect(\n    982|         knowledgeAccumulation[knowledgeAccumulation.length - 1].unique…\n    983|       ).toBeGreaterThan(knowledgeAccumulation[0].uniqueObjects);\n       |         ^\n    984| \n    985|       expect(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Integrated Consciousness Assessment > should demonstrate coherent embodied consciousness\nTypeError: Cannot read properties of undefined (reading 'length')\n ❯ calculateBodyAwareness src/__tests__/embodied-consciousness-tests.test.ts:440:42\n    438|     if (navigationResult?.path) {\n    439|       const path = navigationResult.path;\n    440|       for (let i = 1; i < path.waypoints.length; i++) {\n       |                                          ^\n    441|         const prev = path.waypoints[i - 1];\n    442|         const curr = path.waypoints[i];\n ❯ calculateConsciousnessMetrics src/__tests__/embodied-consciousness-tests.test.ts:361:27\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:1072:23\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Integrated Consciousness Assessment > should maintain embodied constraints under stress\nTypeError: Cannot read properties of undefined (reading 'length')\n ❯ calculateBodyAwareness src/__tests__/embodied-consciousness-tests.test.ts:440:42\n    438|     if (navigationResult?.path) {\n    439|       const path = navigationResult.path;\n    440|       for (let i = 1; i < path.waypoints.length; i++) {\n       |                                          ^\n    441|         const prev = path.waypoints[i - 1];\n    442|         const curr = path.waypoints[i];\n ❯ calculateConsciousnessMetrics src/__tests__/embodied-consciousness-tests.test.ts:361:27\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:1185:25\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle simple_straight_line correctly\nAssertionError: expected 20 to be close to 10, received difference is 10, but expected 0.05\n ❯ src/__tests__/navigation-golden-tests.test.ts:250:36\n    248| \n    249|         // Validate path properties\n    250|         expect(result.totalLength).toBeCloseTo(scenario.expectedPath.l…\n       |                                    ^\n    251|         expect(result.estimatedCost).toBeCloseTo(\n    252|           scenario.expectedPath.totalCost,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle diagonal_movement correctly\nAssertionError: expected 20 to be close to 14.14, received difference is 5.859999999999999, but expected 0.05\n ❯ src/__tests__/navigation-golden-tests.test.ts:250:36\n    248| \n    249|         // Validate path properties\n    250|         expect(result.totalLength).toBeCloseTo(scenario.expectedPath.l…\n       |                                    ^\n    251|         expect(result.estimatedCost).toBeCloseTo(\n    252|           scenario.expectedPath.totalCost,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle vertical_navigation correctly\nAssertionError: expected 6 to be close to 12, received difference is 6, but expected 0.05\n ❯ src/__tests__/navigation-golden-tests.test.ts:251:38\n    249|         // Validate path properties\n    250|         expect(result.totalLength).toBeCloseTo(scenario.expectedPath.l…\n    251|         expect(result.estimatedCost).toBeCloseTo(\n       |                                      ^\n    252|           scenario.expectedPath.totalCost,\n    253|           1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle lava_avoidance correctly\nAssertionError: expected 952 to be less than 100\n ❯ src/__tests__/navigation-golden-tests.test.ts:446:30\n    444|           scenario.expectedPath.planningTime.replace(/[<>ms]/g, '')\n    445|         );\n    446|         expect(planningTime).toBeLessThan(maxTime);\n       |                              ^\n    447| \n    448|         // Validate path length is within expected bounds\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle mob_avoidance_night correctly\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/navigation-golden-tests.test.ts:437:32\n    435|           console.log('Goal position:', scenario.request.goal);\n    436|         }\n    437|         expect(result.success).toBe(true);\n       |                                ^\n    438|         expect(result.path).toBeDefined();\n    439| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle water_crossing correctly\nAssertionError: expected 774 to be less than 75\n ❯ src/__tests__/navigation-golden-tests.test.ts:446:30\n    444|           scenario.expectedPath.planningTime.replace(/[<>ms]/g, '')\n    445|         );\n    446|         expect(planningTime).toBeLessThan(maxTime);\n       |                              ^\n    447| \n    448|         // Validate path length is within expected bounds\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Dynamic Replanning Scenarios > should handle blocked_path_replan correctly\nAssertionError: expected 802 to be less than 50\n ❯ src/__tests__/navigation-golden-tests.test.ts:642:30\n    640|             scenario.expectedReplanning.replanTime.replace(/[<>ms]/g, …\n    641|           );\n    642|           expect(replanTime).toBeLessThan(maxReplanTime);\n       |                              ^\n    643| \n    644|           // Validate new path properties\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Dynamic Replanning Scenarios > should handle hazard_appears correctly\nAssertionError: expected 30 to be greater than 30\n ❯ src/__tests__/navigation-golden-tests.test.ts:653:48\n    651| \n    652|           if (scenario.expectedReplanning.increasedCost) {\n    653|             expect(replanResult.estimatedCost).toBeGreaterThan(\n       |                                                ^\n    654|               initialPath.estimatedCost\n    655|             );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Raycast Engine Contract Validation > should satisfy castRay input/output contract\nAssertionError: expected { …(3) } to have property \"blockType\"\n ❯ src/__tests__/world-contract-testing.test.ts:512:24\n    510|         expect(result).toHaveProperty('position');\n    511|         expect(result).toHaveProperty('distance');\n    512|         expect(result).toHaveProperty('blockType');\n       |                        ^\n    513|         expect(result).toHaveProperty('normal');\n    514| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Raycast Engine Contract Validation > should satisfy castCone input/output contract\nAssertionError: expected { …(3) } to have property \"blockType\"\n ❯ src/__tests__/world-contract-testing.test.ts:552:21\n    550|         expect(hit).toHaveProperty('position');\n    551|         expect(hit).toHaveProperty('distance');\n    552|         expect(hit).toHaveProperty('blockType');\n       |                     ^\n    553|         expect(hit).toHaveProperty('normal');\n    554| \n ❯ src/__tests__/world-contract-testing.test.ts:549:14\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Perception System Contract Validation > should satisfy processVisualField input/output contract\nAssertionError: expected 0 to be greater than or equal to 0.3\n ❯ src/__tests__/world-contract-testing.test.ts:750:40\n    748|         contract.perceptionSystem.constraints.maxProcessingTime\n    749|       );\n    750|       expect(result.overallConfidence).toBeGreaterThanOrEqual(\n       |                                        ^\n    751|         contract.perceptionSystem.constraints.minConfidence\n    752|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Sensorimotor System Contract Validation > should satisfy executeAction input/output contract\nAssertionError: expected { actionId: 'test-move-action', …(4) } to have property \"feedback\"\n ❯ src/__tests__/world-contract-testing.test.ts:814:22\n    812|       expect(result).toHaveProperty('actionId');\n    813|       expect(result).toHaveProperty('executionTime');\n    814|       expect(result).toHaveProperty('feedback');\n       |                      ^\n    815| \n    816|       expect(typeof result.success).toBe('boolean');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Sensorimotor System Contract Validation > should handle unsupported actions gracefully\nAssertionError: expected { …(5) } to have property \"feedback\"\n ❯ src/__tests__/world-contract-testing.test.ts:871:24\n    869| \n    870|       if (!result.success) {\n    871|         expect(result).toHaveProperty('feedback');\n       |                        ^\n    872|         expect(typeof result.feedback).toBe('string');\n    873|       }\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Inter-Module Contract Integration > should integrate navigation with sensorimotor execution\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-contract-testing.test.ts:957:34\n    955| \n    956|       const pathResult = await navigationSystem.planPath(pathRequest);\n    957|       expect(pathResult.success).toBe(true);\n       |                                  ^\n    958| \n    959|       if (pathResult.success && pathResult.path) {\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Raycast Performance > single ray performance meets requirements\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:428:29\n    426|       );\n    427| \n    428|       expect(result.passed).toBe(true);\n       |                             ^\n    429|       if (!result.passed) {\n    430|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Raycast Performance > grid casting performance meets requirements\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:468:29\n    466|       );\n    467| \n    468|       expect(result.passed).toBe(true);\n       |                             ^\n    469|       if (!result.passed) {\n    470|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Navigation Performance > short distance pathfinding performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:502:29\n    500|       );\n    501| \n    502|       expect(result.passed).toBe(true);\n       |                             ^\n    503|       if (!result.passed) {\n    504|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Navigation Performance > medium distance pathfinding performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:534:29\n    532|       );\n    533| \n    534|       expect(result.passed).toBe(true);\n       |                             ^\n    535|       if (!result.passed) {\n    536|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Perception Performance > basic visual field processing performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:590:29\n    588|       );\n    589| \n    590|       expect(result.passed).toBe(true);\n       |                             ^\n    591|       if (!result.passed) {\n    592|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Action Execution Performance > simple action execution performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:639:29\n    637|       );\n    638| \n    639|       expect(result.passed).toBe(true);\n       |                             ^\n    640|       if (!result.passed) {\n    641|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Action Execution Performance > complex action sequence performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:671:29\n    669|       );\n    670| \n    671|       expect(result.passed).toBe(true);\n       |                             ^\n    672|       if (!result.passed) {\n    673|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Comprehensive Performance Report > generate performance baseline report\nAssertionError: expected 0 to be greater than 0.8\n ❯ src/__tests__/world-performance-regression.test.ts:874:50\n    872| \n    873|       // Overall test should pass if majority of benchmarks pass\n    874|       expect(passedBenchmarks / totalBenchmarks).toBeGreaterThan(0.8);\n       |                                                  ^\n    875|     });\n    876|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/31]⎯\n\n FAIL  src/perception/__tests__/perception-integration.test.ts > Perception Integration System > Performance and Resource Management > should emit performance warnings\nError: Test timed out in 30000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n ❯ src/perception/__tests__/perception-integration.test.ts:312:5\n    310|     });\n    311| \n    312|     test('should emit performance warnings', async () => {\n       |     ^\n    313|       const strictConfig = {\n    314|         ...defaultConfig,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/31]⎯\n\n FAIL  src/navigation/__tests__/navigation-integration.test.ts > Navigation System Integration > Path Planning > should plan basic path from start to goal\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/navigation/__tests__/navigation-integration.test.ts:172:30\n    170|       const result = await navigationSystem.planPath(request);\n    171| \n    172|       expect(result.success).toBe(true);\n       |                              ^\n    173|       expect(result.path.length).toBeGreaterThan(0);\n    174|       expect(result.planningTime).toBeGreaterThan(0);\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/31]⎯\n\n FAIL  src/place-graph/__tests__/place-graph-integration.test.ts > Place Graph Integration > Spatial Navigator > should find paths between places\nAssertionError: Target cannot be null or undefined.\n ❯ src/place-graph/__tests__/place-graph-integration.test.ts:528:28\n    526| \n    527|       expect(path).toBeDefined();\n    528|       expect(path?.places).toHaveLength(3);\n       |                            ^\n    529|       expect(path?.places[0]).toBe(home.id);\n    530|       expect(path?.places[1]).toBe(forest.id);\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/31]⎯\n\n",
          "error": "\n⎯⎯⎯⎯⎯⎯ Failed Tests 31 ⎯⎯⎯⎯⎯⎯⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should maintain spatial continuity during movement\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:667:34\n    665| \n    666|       const pathResult = await navigationSystem.planPath(pathRequest);\n    667|       expect(pathResult.success).toBe(true);\n       |                                  ^\n    668| \n    669|       // Validate spatial continuity\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Spatial Continuity and Body Awareness > should respect physical reachability constraints\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:778:36\n    776|             }\n    777|           } else {\n    778|             expect(result.success).toBe(true);\n       |                                    ^\n    779|           }\n    780|         } catch (error) {\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Temporal Consistency and Learning > should adapt to environmental changes appropriately\nAssertionError: expected 0 to be greater than 0\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:916:52\n    914| \n    915|       // Should detect the new object\n    916|       expect(updatedResult.detectedObjects.length).toBeGreaterThan(\n       |                                                    ^\n    917|         initialObjectCount\n    918|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Temporal Consistency and Learning > should demonstrate learning through exploration\nAssertionError: expected 0 to be greater than 0\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:983:9\n    981|       expect(\n    982|         knowledgeAccumulation[knowledgeAccumulation.length - 1].unique…\n    983|       ).toBeGreaterThan(knowledgeAccumulation[0].uniqueObjects);\n       |         ^\n    984| \n    985|       expect(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Integrated Consciousness Assessment > should demonstrate coherent embodied consciousness\nTypeError: Cannot read properties of undefined (reading 'length')\n ❯ calculateBodyAwareness src/__tests__/embodied-consciousness-tests.test.ts:440:42\n    438|     if (navigationResult?.path) {\n    439|       const path = navigationResult.path;\n    440|       for (let i = 1; i < path.waypoints.length; i++) {\n       |                                          ^\n    441|         const prev = path.waypoints[i - 1];\n    442|         const curr = path.waypoints[i];\n ❯ calculateConsciousnessMetrics src/__tests__/embodied-consciousness-tests.test.ts:361:27\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:1072:23\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/31]⎯\n\n FAIL  src/__tests__/embodied-consciousness-tests.test.ts > Embodied Consciousness Tests > Integrated Consciousness Assessment > should maintain embodied constraints under stress\nTypeError: Cannot read properties of undefined (reading 'length')\n ❯ calculateBodyAwareness src/__tests__/embodied-consciousness-tests.test.ts:440:42\n    438|     if (navigationResult?.path) {\n    439|       const path = navigationResult.path;\n    440|       for (let i = 1; i < path.waypoints.length; i++) {\n       |                                          ^\n    441|         const prev = path.waypoints[i - 1];\n    442|         const curr = path.waypoints[i];\n ❯ calculateConsciousnessMetrics src/__tests__/embodied-consciousness-tests.test.ts:361:27\n ❯ src/__tests__/embodied-consciousness-tests.test.ts:1185:25\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle simple_straight_line correctly\nAssertionError: expected 20 to be close to 10, received difference is 10, but expected 0.05\n ❯ src/__tests__/navigation-golden-tests.test.ts:250:36\n    248| \n    249|         // Validate path properties\n    250|         expect(result.totalLength).toBeCloseTo(scenario.expectedPath.l…\n       |                                    ^\n    251|         expect(result.estimatedCost).toBeCloseTo(\n    252|           scenario.expectedPath.totalCost,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle diagonal_movement correctly\nAssertionError: expected 20 to be close to 14.14, received difference is 5.859999999999999, but expected 0.05\n ❯ src/__tests__/navigation-golden-tests.test.ts:250:36\n    248| \n    249|         // Validate path properties\n    250|         expect(result.totalLength).toBeCloseTo(scenario.expectedPath.l…\n       |                                    ^\n    251|         expect(result.estimatedCost).toBeCloseTo(\n    252|           scenario.expectedPath.totalCost,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Basic Pathfinding Scenarios > should handle vertical_navigation correctly\nAssertionError: expected 6 to be close to 12, received difference is 6, but expected 0.05\n ❯ src/__tests__/navigation-golden-tests.test.ts:251:38\n    249|         // Validate path properties\n    250|         expect(result.totalLength).toBeCloseTo(scenario.expectedPath.l…\n    251|         expect(result.estimatedCost).toBeCloseTo(\n       |                                      ^\n    252|           scenario.expectedPath.totalCost,\n    253|           1\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle lava_avoidance correctly\nAssertionError: expected 952 to be less than 100\n ❯ src/__tests__/navigation-golden-tests.test.ts:446:30\n    444|           scenario.expectedPath.planningTime.replace(/[<>ms]/g, '')\n    445|         );\n    446|         expect(planningTime).toBeLessThan(maxTime);\n       |                              ^\n    447| \n    448|         // Validate path length is within expected bounds\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle mob_avoidance_night correctly\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/navigation-golden-tests.test.ts:437:32\n    435|           console.log('Goal position:', scenario.request.goal);\n    436|         }\n    437|         expect(result.success).toBe(true);\n       |                                ^\n    438|         expect(result.path).toBeDefined();\n    439| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Hazard Avoidance Scenarios > should handle water_crossing correctly\nAssertionError: expected 774 to be less than 75\n ❯ src/__tests__/navigation-golden-tests.test.ts:446:30\n    444|           scenario.expectedPath.planningTime.replace(/[<>ms]/g, '')\n    445|         );\n    446|         expect(planningTime).toBeLessThan(maxTime);\n       |                              ^\n    447| \n    448|         // Validate path length is within expected bounds\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Dynamic Replanning Scenarios > should handle blocked_path_replan correctly\nAssertionError: expected 802 to be less than 50\n ❯ src/__tests__/navigation-golden-tests.test.ts:642:30\n    640|             scenario.expectedReplanning.replanTime.replace(/[<>ms]/g, …\n    641|           );\n    642|           expect(replanTime).toBeLessThan(maxReplanTime);\n       |                              ^\n    643| \n    644|           // Validate new path properties\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/31]⎯\n\n FAIL  src/__tests__/navigation-golden-tests.test.ts > Navigation Golden Tests > Dynamic Replanning Scenarios > should handle hazard_appears correctly\nAssertionError: expected 30 to be greater than 30\n ❯ src/__tests__/navigation-golden-tests.test.ts:653:48\n    651| \n    652|           if (scenario.expectedReplanning.increasedCost) {\n    653|             expect(replanResult.estimatedCost).toBeGreaterThan(\n       |                                                ^\n    654|               initialPath.estimatedCost\n    655|             );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Raycast Engine Contract Validation > should satisfy castRay input/output contract\nAssertionError: expected { …(3) } to have property \"blockType\"\n ❯ src/__tests__/world-contract-testing.test.ts:512:24\n    510|         expect(result).toHaveProperty('position');\n    511|         expect(result).toHaveProperty('distance');\n    512|         expect(result).toHaveProperty('blockType');\n       |                        ^\n    513|         expect(result).toHaveProperty('normal');\n    514| \n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Raycast Engine Contract Validation > should satisfy castCone input/output contract\nAssertionError: expected { …(3) } to have property \"blockType\"\n ❯ src/__tests__/world-contract-testing.test.ts:552:21\n    550|         expect(hit).toHaveProperty('position');\n    551|         expect(hit).toHaveProperty('distance');\n    552|         expect(hit).toHaveProperty('blockType');\n       |                     ^\n    553|         expect(hit).toHaveProperty('normal');\n    554| \n ❯ src/__tests__/world-contract-testing.test.ts:549:14\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Perception System Contract Validation > should satisfy processVisualField input/output contract\nAssertionError: expected 0 to be greater than or equal to 0.3\n ❯ src/__tests__/world-contract-testing.test.ts:750:40\n    748|         contract.perceptionSystem.constraints.maxProcessingTime\n    749|       );\n    750|       expect(result.overallConfidence).toBeGreaterThanOrEqual(\n       |                                        ^\n    751|         contract.perceptionSystem.constraints.minConfidence\n    752|       );\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Sensorimotor System Contract Validation > should satisfy executeAction input/output contract\nAssertionError: expected { actionId: 'test-move-action', …(4) } to have property \"feedback\"\n ❯ src/__tests__/world-contract-testing.test.ts:814:22\n    812|       expect(result).toHaveProperty('actionId');\n    813|       expect(result).toHaveProperty('executionTime');\n    814|       expect(result).toHaveProperty('feedback');\n       |                      ^\n    815| \n    816|       expect(typeof result.success).toBe('boolean');\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Sensorimotor System Contract Validation > should handle unsupported actions gracefully\nAssertionError: expected { …(5) } to have property \"feedback\"\n ❯ src/__tests__/world-contract-testing.test.ts:871:24\n    869| \n    870|       if (!result.success) {\n    871|         expect(result).toHaveProperty('feedback');\n       |                        ^\n    872|         expect(typeof result.feedback).toBe('string');\n    873|       }\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/31]⎯\n\n FAIL  src/__tests__/world-contract-testing.test.ts > World Module Contract Testing > Inter-Module Contract Integration > should integrate navigation with sensorimotor execution\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-contract-testing.test.ts:957:34\n    955| \n    956|       const pathResult = await navigationSystem.planPath(pathRequest);\n    957|       expect(pathResult.success).toBe(true);\n       |                                  ^\n    958| \n    959|       if (pathResult.success && pathResult.path) {\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Raycast Performance > single ray performance meets requirements\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:428:29\n    426|       );\n    427| \n    428|       expect(result.passed).toBe(true);\n       |                             ^\n    429|       if (!result.passed) {\n    430|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Raycast Performance > grid casting performance meets requirements\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:468:29\n    466|       );\n    467| \n    468|       expect(result.passed).toBe(true);\n       |                             ^\n    469|       if (!result.passed) {\n    470|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Navigation Performance > short distance pathfinding performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:502:29\n    500|       );\n    501| \n    502|       expect(result.passed).toBe(true);\n       |                             ^\n    503|       if (!result.passed) {\n    504|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Navigation Performance > medium distance pathfinding performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:534:29\n    532|       );\n    533| \n    534|       expect(result.passed).toBe(true);\n       |                             ^\n    535|       if (!result.passed) {\n    536|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Perception Performance > basic visual field processing performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:590:29\n    588|       );\n    589| \n    590|       expect(result.passed).toBe(true);\n       |                             ^\n    591|       if (!result.passed) {\n    592|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Action Execution Performance > simple action execution performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:639:29\n    637|       );\n    638| \n    639|       expect(result.passed).toBe(true);\n       |                             ^\n    640|       if (!result.passed) {\n    641|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Action Execution Performance > complex action sequence performance\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/__tests__/world-performance-regression.test.ts:671:29\n    669|       );\n    670| \n    671|       expect(result.passed).toBe(true);\n       |                             ^\n    672|       if (!result.passed) {\n    673|         console.warn(\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/31]⎯\n\n FAIL  src/__tests__/world-performance-regression.test.ts > World Module Performance Regression Tests > Comprehensive Performance Report > generate performance baseline report\nAssertionError: expected 0 to be greater than 0.8\n ❯ src/__tests__/world-performance-regression.test.ts:874:50\n    872| \n    873|       // Overall test should pass if majority of benchmarks pass\n    874|       expect(passedBenchmarks / totalBenchmarks).toBeGreaterThan(0.8);\n       |                                                  ^\n    875|     });\n    876|   });\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/31]⎯\n\n FAIL  src/perception/__tests__/perception-integration.test.ts > Perception Integration System > Performance and Resource Management > should emit performance warnings\nError: Test timed out in 30000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\".\n ❯ src/perception/__tests__/perception-integration.test.ts:312:5\n    310|     });\n    311| \n    312|     test('should emit performance warnings', async () => {\n       |     ^\n    313|       const strictConfig = {\n    314|         ...defaultConfig,\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/31]⎯\n\n FAIL  src/navigation/__tests__/navigation-integration.test.ts > Navigation System Integration > Path Planning > should plan basic path from start to goal\nAssertionError: expected false to be true // Object.is equality\n\n- Expected\n+ Received\n\n- true\n+ false\n\n ❯ src/navigation/__tests__/navigation-integration.test.ts:172:30\n    170|       const result = await navigationSystem.planPath(request);\n    171| \n    172|       expect(result.success).toBe(true);\n       |                              ^\n    173|       expect(result.path.length).toBeGreaterThan(0);\n    174|       expect(result.planningTime).toBeGreaterThan(0);\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/31]⎯\n\n FAIL  src/place-graph/__tests__/place-graph-integration.test.ts > Place Graph Integration > Spatial Navigator > should find paths between places\nAssertionError: Target cannot be null or undefined.\n ❯ src/place-graph/__tests__/place-graph-integration.test.ts:528:28\n    526| \n    527|       expect(path).toBeDefined();\n    528|       expect(path?.places).toHaveLength(3);\n       |                            ^\n    529|       expect(path?.places[0]).toBe(home.id);\n    530|       expect(path?.places[1]).toBe(forest.id);\n\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/31]⎯\n\n"
        },
        {
          "checkId": "safety-unit-tests",
          "success": true,
          "duration": 2709,
          "output": "\n> @conscious-bot/safety@0.1.0 test /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety\n> vitest run\n\n\n RUN  v3.2.4 /Users/darianrosebrook/Desktop/Projects/conscious-bot/packages/safety\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should validate and accept valid configuration\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should validate and accept valid configuration\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should validate and accept valid configuration\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should reject invalid configuration\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should reject invalid configuration\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should reject invalid configuration\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize with default configuration when none provided\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize with default configuration when none provided\nSafety monitoring system initialized\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize with default configuration when none provided\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize with default configuration when none provided\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize with default configuration when none provided\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize standard monitoring\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize standard monitoring\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize standard monitoring\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should initialize standard monitoring\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should provide initial system status\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should provide initial system status\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Configuration and Initialization > should provide initial system status\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should collect individual telemetry data\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should collect individual telemetry data\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should collect individual telemetry data\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should collect batch telemetry data\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should collect batch telemetry data\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should collect batch telemetry data\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should validate telemetry data format\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should validate telemetry data format\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should validate telemetry data format\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should record performance metrics\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should record performance metrics\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should record performance metrics\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should handle telemetry collection errors gracefully\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should handle telemetry collection errors gracefully\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Telemetry Collection > should handle telemetry collection errors gracefully\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should register health checks\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should register health checks\nHealth check registered: test_service (test_health_check)\nHealth check registered: test_service\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should register health checks\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should register health checks\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should execute health checks and emit events\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should execute health checks and emit events\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should execute health checks and emit events\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should execute health checks and emit events\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track system health status\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track system health status\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track system health status\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track system health status\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should emit critical health alerts\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should emit critical health alerts\nHealth check registered: always_fail_check (critical_test_check)\nHealth check registered: always_fail_check\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should emit critical health alerts\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should emit critical health alerts\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track component health over time\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track component health over time\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track component health over time\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Health Monitoring > should track component health over time\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should track monitoring system metrics\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should track monitoring system metrics\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should track monitoring system metrics\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should emit performance warnings\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should emit performance warnings\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should emit performance warnings\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should check monitoring system health\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should check monitoring system health\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should check monitoring system health\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should provide comprehensive system status\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should provide comprehensive system status\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > Performance Monitoring > should provide comprehensive system status\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle system health changes\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle system health changes\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle system health changes\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle system health changes\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle monitoring errors gracefully\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle monitoring errors gracefully\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should handle monitoring errors gracefully\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should coordinate telemetry and health monitoring\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should coordinate telemetry and health monitoring\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should coordinate telemetry and health monitoring\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should coordinate telemetry and health monitoring\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should shutdown gracefully\nSafety monitoring system initialized\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should shutdown gracefully\nHealth check registered: memory_usage (system_memory)\nHealth check registered: cpu_usage (system_cpu)\nHealth check registered: disk_space (system_disk)\nHealth check registered: network_connectivity (network_connectivity)\nStandard monitoring initialized with 4 health checks\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should shutdown gracefully\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should shutdown gracefully\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should shutdown gracefully\nShutting down safety monitoring system...\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Safety Monitoring System Integration > System Integration > should shutdown gracefully\nSafety monitoring system shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should register and execute health checks\nHealth check registered: memory_usage (test_check)\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should register and execute health checks\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should execute all registered health checks\nHealth check registered: cpu_usage (check1)\nHealth check registered: memory_usage (check2)\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should execute all registered health checks\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should track system health status\nHealth check registered: disk_space (system_health)\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should track system health status\nHealth monitor shutdown complete\n\nstdout | src/monitoring/__tests__/safety-monitoring-integration.test.ts > Individual Safety Monitoring Components > HealthMonitor > should provide monitoring statistics\nHealth monitor shutdown complete\n\n ✓ src/monitoring/__tests__/safety-monitoring-integration.test.ts (35 tests) 322ms\n ✓ src/privacy/__tests__/privacy-integration.test.ts (22 tests) 823ms\n   ✓ Privacy Module Integration Tests > Consent Manager Tests > should manage consent lifecycle  302ms\n ✓ src/fail-safes/__tests__/fail-safes-integration.test.ts (24 tests) 1472ms\n   ✓ Fail-Safes Module Integration Tests > Error Handling and Edge Cases > should handle component failures gracefully  401ms\n   ✓ Fail-Safes Module Integration Tests > Performance and Scalability > should maintain performance under heavy monitoring load  503ms\n\n Test Files  3 passed (3)\n      Tests  81 passed (81)\n   Start at  18:04:34\n   Duration  1.90s (transform 263ms, setup 0ms, collect 408ms, tests 2.62s, environment 0ms, prepare 155ms)\n\n"
        }
      ],
      "duration": 186936,
      "timestamp": "2025-09-22T01:04:36.810Z"
    },
    {
      "gateId": "security-scan",
      "success": false,
      "score": 0,
      "results": [
        {
          "checkId": "dependency-audit",
          "success": false,
          "duration": 2331,
          "output": "┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ high                │ axios Requests Vulnerable To Possible SSRF and         │\n│                     │ Credential Leakage via Absolute URL                    │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ axios                                                  │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ <0.30.0                                                │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=0.30.0                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__core>mineflayer>minecraft-                   │\n│                     │ protocol>prismarine-auth>@xboxreplay/xboxlive-         │\n│                     │ auth>axios                                             │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-jr5f-v2jv-69x6      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ high                │ Axios is vulnerable to DoS attack through lack of data │\n│                     │ size check                                             │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ axios                                                  │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ <1.12.0                                                │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=1.12.0                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__core>mineflayer>minecraft-                   │\n│                     │ protocol>prismarine-auth>@xboxreplay/xboxlive-         │\n│                     │ auth>axios                                             │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-4hjh-wcwx-xvwj      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ moderate            │ Axios Cross-Site Request Forgery Vulnerability         │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ axios                                                  │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ >=0.8.1 <0.28.0                                        │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=0.28.0                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__core>mineflayer>minecraft-                   │\n│                     │ protocol>prismarine-auth>@xboxreplay/xboxlive-         │\n│                     │ auth>axios                                             │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-wf5p-g6vw-rhxx      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ moderate            │ esbuild enables any website to send any requests to    │\n│                     │ the development server and read the response           │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ esbuild                                                │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ <=0.24.2                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=0.25.0                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__mcp-server>vitest>vite>esbuild               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-67mh-4wv8-2f99      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ low                 │ Vite middleware may serve files starting with the same │\n│                     │ name with the public directory                         │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ vite                                                   │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ <=5.4.19                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=5.4.20                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__mcp-server>vitest>vite                       │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-g4jq-h2w9-997c      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ low                 │ Vite middleware may serve files starting with the same │\n│                     │ name with the public directory                         │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ vite                                                   │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ >=7.1.0 <=7.1.4                                        │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=7.1.5                                                │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__cognition>vitest>vite                        │\n│                     │                                                        │\n│                     │ packages__core>vitest>vite                             │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-g4jq-h2w9-997c      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ low                 │ Vite's `server.fs` settings were not applied to HTML   │\n│                     │ files                                                  │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ vite                                                   │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ <=5.4.19                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=5.4.20                                               │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__mcp-server>vitest>vite                       │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-jqfw-vq24-v9c3      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n┌─────────────────────┬────────────────────────────────────────────────────────┐\n│ low                 │ Vite's `server.fs` settings were not applied to HTML   │\n│                     │ files                                                  │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Package             │ vite                                                   │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Vulnerable versions │ >=7.1.0 <=7.1.4                                        │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Patched versions    │ >=7.1.5                                                │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ Paths               │ packages__cognition>vitest>vite                        │\n│                     │                                                        │\n│                     │ packages__core>vitest>vite                             │\n├─────────────────────┼────────────────────────────────────────────────────────┤\n│ More info           │ https://github.com/advisories/GHSA-jqfw-vq24-v9c3      │\n└─────────────────────┴────────────────────────────────────────────────────────┘\n10 vulnerabilities found\nSeverity: 6 low | 2 moderate | 2 high\n\n",
          "error": "Exit code: 1"
        },
        {
          "checkId": "safety-security-scan",
          "success": false,
          "duration": 266,
          "output": " ERR_PNPM_NO_SCRIPT  Missing script: security-scan\n\nCommand \"security-scan\" not found.\n\n",
          "error": "Exit code: 1"
        }
      ],
      "duration": 2597,
      "timestamp": "2025-09-22T01:04:39.407Z"
    },
    {
      "gateId": "performance-benchmarks",
      "success": false,
      "score": 0,
      "results": [
        {
          "checkId": "core-benchmarks",
          "success": false,
          "duration": 266,
          "output": " ERR_PNPM_NO_SCRIPT  Missing script: benchmark\n\nCommand \"benchmark\" not found.\n\n",
          "error": "Exit code: 1"
        },
        {
          "checkId": "memory-benchmarks",
          "success": false,
          "duration": 260,
          "output": " ERR_PNPM_NO_SCRIPT  Missing script: benchmark\n\nCommand \"benchmark\" not found.\n\n",
          "error": "Exit code: 1"
        }
      ],
      "duration": 526,
      "timestamp": "2025-09-22T01:04:39.933Z"
    },
    {
      "gateId": "integration-tests",
      "success": false,
      "score": 0,
      "results": [
        {
          "checkId": "integration-suite",
          "success": false,
          "duration": 364,
          "output": "undefined\n ERR_PNPM_RECURSIVE_EXEC_FIRST_FAIL  Command \"test:integration\" not found\n\nDid you mean \"pnpm audit:integration\"?\n\n",
          "error": "Exit code: 254"
        }
      ],
      "duration": 364,
      "timestamp": "2025-09-22T01:04:40.297Z"
    }
  ],
  "blockingIssues": [
    "Code Quality failed - blocking deployment",
    "Unit Tests failed - blocking deployment",
    "Security Audit failed - blocking deployment"
  ],
  "recommendations": [
    "CRITICAL: Address all blocking issues before deployment",
    "- Code Quality failed - blocking deployment",
    "- Unit Tests failed - blocking deployment",
    "- Security Audit failed - blocking deployment",
    "Address 5 failed quality gates:",
    "- Code Quality: Score 0.0% (threshold: 90%)",
    "- Unit Tests: Score 16.7% (threshold: 80%)",
    "- Security Audit: Score 0.0% (threshold: 100%)",
    "- Performance Benchmarks: Score 0.0% (threshold: 85%)",
    "- Integration Tests: Score 0.0% (threshold: 80%)",
    "PRIORITY: Fix all Tier 1 (critical) quality gates immediately",
    "PERFORMANCE: Optimize components with low benchmark scores"
  ],
  "trustScore": 63
}