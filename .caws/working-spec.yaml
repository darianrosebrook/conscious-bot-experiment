id: MCP-217
title: "Stabilize MCP integration with core leaf factory"
risk_tier: 2
scope:
  in:
    - "Ensure @conscious-bot/mcp-server declares the runtime dependency on @conscious-bot/core so Node can resolve imports"
    - "Update planning MCP integration to use the real leaf factory API and refresh MCP tools without fallback errors"
    - "Add contract and automated tests validating MCP tool hydration and option execution paths"
  out:
    - "Refactoring behavior tree runner semantics or goal management"
    - "Creating new leaf implementations beyond existing catalog"
    - "Production deployment automation or infra changes"
invariants:
  - "MCP integration must register only leaves with defined spec.name and spec.version"
  - "Planning service must expose MCP tool entries for every registered leaf without throwing TypeError"
  - "Option, leaf, and bot update flows must surface structured errors rather than uncaught exceptions"
acceptance:
  - id: A1
    given: "Planning server bootstraps MCP integration with workspace packages built"
    when: "core leaves register via MCPIntegration.registerLeaf"
    then: "MCP server import succeeds without fallback and listTools returns the registered leaf names"
  - id: A2
    given: "An option registration request is invoked through MCPIntegration.registerOption"
    when: "the MCP server processes the request"
    then: "the option is recorded with status success and the returned id matches id@version"
  - id: A3
    given: "Minecraft interface updates the bot instance"
    when: "MCPIntegration.updateBotInstance is called"
    then: "the bot dependency updates without TypeError and logs a success message"
non_functional:
  a11y:
    - "Server-only change; no UI impact"
  perf:
    api_p95_ms: 250
  security:
    - "No new network exposure; dependency policy remains satisfied"
contracts:
  - type: pact
    path: "contracts/mcp-integration.pact.json"
observability:
  logs:
    - "[MCP] MCP server created successfully"
    - "[MCP] Bot instance updated successfully"
  metrics:
    - "mcp.leaf.registration.count"
    - "mcp.option.registration.success"
  traces:
    - "mcp.integration.register_option"
migrations: []
rollback:
  - "Disable MCP integration via enableMCP=false configuration flag to revert to previous fallback"
